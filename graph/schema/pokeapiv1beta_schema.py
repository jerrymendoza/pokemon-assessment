'''
Autogenereted full schema with sgqlc library
'''

import sgqlc.types


pokeapiv1beta_schema = sgqlc.types.Schema()



########################################################################
# Scalars and Enumerations
########################################################################
Boolean = sgqlc.types.Boolean

Float = sgqlc.types.Float

Int = sgqlc.types.Int

String = sgqlc.types.String

class order_by(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('asc', 'asc_nulls_first', 'asc_nulls_last', 'desc', 'desc_nulls_first', 'desc_nulls_last')


class pokemon_v2_ability_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('generation_id', 'id', 'is_main_series', 'name')


class pokemon_v2_abilitychange_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('ability_id', 'id', 'version_group_id')


class pokemon_v2_abilitychangeeffecttext_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('ability_change_id', 'effect', 'id', 'language_id')


class pokemon_v2_abilityeffecttext_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('ability_id', 'effect', 'id', 'language_id', 'short_effect')


class pokemon_v2_abilityflavortext_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('ability_id', 'flavor_text', 'id', 'language_id', 'version_group_id')


class pokemon_v2_abilityname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('ability_id', 'id', 'language_id', 'name')


class pokemon_v2_berry_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'name', 'natural_gift_power', 'natural_gift_type_id', 'size', 'smoothness', 'soil_dryness')


class pokemon_v2_berryfirmness_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name')


class pokemon_v2_berryfirmnessname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('berry_firmness_id', 'id', 'language_id', 'name')


class pokemon_v2_berryflavor_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('contest_type_id', 'id', 'name')


class pokemon_v2_berryflavormap_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('berry_flavor_id', 'berry_id', 'id', 'potency')


class pokemon_v2_berryflavorname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('berry_flavor_id', 'id', 'language_id', 'name')


class pokemon_v2_characteristic_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('gene_mod_5', 'id', 'stat_id')


class pokemon_v2_characteristicdescription_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('characteristic_id', 'description', 'id', 'language_id')


class pokemon_v2_contestcombo_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('first_move_id', 'id', 'second_move_id')


class pokemon_v2_contesteffect_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('appeal', 'id', 'jam')


class pokemon_v2_contesteffecteffecttext_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('contest_effect_id', 'effect', 'id', 'language_id')


class pokemon_v2_contesteffectflavortext_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('contest_effect_id', 'flavor_text', 'id', 'language_id')


class pokemon_v2_contesttype_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name')


class pokemon_v2_contesttypename_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('color', 'contest_type_id', 'flavor', 'id', 'language_id', 'name')


class pokemon_v2_egggroup_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name')


class pokemon_v2_egggroupname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('egg_group_id', 'id', 'language_id', 'name')


class pokemon_v2_encounter_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'version_id')


class pokemon_v2_encountercondition_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name')


class pokemon_v2_encounterconditionname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('encounter_condition_id', 'id', 'language_id', 'name')


class pokemon_v2_encounterconditionvalue_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('encounter_condition_id', 'id', 'is_default', 'name')


class pokemon_v2_encounterconditionvaluemap_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('encounter_condition_value_id', 'encounter_id', 'id')


class pokemon_v2_encounterconditionvaluename_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('encounter_condition_value_id', 'id', 'language_id', 'name')


class pokemon_v2_encountermethod_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name', 'order')


class pokemon_v2_encountermethodname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('encounter_method_id', 'id', 'language_id', 'name')


class pokemon_v2_encounterslot_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('encounter_method_id', 'id', 'rarity', 'slot', 'version_group_id')


class pokemon_v2_evolutionchain_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('baby_trigger_item_id', 'id')


class pokemon_v2_evolutiontrigger_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name')


class pokemon_v2_evolutiontriggername_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('evolution_trigger_id', 'id', 'language_id', 'name')


class pokemon_v2_experience_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('experience', 'growth_rate_id', 'id', 'level')


class pokemon_v2_gender_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name')


class pokemon_v2_generation_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name', 'region_id')


class pokemon_v2_generationname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('generation_id', 'id', 'language_id', 'name')


class pokemon_v2_growthrate_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('formula', 'id', 'name')


class pokemon_v2_growthratedescription_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('description', 'growth_rate_id', 'id', 'language_id')


class pokemon_v2_item_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id', 'name')


class pokemon_v2_itemattribute_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name')


class pokemon_v2_itemattributedescription_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('description', 'id', 'item_attribute_id', 'language_id')


class pokemon_v2_itemattributemap_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'item_attribute_id', 'item_id')


class pokemon_v2_itemattributename_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'item_attribute_id', 'language_id', 'name')


class pokemon_v2_itemcategory_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'item_pocket_id', 'name')


class pokemon_v2_itemcategoryname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'item_category_id', 'language_id', 'name')


class pokemon_v2_itemeffecttext_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('effect', 'id', 'item_id', 'language_id', 'short_effect')


class pokemon_v2_itemflavortext_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('flavor_text', 'id', 'item_id', 'language_id', 'version_group_id')


class pokemon_v2_itemflingeffect_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name')


class pokemon_v2_itemflingeffecteffecttext_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('effect', 'id', 'item_fling_effect_id', 'language_id')


class pokemon_v2_itemgameindex_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('game_index', 'generation_id', 'id', 'item_id')


class pokemon_v2_itemname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'item_id', 'language_id', 'name')


class pokemon_v2_itempocket_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name')


class pokemon_v2_itempocketname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'item_pocket_id', 'language_id', 'name')


class pokemon_v2_itemsprites_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'item_id', 'sprites')


class pokemon_v2_language_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'iso3166', 'iso639', 'name', 'official', 'order')


class pokemon_v2_languagename_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'language_id', 'local_language_id', 'name')


class pokemon_v2_location_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name', 'region_id')


class pokemon_v2_locationarea_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('game_index', 'id', 'location_id', 'name')


class pokemon_v2_locationareaencounterrate_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('encounter_method_id', 'id', 'location_area_id', 'rate', 'version_id')


class pokemon_v2_locationareaname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'language_id', 'location_area_id', 'name')


class pokemon_v2_locationgameindex_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('game_index', 'generation_id', 'id', 'location_id')


class pokemon_v2_locationname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'language_id', 'location_id', 'name')


class pokemon_v2_machine_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'version_group_id')


class pokemon_v2_move_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'name', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')


class pokemon_v2_moveattribute_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name')


class pokemon_v2_moveattributedescription_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('description', 'id', 'language_id', 'move_attribute_id')


class pokemon_v2_moveattributemap_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'move_attribute_id', 'move_id')


class pokemon_v2_moveattributename_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'language_id', 'move_attribute_id', 'name')


class pokemon_v2_movebattlestyle_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name')


class pokemon_v2_movebattlestylename_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'language_id', 'move_battle_style_id', 'name')


class pokemon_v2_movechange_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'power', 'pp', 'type_id', 'version_group_id')


class pokemon_v2_movedamageclass_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name')


class pokemon_v2_movedamageclassdescription_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('description', 'id', 'language_id', 'move_damage_class_id')


class pokemon_v2_movedamageclassname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'language_id', 'move_damage_class_id', 'name')


class pokemon_v2_moveeffect_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id',)


class pokemon_v2_moveeffectchange_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'move_effect_id', 'version_group_id')


class pokemon_v2_moveeffectchangeeffecttext_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('effect', 'id', 'language_id', 'move_effect_change_id')


class pokemon_v2_moveeffecteffecttext_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('effect', 'id', 'language_id', 'move_effect_id', 'short_effect')


class pokemon_v2_moveflavortext_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('flavor_text', 'id', 'language_id', 'move_id', 'version_group_id')


class pokemon_v2_movelearnmethod_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name')


class pokemon_v2_movelearnmethoddescription_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('description', 'id', 'language_id', 'move_learn_method_id')


class pokemon_v2_movelearnmethodname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'language_id', 'move_learn_method_id', 'name')


class pokemon_v2_movemeta_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'stat_chance')


class pokemon_v2_movemetaailment_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name')


class pokemon_v2_movemetaailmentname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'language_id', 'move_meta_ailment_id', 'name')


class pokemon_v2_movemetacategory_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name')


class pokemon_v2_movemetacategorydescription_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('description', 'id', 'language_id', 'move_meta_category_id')


class pokemon_v2_movemetastatchange_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('change', 'id', 'move_id', 'stat_id')


class pokemon_v2_movename_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'language_id', 'move_id', 'name')


class pokemon_v2_movetarget_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name')


class pokemon_v2_movetargetdescription_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('description', 'id', 'language_id', 'move_target_id')


class pokemon_v2_movetargetname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'language_id', 'move_target_id', 'name')


class pokemon_v2_nature_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id', 'name')


class pokemon_v2_naturebattlestylepreference_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id')


class pokemon_v2_naturename_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'language_id', 'name', 'nature_id')


class pokemon_v2_naturepokeathlonstat_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'max_change', 'nature_id', 'pokeathlon_stat_id')


class pokemon_v2_palpark_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'rate')


class pokemon_v2_palparkarea_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name')


class pokemon_v2_palparkareaname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'language_id', 'name', 'pal_park_area_id')


class pokemon_v2_pokeathlonstat_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name')


class pokemon_v2_pokeathlonstatname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'language_id', 'name', 'pokeathlon_stat_id')


class pokemon_v2_pokedex_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'is_main_series', 'name', 'region_id')


class pokemon_v2_pokedexdescription_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('description', 'id', 'language_id', 'pokedex_id')


class pokemon_v2_pokedexname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'language_id', 'name', 'pokedex_id')


class pokemon_v2_pokedexversiongroup_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'pokedex_id', 'version_group_id')


class pokemon_v2_pokemon_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('base_experience', 'height', 'id', 'is_default', 'name', 'order', 'pokemon_species_id', 'weight')


class pokemon_v2_pokemonability_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('ability_id', 'id', 'is_hidden', 'pokemon_id', 'slot')


class pokemon_v2_pokemoncolor_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name')


class pokemon_v2_pokemoncolorname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'language_id', 'name', 'pokemon_color_id')


class pokemon_v2_pokemondexnumber_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id')


class pokemon_v2_pokemonegggroup_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('egg_group_id', 'id', 'pokemon_species_id')


class pokemon_v2_pokemonevolution_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'needs_overworld_rain', 'party_species_id', 'party_type_id', 'relative_physical_stats', 'time_of_day', 'trade_species_id', 'turn_upside_down')


class pokemon_v2_pokemonform_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('form_name', 'form_order', 'id', 'is_battle_only', 'is_default', 'is_mega', 'name', 'order', 'pokemon_id', 'version_group_id')


class pokemon_v2_pokemonformgeneration_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('game_index', 'generation_id', 'id', 'pokemon_form_id')


class pokemon_v2_pokemonformname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'language_id', 'name', 'pokemon_form_id', 'pokemon_name')


class pokemon_v2_pokemonformsprites_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'pokemon_form_id', 'sprites')


class pokemon_v2_pokemonformtype_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'pokemon_form_id', 'slot', 'type_id')


class pokemon_v2_pokemongameindex_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('game_index', 'id', 'pokemon_id', 'version_id')


class pokemon_v2_pokemonhabitat_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name')


class pokemon_v2_pokemonhabitatname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'language_id', 'name', 'pokemon_habitat_id')


class pokemon_v2_pokemonitem_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'item_id', 'pokemon_id', 'rarity', 'version_id')


class pokemon_v2_pokemonmove_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'version_group_id')


class pokemon_v2_pokemonshape_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name')


class pokemon_v2_pokemonshapename_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('awesome_name', 'id', 'language_id', 'name', 'pokemon_shape_id')


class pokemon_v2_pokemonspecies_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'forms_switchable', 'gender_rate', 'generation_id', 'growth_rate_id', 'has_gender_differences', 'hatch_counter', 'id', 'is_baby', 'is_legendary', 'is_mythical', 'name', 'order', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id')


class pokemon_v2_pokemonspeciesdescription_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('description', 'id', 'language_id', 'pokemon_species_id')


class pokemon_v2_pokemonspeciesflavortext_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('flavor_text', 'id', 'language_id', 'pokemon_species_id', 'version_id')


class pokemon_v2_pokemonspeciesname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('genus', 'id', 'language_id', 'name', 'pokemon_species_id')


class pokemon_v2_pokemonsprites_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'pokemon_id', 'sprites')


class pokemon_v2_pokemonstat_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('base_stat', 'effort', 'id', 'pokemon_id', 'stat_id')


class pokemon_v2_pokemontype_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'pokemon_id', 'slot', 'type_id')


class pokemon_v2_pokemontypepast_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('generation_id', 'id', 'pokemon_id', 'slot', 'type_id')


class pokemon_v2_region_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name')


class pokemon_v2_regionname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'language_id', 'name', 'region_id')


class pokemon_v2_stat_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('game_index', 'id', 'is_battle_only', 'move_damage_class_id', 'name')


class pokemon_v2_statname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'language_id', 'name', 'stat_id')


class pokemon_v2_supercontestcombo_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('first_move_id', 'id', 'second_move_id')


class pokemon_v2_supercontesteffect_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('appeal', 'id')


class pokemon_v2_supercontesteffectflavortext_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('flavor_text', 'id', 'language_id', 'super_contest_effect_id')


class pokemon_v2_type_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('generation_id', 'id', 'move_damage_class_id', 'name')


class pokemon_v2_typeefficacy_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('damage_factor', 'damage_type_id', 'id', 'target_type_id')


class pokemon_v2_typegameindex_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('game_index', 'generation_id', 'id', 'type_id')


class pokemon_v2_typename_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'language_id', 'name', 'type_id')


class pokemon_v2_version_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'name', 'version_group_id')


class pokemon_v2_versiongroup_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('generation_id', 'id', 'name', 'order')


class pokemon_v2_versiongroupmovelearnmethod_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'move_learn_method_id', 'version_group_id')


class pokemon_v2_versiongroupregion_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'region_id', 'version_group_id')


class pokemon_v2_versionname_select_column(sgqlc.types.Enum):
    __schema__ = pokeapiv1beta_schema
    __choices__ = ('id', 'language_id', 'name', 'version_id')



########################################################################
# Input Objects
########################################################################
class Boolean_comparison_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_eq', '_gt', '_gte', '_in', '_is_null', '_lt', '_lte', '_neq', '_nin')
    _eq = sgqlc.types.Field(Boolean, graphql_name='_eq')
    _gt = sgqlc.types.Field(Boolean, graphql_name='_gt')
    _gte = sgqlc.types.Field(Boolean, graphql_name='_gte')
    _in = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(Boolean)), graphql_name='_in')
    _is_null = sgqlc.types.Field(Boolean, graphql_name='_is_null')
    _lt = sgqlc.types.Field(Boolean, graphql_name='_lt')
    _lte = sgqlc.types.Field(Boolean, graphql_name='_lte')
    _neq = sgqlc.types.Field(Boolean, graphql_name='_neq')
    _nin = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(Boolean)), graphql_name='_nin')


class Int_comparison_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_eq', '_gt', '_gte', '_in', '_is_null', '_lt', '_lte', '_neq', '_nin')
    _eq = sgqlc.types.Field(Int, graphql_name='_eq')
    _gt = sgqlc.types.Field(Int, graphql_name='_gt')
    _gte = sgqlc.types.Field(Int, graphql_name='_gte')
    _in = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(Int)), graphql_name='_in')
    _is_null = sgqlc.types.Field(Boolean, graphql_name='_is_null')
    _lt = sgqlc.types.Field(Int, graphql_name='_lt')
    _lte = sgqlc.types.Field(Int, graphql_name='_lte')
    _neq = sgqlc.types.Field(Int, graphql_name='_neq')
    _nin = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(Int)), graphql_name='_nin')


class String_comparison_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_eq', '_gt', '_gte', '_ilike', '_in', '_iregex', '_is_null', '_like', '_lt', '_lte', '_neq', '_nilike', '_nin', '_niregex', '_nlike', '_nregex', '_nsimilar', '_regex', '_similar')
    _eq = sgqlc.types.Field(String, graphql_name='_eq')
    _gt = sgqlc.types.Field(String, graphql_name='_gt')
    _gte = sgqlc.types.Field(String, graphql_name='_gte')
    _ilike = sgqlc.types.Field(String, graphql_name='_ilike')
    _in = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(String)), graphql_name='_in')
    _iregex = sgqlc.types.Field(String, graphql_name='_iregex')
    _is_null = sgqlc.types.Field(Boolean, graphql_name='_is_null')
    _like = sgqlc.types.Field(String, graphql_name='_like')
    _lt = sgqlc.types.Field(String, graphql_name='_lt')
    _lte = sgqlc.types.Field(String, graphql_name='_lte')
    _neq = sgqlc.types.Field(String, graphql_name='_neq')
    _nilike = sgqlc.types.Field(String, graphql_name='_nilike')
    _nin = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null(String)), graphql_name='_nin')
    _niregex = sgqlc.types.Field(String, graphql_name='_niregex')
    _nlike = sgqlc.types.Field(String, graphql_name='_nlike')
    _nregex = sgqlc.types.Field(String, graphql_name='_nregex')
    _nsimilar = sgqlc.types.Field(String, graphql_name='_nsimilar')
    _regex = sgqlc.types.Field(String, graphql_name='_regex')
    _similar = sgqlc.types.Field(String, graphql_name='_similar')


class pokemon_v2_ability_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_ability_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_ability_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_ability_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_ability_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_ability_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_ability_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_ability_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_ability_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_ability_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_ability_variance_order_by', graphql_name='variance')


class pokemon_v2_ability_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_ability_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'generation_id', 'id', 'is_main_series', 'name', 'pokemon_v2_abilitychanges', 'pokemon_v2_abilityeffecttexts', 'pokemon_v2_abilityflavortexts', 'pokemon_v2_abilitynames', 'pokemon_v2_generation', 'pokemon_v2_pokemonabilities')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_ability_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_ability_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_ability_bool_exp')), graphql_name='_or')
    generation_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='generation_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    is_main_series = sgqlc.types.Field(Boolean_comparison_exp, graphql_name='is_main_series')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_abilitychanges = sgqlc.types.Field('pokemon_v2_abilitychange_bool_exp', graphql_name='pokemon_v2_abilitychanges')
    pokemon_v2_abilityeffecttexts = sgqlc.types.Field('pokemon_v2_abilityeffecttext_bool_exp', graphql_name='pokemon_v2_abilityeffecttexts')
    pokemon_v2_abilityflavortexts = sgqlc.types.Field('pokemon_v2_abilityflavortext_bool_exp', graphql_name='pokemon_v2_abilityflavortexts')
    pokemon_v2_abilitynames = sgqlc.types.Field('pokemon_v2_abilityname_bool_exp', graphql_name='pokemon_v2_abilitynames')
    pokemon_v2_generation = sgqlc.types.Field('pokemon_v2_generation_bool_exp', graphql_name='pokemon_v2_generation')
    pokemon_v2_pokemonabilities = sgqlc.types.Field('pokemon_v2_pokemonability_bool_exp', graphql_name='pokemon_v2_pokemonabilities')


class pokemon_v2_ability_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'name')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_ability_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'name')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_ability_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'is_main_series', 'name', 'pokemon_v2_abilitychanges_aggregate', 'pokemon_v2_abilityeffecttexts_aggregate', 'pokemon_v2_abilityflavortexts_aggregate', 'pokemon_v2_abilitynames_aggregate', 'pokemon_v2_generation', 'pokemon_v2_pokemonabilities_aggregate')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    is_main_series = sgqlc.types.Field(order_by, graphql_name='is_main_series')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_abilitychanges_aggregate = sgqlc.types.Field('pokemon_v2_abilitychange_aggregate_order_by', graphql_name='pokemon_v2_abilitychanges_aggregate')
    pokemon_v2_abilityeffecttexts_aggregate = sgqlc.types.Field('pokemon_v2_abilityeffecttext_aggregate_order_by', graphql_name='pokemon_v2_abilityeffecttexts_aggregate')
    pokemon_v2_abilityflavortexts_aggregate = sgqlc.types.Field('pokemon_v2_abilityflavortext_aggregate_order_by', graphql_name='pokemon_v2_abilityflavortexts_aggregate')
    pokemon_v2_abilitynames_aggregate = sgqlc.types.Field('pokemon_v2_abilityname_aggregate_order_by', graphql_name='pokemon_v2_abilitynames_aggregate')
    pokemon_v2_generation = sgqlc.types.Field('pokemon_v2_generation_order_by', graphql_name='pokemon_v2_generation')
    pokemon_v2_pokemonabilities_aggregate = sgqlc.types.Field('pokemon_v2_pokemonability_aggregate_order_by', graphql_name='pokemon_v2_pokemonabilities_aggregate')


class pokemon_v2_ability_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_ability_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_ability_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_ability_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_ability_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_ability_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_ability_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_abilitychange_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_abilitychange_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_abilitychange_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_abilitychange_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_abilitychange_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_abilitychange_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_abilitychange_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_abilitychange_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_abilitychange_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_abilitychange_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_abilitychange_variance_order_by', graphql_name='variance')


class pokemon_v2_abilitychange_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'version_group_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_abilitychange_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'ability_id', 'id', 'pokemon_v2_ability', 'pokemon_v2_abilitychangeeffecttexts', 'pokemon_v2_versiongroup', 'version_group_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilitychange_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_abilitychange_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilitychange_bool_exp')), graphql_name='_or')
    ability_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='ability_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokemon_v2_ability = sgqlc.types.Field(pokemon_v2_ability_bool_exp, graphql_name='pokemon_v2_ability')
    pokemon_v2_abilitychangeeffecttexts = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_bool_exp', graphql_name='pokemon_v2_abilitychangeeffecttexts')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_bool_exp', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='version_group_id')


class pokemon_v2_abilitychange_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'version_group_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_abilitychange_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'version_group_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_abilitychange_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'pokemon_v2_ability', 'pokemon_v2_abilitychangeeffecttexts_aggregate', 'pokemon_v2_versiongroup', 'version_group_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_v2_ability = sgqlc.types.Field(pokemon_v2_ability_order_by, graphql_name='pokemon_v2_ability')
    pokemon_v2_abilitychangeeffecttexts_aggregate = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_aggregate_order_by', graphql_name='pokemon_v2_abilitychangeeffecttexts_aggregate')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_order_by', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_abilitychange_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'version_group_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_abilitychange_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'version_group_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_abilitychange_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'version_group_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_abilitychange_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'version_group_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_abilitychange_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'version_group_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_abilitychange_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'version_group_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_abilitychange_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'version_group_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_abilitychangeeffecttext_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_variance_order_by', graphql_name='variance')


class pokemon_v2_abilitychangeeffecttext_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_change_id', 'id', 'language_id')
    ability_change_id = sgqlc.types.Field(order_by, graphql_name='ability_change_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilitychangeeffecttext_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'ability_change_id', 'effect', 'id', 'language_id', 'pokemon_v2_abilitychange', 'pokemon_v2_language')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilitychangeeffecttext_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilitychangeeffecttext_bool_exp')), graphql_name='_or')
    ability_change_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='ability_change_id')
    effect = sgqlc.types.Field(String_comparison_exp, graphql_name='effect')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    pokemon_v2_abilitychange = sgqlc.types.Field(pokemon_v2_abilitychange_bool_exp, graphql_name='pokemon_v2_abilitychange')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')


class pokemon_v2_abilitychangeeffecttext_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_change_id', 'effect', 'id', 'language_id')
    ability_change_id = sgqlc.types.Field(order_by, graphql_name='ability_change_id')
    effect = sgqlc.types.Field(order_by, graphql_name='effect')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilitychangeeffecttext_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_change_id', 'effect', 'id', 'language_id')
    ability_change_id = sgqlc.types.Field(order_by, graphql_name='ability_change_id')
    effect = sgqlc.types.Field(order_by, graphql_name='effect')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilitychangeeffecttext_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_change_id', 'effect', 'id', 'language_id', 'pokemon_v2_abilitychange', 'pokemon_v2_language')
    ability_change_id = sgqlc.types.Field(order_by, graphql_name='ability_change_id')
    effect = sgqlc.types.Field(order_by, graphql_name='effect')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_v2_abilitychange = sgqlc.types.Field(pokemon_v2_abilitychange_order_by, graphql_name='pokemon_v2_abilitychange')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')


class pokemon_v2_abilitychangeeffecttext_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_change_id', 'id', 'language_id')
    ability_change_id = sgqlc.types.Field(order_by, graphql_name='ability_change_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilitychangeeffecttext_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_change_id', 'id', 'language_id')
    ability_change_id = sgqlc.types.Field(order_by, graphql_name='ability_change_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilitychangeeffecttext_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_change_id', 'id', 'language_id')
    ability_change_id = sgqlc.types.Field(order_by, graphql_name='ability_change_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilitychangeeffecttext_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_change_id', 'id', 'language_id')
    ability_change_id = sgqlc.types.Field(order_by, graphql_name='ability_change_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilitychangeeffecttext_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_change_id', 'id', 'language_id')
    ability_change_id = sgqlc.types.Field(order_by, graphql_name='ability_change_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilitychangeeffecttext_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_change_id', 'id', 'language_id')
    ability_change_id = sgqlc.types.Field(order_by, graphql_name='ability_change_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilitychangeeffecttext_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_change_id', 'id', 'language_id')
    ability_change_id = sgqlc.types.Field(order_by, graphql_name='ability_change_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilityeffecttext_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_abilityeffecttext_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_abilityeffecttext_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_abilityeffecttext_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_abilityeffecttext_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_abilityeffecttext_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_abilityeffecttext_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_abilityeffecttext_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_abilityeffecttext_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_abilityeffecttext_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_abilityeffecttext_variance_order_by', graphql_name='variance')


class pokemon_v2_abilityeffecttext_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilityeffecttext_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'ability_id', 'effect', 'id', 'language_id', 'pokemon_v2_ability', 'pokemon_v2_language', 'short_effect')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilityeffecttext_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_abilityeffecttext_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilityeffecttext_bool_exp')), graphql_name='_or')
    ability_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='ability_id')
    effect = sgqlc.types.Field(String_comparison_exp, graphql_name='effect')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    pokemon_v2_ability = sgqlc.types.Field(pokemon_v2_ability_bool_exp, graphql_name='pokemon_v2_ability')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')
    short_effect = sgqlc.types.Field(String_comparison_exp, graphql_name='short_effect')


class pokemon_v2_abilityeffecttext_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'effect', 'id', 'language_id', 'short_effect')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    effect = sgqlc.types.Field(order_by, graphql_name='effect')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    short_effect = sgqlc.types.Field(order_by, graphql_name='short_effect')


class pokemon_v2_abilityeffecttext_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'effect', 'id', 'language_id', 'short_effect')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    effect = sgqlc.types.Field(order_by, graphql_name='effect')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    short_effect = sgqlc.types.Field(order_by, graphql_name='short_effect')


class pokemon_v2_abilityeffecttext_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'effect', 'id', 'language_id', 'pokemon_v2_ability', 'pokemon_v2_language', 'short_effect')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    effect = sgqlc.types.Field(order_by, graphql_name='effect')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_v2_ability = sgqlc.types.Field(pokemon_v2_ability_order_by, graphql_name='pokemon_v2_ability')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')
    short_effect = sgqlc.types.Field(order_by, graphql_name='short_effect')


class pokemon_v2_abilityeffecttext_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilityeffecttext_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilityeffecttext_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilityeffecttext_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilityeffecttext_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilityeffecttext_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilityeffecttext_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilityflavortext_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_abilityflavortext_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_abilityflavortext_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_abilityflavortext_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_abilityflavortext_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_abilityflavortext_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_abilityflavortext_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_abilityflavortext_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_abilityflavortext_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_abilityflavortext_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_abilityflavortext_variance_order_by', graphql_name='variance')


class pokemon_v2_abilityflavortext_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id', 'version_group_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_abilityflavortext_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'ability_id', 'flavor_text', 'id', 'language_id', 'pokemon_v2_ability', 'pokemon_v2_language', 'pokemon_v2_versiongroup', 'version_group_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilityflavortext_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_abilityflavortext_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilityflavortext_bool_exp')), graphql_name='_or')
    ability_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='ability_id')
    flavor_text = sgqlc.types.Field(String_comparison_exp, graphql_name='flavor_text')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    pokemon_v2_ability = sgqlc.types.Field(pokemon_v2_ability_bool_exp, graphql_name='pokemon_v2_ability')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_bool_exp', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='version_group_id')


class pokemon_v2_abilityflavortext_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'flavor_text', 'id', 'language_id', 'version_group_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    flavor_text = sgqlc.types.Field(order_by, graphql_name='flavor_text')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_abilityflavortext_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'flavor_text', 'id', 'language_id', 'version_group_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    flavor_text = sgqlc.types.Field(order_by, graphql_name='flavor_text')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_abilityflavortext_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'flavor_text', 'id', 'language_id', 'pokemon_v2_ability', 'pokemon_v2_language', 'pokemon_v2_versiongroup', 'version_group_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    flavor_text = sgqlc.types.Field(order_by, graphql_name='flavor_text')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_v2_ability = sgqlc.types.Field(pokemon_v2_ability_order_by, graphql_name='pokemon_v2_ability')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_order_by', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_abilityflavortext_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id', 'version_group_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_abilityflavortext_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id', 'version_group_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_abilityflavortext_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id', 'version_group_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_abilityflavortext_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id', 'version_group_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_abilityflavortext_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id', 'version_group_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_abilityflavortext_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id', 'version_group_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_abilityflavortext_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id', 'version_group_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_abilityname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_abilityname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_abilityname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_abilityname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_abilityname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_abilityname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_abilityname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_abilityname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_abilityname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_abilityname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_abilityname_variance_order_by', graphql_name='variance')


class pokemon_v2_abilityname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilityname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'ability_id', 'id', 'language_id', 'name', 'pokemon_v2_ability', 'pokemon_v2_language')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilityname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_abilityname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilityname_bool_exp')), graphql_name='_or')
    ability_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='ability_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_ability = sgqlc.types.Field(pokemon_v2_ability_bool_exp, graphql_name='pokemon_v2_ability')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')


class pokemon_v2_abilityname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id', 'name')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_abilityname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id', 'name')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_abilityname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id', 'name', 'pokemon_v2_ability', 'pokemon_v2_language')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_ability = sgqlc.types.Field(pokemon_v2_ability_order_by, graphql_name='pokemon_v2_ability')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')


class pokemon_v2_abilityname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilityname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilityname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilityname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilityname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilityname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_abilityname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_berry_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_berry_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_berry_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_berry_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_berry_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_berry_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_berry_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_berry_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_berry_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_berry_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_berry_variance_order_by', graphql_name='variance')


class pokemon_v2_berry_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'natural_gift_power', 'natural_gift_type_id', 'size', 'smoothness', 'soil_dryness')
    berry_firmness_id = sgqlc.types.Field(order_by, graphql_name='berry_firmness_id')
    growth_time = sgqlc.types.Field(order_by, graphql_name='growth_time')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    max_harvest = sgqlc.types.Field(order_by, graphql_name='max_harvest')
    natural_gift_power = sgqlc.types.Field(order_by, graphql_name='natural_gift_power')
    natural_gift_type_id = sgqlc.types.Field(order_by, graphql_name='natural_gift_type_id')
    size = sgqlc.types.Field(order_by, graphql_name='size')
    smoothness = sgqlc.types.Field(order_by, graphql_name='smoothness')
    soil_dryness = sgqlc.types.Field(order_by, graphql_name='soil_dryness')


class pokemon_v2_berry_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'name', 'natural_gift_power', 'natural_gift_type_id', 'pokemon_v2_berryfirmness', 'pokemon_v2_berryflavormaps', 'pokemon_v2_item', 'pokemon_v2_type', 'size', 'smoothness', 'soil_dryness')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berry_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_berry_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berry_bool_exp')), graphql_name='_or')
    berry_firmness_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='berry_firmness_id')
    growth_time = sgqlc.types.Field(Int_comparison_exp, graphql_name='growth_time')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    item_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='item_id')
    max_harvest = sgqlc.types.Field(Int_comparison_exp, graphql_name='max_harvest')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    natural_gift_power = sgqlc.types.Field(Int_comparison_exp, graphql_name='natural_gift_power')
    natural_gift_type_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='natural_gift_type_id')
    pokemon_v2_berryfirmness = sgqlc.types.Field('pokemon_v2_berryfirmness_bool_exp', graphql_name='pokemon_v2_berryfirmness')
    pokemon_v2_berryflavormaps = sgqlc.types.Field('pokemon_v2_berryflavormap_bool_exp', graphql_name='pokemon_v2_berryflavormaps')
    pokemon_v2_item = sgqlc.types.Field('pokemon_v2_item_bool_exp', graphql_name='pokemon_v2_item')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type_bool_exp', graphql_name='pokemon_v2_type')
    size = sgqlc.types.Field(Int_comparison_exp, graphql_name='size')
    smoothness = sgqlc.types.Field(Int_comparison_exp, graphql_name='smoothness')
    soil_dryness = sgqlc.types.Field(Int_comparison_exp, graphql_name='soil_dryness')


class pokemon_v2_berry_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'name', 'natural_gift_power', 'natural_gift_type_id', 'size', 'smoothness', 'soil_dryness')
    berry_firmness_id = sgqlc.types.Field(order_by, graphql_name='berry_firmness_id')
    growth_time = sgqlc.types.Field(order_by, graphql_name='growth_time')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    max_harvest = sgqlc.types.Field(order_by, graphql_name='max_harvest')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    natural_gift_power = sgqlc.types.Field(order_by, graphql_name='natural_gift_power')
    natural_gift_type_id = sgqlc.types.Field(order_by, graphql_name='natural_gift_type_id')
    size = sgqlc.types.Field(order_by, graphql_name='size')
    smoothness = sgqlc.types.Field(order_by, graphql_name='smoothness')
    soil_dryness = sgqlc.types.Field(order_by, graphql_name='soil_dryness')


class pokemon_v2_berry_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'name', 'natural_gift_power', 'natural_gift_type_id', 'size', 'smoothness', 'soil_dryness')
    berry_firmness_id = sgqlc.types.Field(order_by, graphql_name='berry_firmness_id')
    growth_time = sgqlc.types.Field(order_by, graphql_name='growth_time')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    max_harvest = sgqlc.types.Field(order_by, graphql_name='max_harvest')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    natural_gift_power = sgqlc.types.Field(order_by, graphql_name='natural_gift_power')
    natural_gift_type_id = sgqlc.types.Field(order_by, graphql_name='natural_gift_type_id')
    size = sgqlc.types.Field(order_by, graphql_name='size')
    smoothness = sgqlc.types.Field(order_by, graphql_name='smoothness')
    soil_dryness = sgqlc.types.Field(order_by, graphql_name='soil_dryness')


class pokemon_v2_berry_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'name', 'natural_gift_power', 'natural_gift_type_id', 'pokemon_v2_berryfirmness', 'pokemon_v2_berryflavormaps_aggregate', 'pokemon_v2_item', 'pokemon_v2_type', 'size', 'smoothness', 'soil_dryness')
    berry_firmness_id = sgqlc.types.Field(order_by, graphql_name='berry_firmness_id')
    growth_time = sgqlc.types.Field(order_by, graphql_name='growth_time')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    max_harvest = sgqlc.types.Field(order_by, graphql_name='max_harvest')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    natural_gift_power = sgqlc.types.Field(order_by, graphql_name='natural_gift_power')
    natural_gift_type_id = sgqlc.types.Field(order_by, graphql_name='natural_gift_type_id')
    pokemon_v2_berryfirmness = sgqlc.types.Field('pokemon_v2_berryfirmness_order_by', graphql_name='pokemon_v2_berryfirmness')
    pokemon_v2_berryflavormaps_aggregate = sgqlc.types.Field('pokemon_v2_berryflavormap_aggregate_order_by', graphql_name='pokemon_v2_berryflavormaps_aggregate')
    pokemon_v2_item = sgqlc.types.Field('pokemon_v2_item_order_by', graphql_name='pokemon_v2_item')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type_order_by', graphql_name='pokemon_v2_type')
    size = sgqlc.types.Field(order_by, graphql_name='size')
    smoothness = sgqlc.types.Field(order_by, graphql_name='smoothness')
    soil_dryness = sgqlc.types.Field(order_by, graphql_name='soil_dryness')


class pokemon_v2_berry_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'natural_gift_power', 'natural_gift_type_id', 'size', 'smoothness', 'soil_dryness')
    berry_firmness_id = sgqlc.types.Field(order_by, graphql_name='berry_firmness_id')
    growth_time = sgqlc.types.Field(order_by, graphql_name='growth_time')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    max_harvest = sgqlc.types.Field(order_by, graphql_name='max_harvest')
    natural_gift_power = sgqlc.types.Field(order_by, graphql_name='natural_gift_power')
    natural_gift_type_id = sgqlc.types.Field(order_by, graphql_name='natural_gift_type_id')
    size = sgqlc.types.Field(order_by, graphql_name='size')
    smoothness = sgqlc.types.Field(order_by, graphql_name='smoothness')
    soil_dryness = sgqlc.types.Field(order_by, graphql_name='soil_dryness')


class pokemon_v2_berry_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'natural_gift_power', 'natural_gift_type_id', 'size', 'smoothness', 'soil_dryness')
    berry_firmness_id = sgqlc.types.Field(order_by, graphql_name='berry_firmness_id')
    growth_time = sgqlc.types.Field(order_by, graphql_name='growth_time')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    max_harvest = sgqlc.types.Field(order_by, graphql_name='max_harvest')
    natural_gift_power = sgqlc.types.Field(order_by, graphql_name='natural_gift_power')
    natural_gift_type_id = sgqlc.types.Field(order_by, graphql_name='natural_gift_type_id')
    size = sgqlc.types.Field(order_by, graphql_name='size')
    smoothness = sgqlc.types.Field(order_by, graphql_name='smoothness')
    soil_dryness = sgqlc.types.Field(order_by, graphql_name='soil_dryness')


class pokemon_v2_berry_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'natural_gift_power', 'natural_gift_type_id', 'size', 'smoothness', 'soil_dryness')
    berry_firmness_id = sgqlc.types.Field(order_by, graphql_name='berry_firmness_id')
    growth_time = sgqlc.types.Field(order_by, graphql_name='growth_time')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    max_harvest = sgqlc.types.Field(order_by, graphql_name='max_harvest')
    natural_gift_power = sgqlc.types.Field(order_by, graphql_name='natural_gift_power')
    natural_gift_type_id = sgqlc.types.Field(order_by, graphql_name='natural_gift_type_id')
    size = sgqlc.types.Field(order_by, graphql_name='size')
    smoothness = sgqlc.types.Field(order_by, graphql_name='smoothness')
    soil_dryness = sgqlc.types.Field(order_by, graphql_name='soil_dryness')


class pokemon_v2_berry_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'natural_gift_power', 'natural_gift_type_id', 'size', 'smoothness', 'soil_dryness')
    berry_firmness_id = sgqlc.types.Field(order_by, graphql_name='berry_firmness_id')
    growth_time = sgqlc.types.Field(order_by, graphql_name='growth_time')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    max_harvest = sgqlc.types.Field(order_by, graphql_name='max_harvest')
    natural_gift_power = sgqlc.types.Field(order_by, graphql_name='natural_gift_power')
    natural_gift_type_id = sgqlc.types.Field(order_by, graphql_name='natural_gift_type_id')
    size = sgqlc.types.Field(order_by, graphql_name='size')
    smoothness = sgqlc.types.Field(order_by, graphql_name='smoothness')
    soil_dryness = sgqlc.types.Field(order_by, graphql_name='soil_dryness')


class pokemon_v2_berry_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'natural_gift_power', 'natural_gift_type_id', 'size', 'smoothness', 'soil_dryness')
    berry_firmness_id = sgqlc.types.Field(order_by, graphql_name='berry_firmness_id')
    growth_time = sgqlc.types.Field(order_by, graphql_name='growth_time')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    max_harvest = sgqlc.types.Field(order_by, graphql_name='max_harvest')
    natural_gift_power = sgqlc.types.Field(order_by, graphql_name='natural_gift_power')
    natural_gift_type_id = sgqlc.types.Field(order_by, graphql_name='natural_gift_type_id')
    size = sgqlc.types.Field(order_by, graphql_name='size')
    smoothness = sgqlc.types.Field(order_by, graphql_name='smoothness')
    soil_dryness = sgqlc.types.Field(order_by, graphql_name='soil_dryness')


class pokemon_v2_berry_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'natural_gift_power', 'natural_gift_type_id', 'size', 'smoothness', 'soil_dryness')
    berry_firmness_id = sgqlc.types.Field(order_by, graphql_name='berry_firmness_id')
    growth_time = sgqlc.types.Field(order_by, graphql_name='growth_time')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    max_harvest = sgqlc.types.Field(order_by, graphql_name='max_harvest')
    natural_gift_power = sgqlc.types.Field(order_by, graphql_name='natural_gift_power')
    natural_gift_type_id = sgqlc.types.Field(order_by, graphql_name='natural_gift_type_id')
    size = sgqlc.types.Field(order_by, graphql_name='size')
    smoothness = sgqlc.types.Field(order_by, graphql_name='smoothness')
    soil_dryness = sgqlc.types.Field(order_by, graphql_name='soil_dryness')


class pokemon_v2_berry_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'natural_gift_power', 'natural_gift_type_id', 'size', 'smoothness', 'soil_dryness')
    berry_firmness_id = sgqlc.types.Field(order_by, graphql_name='berry_firmness_id')
    growth_time = sgqlc.types.Field(order_by, graphql_name='growth_time')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    max_harvest = sgqlc.types.Field(order_by, graphql_name='max_harvest')
    natural_gift_power = sgqlc.types.Field(order_by, graphql_name='natural_gift_power')
    natural_gift_type_id = sgqlc.types.Field(order_by, graphql_name='natural_gift_type_id')
    size = sgqlc.types.Field(order_by, graphql_name='size')
    smoothness = sgqlc.types.Field(order_by, graphql_name='smoothness')
    soil_dryness = sgqlc.types.Field(order_by, graphql_name='soil_dryness')


class pokemon_v2_berryfirmness_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_berries', 'pokemon_v2_berryfirmnessnames')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryfirmness_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_berryfirmness_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryfirmness_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_berries = sgqlc.types.Field(pokemon_v2_berry_bool_exp, graphql_name='pokemon_v2_berries')
    pokemon_v2_berryfirmnessnames = sgqlc.types.Field('pokemon_v2_berryfirmnessname_bool_exp', graphql_name='pokemon_v2_berryfirmnessnames')


class pokemon_v2_berryfirmness_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_berries_aggregate', 'pokemon_v2_berryfirmnessnames_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_berries_aggregate = sgqlc.types.Field(pokemon_v2_berry_aggregate_order_by, graphql_name='pokemon_v2_berries_aggregate')
    pokemon_v2_berryfirmnessnames_aggregate = sgqlc.types.Field('pokemon_v2_berryfirmnessname_aggregate_order_by', graphql_name='pokemon_v2_berryfirmnessnames_aggregate')


class pokemon_v2_berryfirmnessname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_berryfirmnessname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_berryfirmnessname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_berryfirmnessname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_berryfirmnessname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_berryfirmnessname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_berryfirmnessname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_berryfirmnessname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_berryfirmnessname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_berryfirmnessname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_berryfirmnessname_variance_order_by', graphql_name='variance')


class pokemon_v2_berryfirmnessname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'id', 'language_id')
    berry_firmness_id = sgqlc.types.Field(order_by, graphql_name='berry_firmness_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_berryfirmnessname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'berry_firmness_id', 'id', 'language_id', 'name', 'pokemon_v2_berryfirmness', 'pokemon_v2_language')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryfirmnessname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_berryfirmnessname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryfirmnessname_bool_exp')), graphql_name='_or')
    berry_firmness_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='berry_firmness_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_berryfirmness = sgqlc.types.Field(pokemon_v2_berryfirmness_bool_exp, graphql_name='pokemon_v2_berryfirmness')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')


class pokemon_v2_berryfirmnessname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'id', 'language_id', 'name')
    berry_firmness_id = sgqlc.types.Field(order_by, graphql_name='berry_firmness_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_berryfirmnessname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'id', 'language_id', 'name')
    berry_firmness_id = sgqlc.types.Field(order_by, graphql_name='berry_firmness_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_berryfirmnessname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'id', 'language_id', 'name', 'pokemon_v2_berryfirmness', 'pokemon_v2_language')
    berry_firmness_id = sgqlc.types.Field(order_by, graphql_name='berry_firmness_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_berryfirmness = sgqlc.types.Field(pokemon_v2_berryfirmness_order_by, graphql_name='pokemon_v2_berryfirmness')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')


class pokemon_v2_berryfirmnessname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'id', 'language_id')
    berry_firmness_id = sgqlc.types.Field(order_by, graphql_name='berry_firmness_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_berryfirmnessname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'id', 'language_id')
    berry_firmness_id = sgqlc.types.Field(order_by, graphql_name='berry_firmness_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_berryfirmnessname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'id', 'language_id')
    berry_firmness_id = sgqlc.types.Field(order_by, graphql_name='berry_firmness_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_berryfirmnessname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'id', 'language_id')
    berry_firmness_id = sgqlc.types.Field(order_by, graphql_name='berry_firmness_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_berryfirmnessname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'id', 'language_id')
    berry_firmness_id = sgqlc.types.Field(order_by, graphql_name='berry_firmness_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_berryfirmnessname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'id', 'language_id')
    berry_firmness_id = sgqlc.types.Field(order_by, graphql_name='berry_firmness_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_berryfirmnessname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'id', 'language_id')
    berry_firmness_id = sgqlc.types.Field(order_by, graphql_name='berry_firmness_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_berryflavor_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_berryflavor_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_berryflavor_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_berryflavor_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_berryflavor_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_berryflavor_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_berryflavor_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_berryflavor_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_berryflavor_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_berryflavor_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_berryflavor_variance_order_by', graphql_name='variance')


class pokemon_v2_berryflavor_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_berryflavor_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'contest_type_id', 'id', 'name', 'pokemon_v2_natures_by_likes_flavor_id', 'pokemon_v2_berryflavormaps', 'pokemon_v2_berryflavornames', 'pokemon_v2_contesttype', 'pokemon_v2_natures')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryflavor_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_berryflavor_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryflavor_bool_exp')), graphql_name='_or')
    contest_type_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='contest_type_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_natures_by_likes_flavor_id = sgqlc.types.Field('pokemon_v2_nature_bool_exp', graphql_name='pokemonV2NaturesByLikesFlavorId')
    pokemon_v2_berryflavormaps = sgqlc.types.Field('pokemon_v2_berryflavormap_bool_exp', graphql_name='pokemon_v2_berryflavormaps')
    pokemon_v2_berryflavornames = sgqlc.types.Field('pokemon_v2_berryflavorname_bool_exp', graphql_name='pokemon_v2_berryflavornames')
    pokemon_v2_contesttype = sgqlc.types.Field('pokemon_v2_contesttype_bool_exp', graphql_name='pokemon_v2_contesttype')
    pokemon_v2_natures = sgqlc.types.Field('pokemon_v2_nature_bool_exp', graphql_name='pokemon_v2_natures')


class pokemon_v2_berryflavor_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id', 'name')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_berryflavor_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id', 'name')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_berryflavor_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id', 'name', 'pokemon_v2_natures_by_likes_flavor_id_aggregate', 'pokemon_v2_berryflavormaps_aggregate', 'pokemon_v2_berryflavornames_aggregate', 'pokemon_v2_contesttype', 'pokemon_v2_natures_aggregate')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_natures_by_likes_flavor_id_aggregate = sgqlc.types.Field('pokemon_v2_nature_aggregate_order_by', graphql_name='pokemonV2NaturesByLikesFlavorId_aggregate')
    pokemon_v2_berryflavormaps_aggregate = sgqlc.types.Field('pokemon_v2_berryflavormap_aggregate_order_by', graphql_name='pokemon_v2_berryflavormaps_aggregate')
    pokemon_v2_berryflavornames_aggregate = sgqlc.types.Field('pokemon_v2_berryflavorname_aggregate_order_by', graphql_name='pokemon_v2_berryflavornames_aggregate')
    pokemon_v2_contesttype = sgqlc.types.Field('pokemon_v2_contesttype_order_by', graphql_name='pokemon_v2_contesttype')
    pokemon_v2_natures_aggregate = sgqlc.types.Field('pokemon_v2_nature_aggregate_order_by', graphql_name='pokemon_v2_natures_aggregate')


class pokemon_v2_berryflavor_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_berryflavor_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_berryflavor_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_berryflavor_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_berryflavor_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_berryflavor_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_berryflavor_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_berryflavormap_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_berryflavormap_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_berryflavormap_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_berryflavormap_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_berryflavormap_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_berryflavormap_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_berryflavormap_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_berryflavormap_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_berryflavormap_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_berryflavormap_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_berryflavormap_variance_order_by', graphql_name='variance')


class pokemon_v2_berryflavormap_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'berry_id', 'id', 'potency')
    berry_flavor_id = sgqlc.types.Field(order_by, graphql_name='berry_flavor_id')
    berry_id = sgqlc.types.Field(order_by, graphql_name='berry_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    potency = sgqlc.types.Field(order_by, graphql_name='potency')


class pokemon_v2_berryflavormap_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'berry_flavor_id', 'berry_id', 'id', 'pokemon_v2_berry', 'pokemon_v2_berryflavor', 'potency')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryflavormap_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_berryflavormap_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryflavormap_bool_exp')), graphql_name='_or')
    berry_flavor_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='berry_flavor_id')
    berry_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='berry_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokemon_v2_berry = sgqlc.types.Field(pokemon_v2_berry_bool_exp, graphql_name='pokemon_v2_berry')
    pokemon_v2_berryflavor = sgqlc.types.Field(pokemon_v2_berryflavor_bool_exp, graphql_name='pokemon_v2_berryflavor')
    potency = sgqlc.types.Field(Int_comparison_exp, graphql_name='potency')


class pokemon_v2_berryflavormap_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'berry_id', 'id', 'potency')
    berry_flavor_id = sgqlc.types.Field(order_by, graphql_name='berry_flavor_id')
    berry_id = sgqlc.types.Field(order_by, graphql_name='berry_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    potency = sgqlc.types.Field(order_by, graphql_name='potency')


class pokemon_v2_berryflavormap_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'berry_id', 'id', 'potency')
    berry_flavor_id = sgqlc.types.Field(order_by, graphql_name='berry_flavor_id')
    berry_id = sgqlc.types.Field(order_by, graphql_name='berry_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    potency = sgqlc.types.Field(order_by, graphql_name='potency')


class pokemon_v2_berryflavormap_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'berry_id', 'id', 'pokemon_v2_berry', 'pokemon_v2_berryflavor', 'potency')
    berry_flavor_id = sgqlc.types.Field(order_by, graphql_name='berry_flavor_id')
    berry_id = sgqlc.types.Field(order_by, graphql_name='berry_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_v2_berry = sgqlc.types.Field(pokemon_v2_berry_order_by, graphql_name='pokemon_v2_berry')
    pokemon_v2_berryflavor = sgqlc.types.Field(pokemon_v2_berryflavor_order_by, graphql_name='pokemon_v2_berryflavor')
    potency = sgqlc.types.Field(order_by, graphql_name='potency')


class pokemon_v2_berryflavormap_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'berry_id', 'id', 'potency')
    berry_flavor_id = sgqlc.types.Field(order_by, graphql_name='berry_flavor_id')
    berry_id = sgqlc.types.Field(order_by, graphql_name='berry_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    potency = sgqlc.types.Field(order_by, graphql_name='potency')


class pokemon_v2_berryflavormap_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'berry_id', 'id', 'potency')
    berry_flavor_id = sgqlc.types.Field(order_by, graphql_name='berry_flavor_id')
    berry_id = sgqlc.types.Field(order_by, graphql_name='berry_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    potency = sgqlc.types.Field(order_by, graphql_name='potency')


class pokemon_v2_berryflavormap_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'berry_id', 'id', 'potency')
    berry_flavor_id = sgqlc.types.Field(order_by, graphql_name='berry_flavor_id')
    berry_id = sgqlc.types.Field(order_by, graphql_name='berry_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    potency = sgqlc.types.Field(order_by, graphql_name='potency')


class pokemon_v2_berryflavormap_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'berry_id', 'id', 'potency')
    berry_flavor_id = sgqlc.types.Field(order_by, graphql_name='berry_flavor_id')
    berry_id = sgqlc.types.Field(order_by, graphql_name='berry_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    potency = sgqlc.types.Field(order_by, graphql_name='potency')


class pokemon_v2_berryflavormap_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'berry_id', 'id', 'potency')
    berry_flavor_id = sgqlc.types.Field(order_by, graphql_name='berry_flavor_id')
    berry_id = sgqlc.types.Field(order_by, graphql_name='berry_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    potency = sgqlc.types.Field(order_by, graphql_name='potency')


class pokemon_v2_berryflavormap_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'berry_id', 'id', 'potency')
    berry_flavor_id = sgqlc.types.Field(order_by, graphql_name='berry_flavor_id')
    berry_id = sgqlc.types.Field(order_by, graphql_name='berry_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    potency = sgqlc.types.Field(order_by, graphql_name='potency')


class pokemon_v2_berryflavormap_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'berry_id', 'id', 'potency')
    berry_flavor_id = sgqlc.types.Field(order_by, graphql_name='berry_flavor_id')
    berry_id = sgqlc.types.Field(order_by, graphql_name='berry_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    potency = sgqlc.types.Field(order_by, graphql_name='potency')


class pokemon_v2_berryflavorname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_berryflavorname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_berryflavorname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_berryflavorname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_berryflavorname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_berryflavorname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_berryflavorname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_berryflavorname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_berryflavorname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_berryflavorname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_berryflavorname_variance_order_by', graphql_name='variance')


class pokemon_v2_berryflavorname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'id', 'language_id')
    berry_flavor_id = sgqlc.types.Field(order_by, graphql_name='berry_flavor_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_berryflavorname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'berry_flavor_id', 'id', 'language_id', 'name', 'pokemon_v2_berryflavor', 'pokemon_v2_language')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryflavorname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_berryflavorname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryflavorname_bool_exp')), graphql_name='_or')
    berry_flavor_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='berry_flavor_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_berryflavor = sgqlc.types.Field(pokemon_v2_berryflavor_bool_exp, graphql_name='pokemon_v2_berryflavor')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')


class pokemon_v2_berryflavorname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'id', 'language_id', 'name')
    berry_flavor_id = sgqlc.types.Field(order_by, graphql_name='berry_flavor_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_berryflavorname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'id', 'language_id', 'name')
    berry_flavor_id = sgqlc.types.Field(order_by, graphql_name='berry_flavor_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_berryflavorname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'id', 'language_id', 'name', 'pokemon_v2_berryflavor', 'pokemon_v2_language')
    berry_flavor_id = sgqlc.types.Field(order_by, graphql_name='berry_flavor_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_berryflavor = sgqlc.types.Field(pokemon_v2_berryflavor_order_by, graphql_name='pokemon_v2_berryflavor')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')


class pokemon_v2_berryflavorname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'id', 'language_id')
    berry_flavor_id = sgqlc.types.Field(order_by, graphql_name='berry_flavor_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_berryflavorname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'id', 'language_id')
    berry_flavor_id = sgqlc.types.Field(order_by, graphql_name='berry_flavor_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_berryflavorname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'id', 'language_id')
    berry_flavor_id = sgqlc.types.Field(order_by, graphql_name='berry_flavor_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_berryflavorname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'id', 'language_id')
    berry_flavor_id = sgqlc.types.Field(order_by, graphql_name='berry_flavor_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_berryflavorname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'id', 'language_id')
    berry_flavor_id = sgqlc.types.Field(order_by, graphql_name='berry_flavor_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_berryflavorname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'id', 'language_id')
    berry_flavor_id = sgqlc.types.Field(order_by, graphql_name='berry_flavor_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_berryflavorname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'id', 'language_id')
    berry_flavor_id = sgqlc.types.Field(order_by, graphql_name='berry_flavor_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_characteristic_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_characteristic_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_characteristic_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_characteristic_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_characteristic_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_characteristic_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_characteristic_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_characteristic_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_characteristic_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_characteristic_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_characteristic_variance_order_by', graphql_name='variance')


class pokemon_v2_characteristic_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('gene_mod_5', 'id', 'stat_id')
    gene_mod_5 = sgqlc.types.Field(order_by, graphql_name='gene_mod_5')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_characteristic_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'gene_mod_5', 'id', 'pokemon_v2_characteristicdescriptions', 'pokemon_v2_stat', 'stat_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_characteristic_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_characteristic_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_characteristic_bool_exp')), graphql_name='_or')
    gene_mod_5 = sgqlc.types.Field(Int_comparison_exp, graphql_name='gene_mod_5')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokemon_v2_characteristicdescriptions = sgqlc.types.Field('pokemon_v2_characteristicdescription_bool_exp', graphql_name='pokemon_v2_characteristicdescriptions')
    pokemon_v2_stat = sgqlc.types.Field('pokemon_v2_stat_bool_exp', graphql_name='pokemon_v2_stat')
    stat_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='stat_id')


class pokemon_v2_characteristic_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('gene_mod_5', 'id', 'stat_id')
    gene_mod_5 = sgqlc.types.Field(order_by, graphql_name='gene_mod_5')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_characteristic_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('gene_mod_5', 'id', 'stat_id')
    gene_mod_5 = sgqlc.types.Field(order_by, graphql_name='gene_mod_5')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_characteristic_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('gene_mod_5', 'id', 'pokemon_v2_characteristicdescriptions_aggregate', 'pokemon_v2_stat', 'stat_id')
    gene_mod_5 = sgqlc.types.Field(order_by, graphql_name='gene_mod_5')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_v2_characteristicdescriptions_aggregate = sgqlc.types.Field('pokemon_v2_characteristicdescription_aggregate_order_by', graphql_name='pokemon_v2_characteristicdescriptions_aggregate')
    pokemon_v2_stat = sgqlc.types.Field('pokemon_v2_stat_order_by', graphql_name='pokemon_v2_stat')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_characteristic_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('gene_mod_5', 'id', 'stat_id')
    gene_mod_5 = sgqlc.types.Field(order_by, graphql_name='gene_mod_5')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_characteristic_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('gene_mod_5', 'id', 'stat_id')
    gene_mod_5 = sgqlc.types.Field(order_by, graphql_name='gene_mod_5')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_characteristic_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('gene_mod_5', 'id', 'stat_id')
    gene_mod_5 = sgqlc.types.Field(order_by, graphql_name='gene_mod_5')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_characteristic_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('gene_mod_5', 'id', 'stat_id')
    gene_mod_5 = sgqlc.types.Field(order_by, graphql_name='gene_mod_5')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_characteristic_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('gene_mod_5', 'id', 'stat_id')
    gene_mod_5 = sgqlc.types.Field(order_by, graphql_name='gene_mod_5')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_characteristic_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('gene_mod_5', 'id', 'stat_id')
    gene_mod_5 = sgqlc.types.Field(order_by, graphql_name='gene_mod_5')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_characteristic_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('gene_mod_5', 'id', 'stat_id')
    gene_mod_5 = sgqlc.types.Field(order_by, graphql_name='gene_mod_5')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_characteristicdescription_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_characteristicdescription_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_characteristicdescription_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_characteristicdescription_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_characteristicdescription_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_characteristicdescription_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_characteristicdescription_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_characteristicdescription_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_characteristicdescription_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_characteristicdescription_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_characteristicdescription_variance_order_by', graphql_name='variance')


class pokemon_v2_characteristicdescription_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('characteristic_id', 'id', 'language_id')
    characteristic_id = sgqlc.types.Field(order_by, graphql_name='characteristic_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_characteristicdescription_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'characteristic_id', 'description', 'id', 'language_id', 'pokemon_v2_characteristic', 'pokemon_v2_language')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_characteristicdescription_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_characteristicdescription_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_characteristicdescription_bool_exp')), graphql_name='_or')
    characteristic_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='characteristic_id')
    description = sgqlc.types.Field(String_comparison_exp, graphql_name='description')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    pokemon_v2_characteristic = sgqlc.types.Field(pokemon_v2_characteristic_bool_exp, graphql_name='pokemon_v2_characteristic')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')


class pokemon_v2_characteristicdescription_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('characteristic_id', 'description', 'id', 'language_id')
    characteristic_id = sgqlc.types.Field(order_by, graphql_name='characteristic_id')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_characteristicdescription_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('characteristic_id', 'description', 'id', 'language_id')
    characteristic_id = sgqlc.types.Field(order_by, graphql_name='characteristic_id')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_characteristicdescription_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('characteristic_id', 'description', 'id', 'language_id', 'pokemon_v2_characteristic', 'pokemon_v2_language')
    characteristic_id = sgqlc.types.Field(order_by, graphql_name='characteristic_id')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_v2_characteristic = sgqlc.types.Field(pokemon_v2_characteristic_order_by, graphql_name='pokemon_v2_characteristic')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')


class pokemon_v2_characteristicdescription_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('characteristic_id', 'id', 'language_id')
    characteristic_id = sgqlc.types.Field(order_by, graphql_name='characteristic_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_characteristicdescription_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('characteristic_id', 'id', 'language_id')
    characteristic_id = sgqlc.types.Field(order_by, graphql_name='characteristic_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_characteristicdescription_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('characteristic_id', 'id', 'language_id')
    characteristic_id = sgqlc.types.Field(order_by, graphql_name='characteristic_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_characteristicdescription_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('characteristic_id', 'id', 'language_id')
    characteristic_id = sgqlc.types.Field(order_by, graphql_name='characteristic_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_characteristicdescription_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('characteristic_id', 'id', 'language_id')
    characteristic_id = sgqlc.types.Field(order_by, graphql_name='characteristic_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_characteristicdescription_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('characteristic_id', 'id', 'language_id')
    characteristic_id = sgqlc.types.Field(order_by, graphql_name='characteristic_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_characteristicdescription_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('characteristic_id', 'id', 'language_id')
    characteristic_id = sgqlc.types.Field(order_by, graphql_name='characteristic_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contestcombo_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_contestcombo_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_contestcombo_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_contestcombo_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_contestcombo_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_contestcombo_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_contestcombo_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_contestcombo_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_contestcombo_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_contestcombo_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_contestcombo_variance_order_by', graphql_name='variance')


class pokemon_v2_contestcombo_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(order_by, graphql_name='first_move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    second_move_id = sgqlc.types.Field(order_by, graphql_name='second_move_id')


class pokemon_v2_contestcombo_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'first_move_id', 'id', 'pokemon_v2_move_by_second_move_id', 'pokemon_v2_move', 'second_move_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contestcombo_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_contestcombo_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contestcombo_bool_exp')), graphql_name='_or')
    first_move_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='first_move_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokemon_v2_move_by_second_move_id = sgqlc.types.Field('pokemon_v2_move_bool_exp', graphql_name='pokemonV2MoveBySecondMoveId')
    pokemon_v2_move = sgqlc.types.Field('pokemon_v2_move_bool_exp', graphql_name='pokemon_v2_move')
    second_move_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='second_move_id')


class pokemon_v2_contestcombo_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(order_by, graphql_name='first_move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    second_move_id = sgqlc.types.Field(order_by, graphql_name='second_move_id')


class pokemon_v2_contestcombo_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(order_by, graphql_name='first_move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    second_move_id = sgqlc.types.Field(order_by, graphql_name='second_move_id')


class pokemon_v2_contestcombo_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'pokemon_v2_move_by_second_move_id', 'pokemon_v2_move', 'second_move_id')
    first_move_id = sgqlc.types.Field(order_by, graphql_name='first_move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_v2_move_by_second_move_id = sgqlc.types.Field('pokemon_v2_move_order_by', graphql_name='pokemonV2MoveBySecondMoveId')
    pokemon_v2_move = sgqlc.types.Field('pokemon_v2_move_order_by', graphql_name='pokemon_v2_move')
    second_move_id = sgqlc.types.Field(order_by, graphql_name='second_move_id')


class pokemon_v2_contestcombo_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(order_by, graphql_name='first_move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    second_move_id = sgqlc.types.Field(order_by, graphql_name='second_move_id')


class pokemon_v2_contestcombo_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(order_by, graphql_name='first_move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    second_move_id = sgqlc.types.Field(order_by, graphql_name='second_move_id')


class pokemon_v2_contestcombo_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(order_by, graphql_name='first_move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    second_move_id = sgqlc.types.Field(order_by, graphql_name='second_move_id')


class pokemon_v2_contestcombo_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(order_by, graphql_name='first_move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    second_move_id = sgqlc.types.Field(order_by, graphql_name='second_move_id')


class pokemon_v2_contestcombo_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(order_by, graphql_name='first_move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    second_move_id = sgqlc.types.Field(order_by, graphql_name='second_move_id')


class pokemon_v2_contestcombo_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(order_by, graphql_name='first_move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    second_move_id = sgqlc.types.Field(order_by, graphql_name='second_move_id')


class pokemon_v2_contestcombo_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(order_by, graphql_name='first_move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    second_move_id = sgqlc.types.Field(order_by, graphql_name='second_move_id')


class pokemon_v2_contesteffect_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'appeal', 'id', 'jam', 'pokemon_v2_contesteffecteffecttexts', 'pokemon_v2_contesteffectflavortexts', 'pokemon_v2_moves')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contesteffect_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_contesteffect_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contesteffect_bool_exp')), graphql_name='_or')
    appeal = sgqlc.types.Field(Int_comparison_exp, graphql_name='appeal')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    jam = sgqlc.types.Field(Int_comparison_exp, graphql_name='jam')
    pokemon_v2_contesteffecteffecttexts = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_bool_exp', graphql_name='pokemon_v2_contesteffecteffecttexts')
    pokemon_v2_contesteffectflavortexts = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_bool_exp', graphql_name='pokemon_v2_contesteffectflavortexts')
    pokemon_v2_moves = sgqlc.types.Field('pokemon_v2_move_bool_exp', graphql_name='pokemon_v2_moves')


class pokemon_v2_contesteffect_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id', 'jam', 'pokemon_v2_contesteffecteffecttexts_aggregate', 'pokemon_v2_contesteffectflavortexts_aggregate', 'pokemon_v2_moves_aggregate')
    appeal = sgqlc.types.Field(order_by, graphql_name='appeal')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    jam = sgqlc.types.Field(order_by, graphql_name='jam')
    pokemon_v2_contesteffecteffecttexts_aggregate = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_aggregate_order_by', graphql_name='pokemon_v2_contesteffecteffecttexts_aggregate')
    pokemon_v2_contesteffectflavortexts_aggregate = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_aggregate_order_by', graphql_name='pokemon_v2_contesteffectflavortexts_aggregate')
    pokemon_v2_moves_aggregate = sgqlc.types.Field('pokemon_v2_move_aggregate_order_by', graphql_name='pokemon_v2_moves_aggregate')


class pokemon_v2_contesteffecteffecttext_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_variance_order_by', graphql_name='variance')


class pokemon_v2_contesteffecteffecttext_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesteffecteffecttext_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'contest_effect_id', 'effect', 'id', 'language_id', 'pokemon_v2_contesteffect', 'pokemon_v2_language')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contesteffecteffecttext_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contesteffecteffecttext_bool_exp')), graphql_name='_or')
    contest_effect_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='contest_effect_id')
    effect = sgqlc.types.Field(String_comparison_exp, graphql_name='effect')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    pokemon_v2_contesteffect = sgqlc.types.Field(pokemon_v2_contesteffect_bool_exp, graphql_name='pokemon_v2_contesteffect')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')


class pokemon_v2_contesteffecteffecttext_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'effect', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    effect = sgqlc.types.Field(order_by, graphql_name='effect')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesteffecteffecttext_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'effect', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    effect = sgqlc.types.Field(order_by, graphql_name='effect')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesteffecteffecttext_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'effect', 'id', 'language_id', 'pokemon_v2_contesteffect', 'pokemon_v2_language')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    effect = sgqlc.types.Field(order_by, graphql_name='effect')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_v2_contesteffect = sgqlc.types.Field(pokemon_v2_contesteffect_order_by, graphql_name='pokemon_v2_contesteffect')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')


class pokemon_v2_contesteffecteffecttext_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesteffecteffecttext_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesteffecteffecttext_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesteffecteffecttext_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesteffecteffecttext_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesteffecteffecttext_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesteffecteffecttext_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesteffectflavortext_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_variance_order_by', graphql_name='variance')


class pokemon_v2_contesteffectflavortext_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesteffectflavortext_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'contest_effect_id', 'flavor_text', 'id', 'language_id', 'pokemon_v2_contesteffect', 'pokemon_v2_language')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contesteffectflavortext_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contesteffectflavortext_bool_exp')), graphql_name='_or')
    contest_effect_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='contest_effect_id')
    flavor_text = sgqlc.types.Field(String_comparison_exp, graphql_name='flavor_text')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    pokemon_v2_contesteffect = sgqlc.types.Field(pokemon_v2_contesteffect_bool_exp, graphql_name='pokemon_v2_contesteffect')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')


class pokemon_v2_contesteffectflavortext_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'flavor_text', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    flavor_text = sgqlc.types.Field(order_by, graphql_name='flavor_text')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesteffectflavortext_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'flavor_text', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    flavor_text = sgqlc.types.Field(order_by, graphql_name='flavor_text')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesteffectflavortext_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'flavor_text', 'id', 'language_id', 'pokemon_v2_contesteffect', 'pokemon_v2_language')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    flavor_text = sgqlc.types.Field(order_by, graphql_name='flavor_text')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_v2_contesteffect = sgqlc.types.Field(pokemon_v2_contesteffect_order_by, graphql_name='pokemon_v2_contesteffect')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')


class pokemon_v2_contesteffectflavortext_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesteffectflavortext_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesteffectflavortext_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesteffectflavortext_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesteffectflavortext_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesteffectflavortext_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesteffectflavortext_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesttype_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_berryflavors', 'pokemon_v2_contesttypenames', 'pokemon_v2_moves')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contesttype_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_contesttype_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contesttype_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_berryflavors = sgqlc.types.Field(pokemon_v2_berryflavor_bool_exp, graphql_name='pokemon_v2_berryflavors')
    pokemon_v2_contesttypenames = sgqlc.types.Field('pokemon_v2_contesttypename_bool_exp', graphql_name='pokemon_v2_contesttypenames')
    pokemon_v2_moves = sgqlc.types.Field('pokemon_v2_move_bool_exp', graphql_name='pokemon_v2_moves')


class pokemon_v2_contesttype_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_berryflavors_aggregate', 'pokemon_v2_contesttypenames_aggregate', 'pokemon_v2_moves_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_berryflavors_aggregate = sgqlc.types.Field(pokemon_v2_berryflavor_aggregate_order_by, graphql_name='pokemon_v2_berryflavors_aggregate')
    pokemon_v2_contesttypenames_aggregate = sgqlc.types.Field('pokemon_v2_contesttypename_aggregate_order_by', graphql_name='pokemon_v2_contesttypenames_aggregate')
    pokemon_v2_moves_aggregate = sgqlc.types.Field('pokemon_v2_move_aggregate_order_by', graphql_name='pokemon_v2_moves_aggregate')


class pokemon_v2_contesttypename_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_contesttypename_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_contesttypename_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_contesttypename_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_contesttypename_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_contesttypename_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_contesttypename_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_contesttypename_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_contesttypename_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_contesttypename_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_contesttypename_variance_order_by', graphql_name='variance')


class pokemon_v2_contesttypename_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id', 'language_id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesttypename_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'color', 'contest_type_id', 'flavor', 'id', 'language_id', 'name', 'pokemon_v2_contesttype', 'pokemon_v2_language')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contesttypename_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_contesttypename_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contesttypename_bool_exp')), graphql_name='_or')
    color = sgqlc.types.Field(String_comparison_exp, graphql_name='color')
    contest_type_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='contest_type_id')
    flavor = sgqlc.types.Field(String_comparison_exp, graphql_name='flavor')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_contesttype = sgqlc.types.Field(pokemon_v2_contesttype_bool_exp, graphql_name='pokemon_v2_contesttype')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')


class pokemon_v2_contesttypename_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('color', 'contest_type_id', 'flavor', 'id', 'language_id', 'name')
    color = sgqlc.types.Field(order_by, graphql_name='color')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    flavor = sgqlc.types.Field(order_by, graphql_name='flavor')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_contesttypename_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('color', 'contest_type_id', 'flavor', 'id', 'language_id', 'name')
    color = sgqlc.types.Field(order_by, graphql_name='color')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    flavor = sgqlc.types.Field(order_by, graphql_name='flavor')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_contesttypename_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('color', 'contest_type_id', 'flavor', 'id', 'language_id', 'name', 'pokemon_v2_contesttype', 'pokemon_v2_language')
    color = sgqlc.types.Field(order_by, graphql_name='color')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    flavor = sgqlc.types.Field(order_by, graphql_name='flavor')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_contesttype = sgqlc.types.Field(pokemon_v2_contesttype_order_by, graphql_name='pokemon_v2_contesttype')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')


class pokemon_v2_contesttypename_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id', 'language_id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesttypename_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id', 'language_id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesttypename_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id', 'language_id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesttypename_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id', 'language_id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesttypename_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id', 'language_id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesttypename_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id', 'language_id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_contesttypename_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id', 'language_id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_egggroup_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_egggroupnames', 'pokemon_v2_pokemonegggroups')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_egggroup_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_egggroup_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_egggroup_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_egggroupnames = sgqlc.types.Field('pokemon_v2_egggroupname_bool_exp', graphql_name='pokemon_v2_egggroupnames')
    pokemon_v2_pokemonegggroups = sgqlc.types.Field('pokemon_v2_pokemonegggroup_bool_exp', graphql_name='pokemon_v2_pokemonegggroups')


class pokemon_v2_egggroup_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_egggroupnames_aggregate', 'pokemon_v2_pokemonegggroups_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_egggroupnames_aggregate = sgqlc.types.Field('pokemon_v2_egggroupname_aggregate_order_by', graphql_name='pokemon_v2_egggroupnames_aggregate')
    pokemon_v2_pokemonegggroups_aggregate = sgqlc.types.Field('pokemon_v2_pokemonegggroup_aggregate_order_by', graphql_name='pokemon_v2_pokemonegggroups_aggregate')


class pokemon_v2_egggroupname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_egggroupname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_egggroupname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_egggroupname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_egggroupname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_egggroupname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_egggroupname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_egggroupname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_egggroupname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_egggroupname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_egggroupname_variance_order_by', graphql_name='variance')


class pokemon_v2_egggroupname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'language_id')
    egg_group_id = sgqlc.types.Field(order_by, graphql_name='egg_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_egggroupname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'egg_group_id', 'id', 'language_id', 'name', 'pokemon_v2_egggroup', 'pokemon_v2_language')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_egggroupname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_egggroupname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_egggroupname_bool_exp')), graphql_name='_or')
    egg_group_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='egg_group_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_egggroup = sgqlc.types.Field(pokemon_v2_egggroup_bool_exp, graphql_name='pokemon_v2_egggroup')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')


class pokemon_v2_egggroupname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'language_id', 'name')
    egg_group_id = sgqlc.types.Field(order_by, graphql_name='egg_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_egggroupname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'language_id', 'name')
    egg_group_id = sgqlc.types.Field(order_by, graphql_name='egg_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_egggroupname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'language_id', 'name', 'pokemon_v2_egggroup', 'pokemon_v2_language')
    egg_group_id = sgqlc.types.Field(order_by, graphql_name='egg_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_egggroup = sgqlc.types.Field(pokemon_v2_egggroup_order_by, graphql_name='pokemon_v2_egggroup')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')


class pokemon_v2_egggroupname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'language_id')
    egg_group_id = sgqlc.types.Field(order_by, graphql_name='egg_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_egggroupname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'language_id')
    egg_group_id = sgqlc.types.Field(order_by, graphql_name='egg_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_egggroupname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'language_id')
    egg_group_id = sgqlc.types.Field(order_by, graphql_name='egg_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_egggroupname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'language_id')
    egg_group_id = sgqlc.types.Field(order_by, graphql_name='egg_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_egggroupname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'language_id')
    egg_group_id = sgqlc.types.Field(order_by, graphql_name='egg_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_egggroupname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'language_id')
    egg_group_id = sgqlc.types.Field(order_by, graphql_name='egg_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_egggroupname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'language_id')
    egg_group_id = sgqlc.types.Field(order_by, graphql_name='egg_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encounter_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_encounter_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_encounter_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_encounter_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_encounter_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_encounter_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_encounter_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_encounter_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_encounter_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_encounter_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_encounter_variance_order_by', graphql_name='variance')


class pokemon_v2_encounter_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'version_id')
    encounter_slot_id = sgqlc.types.Field(order_by, graphql_name='encounter_slot_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    max_level = sgqlc.types.Field(order_by, graphql_name='max_level')
    min_level = sgqlc.types.Field(order_by, graphql_name='min_level')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_encounter_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'pokemon_v2_encounterconditionvaluemaps', 'pokemon_v2_encounterslot', 'pokemon_v2_locationarea', 'pokemon_v2_pokemon', 'pokemon_v2_version', 'version_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounter_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_encounter_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounter_bool_exp')), graphql_name='_or')
    encounter_slot_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='encounter_slot_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    location_area_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='location_area_id')
    max_level = sgqlc.types.Field(Int_comparison_exp, graphql_name='max_level')
    min_level = sgqlc.types.Field(Int_comparison_exp, graphql_name='min_level')
    pokemon_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_id')
    pokemon_v2_encounterconditionvaluemaps = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_bool_exp', graphql_name='pokemon_v2_encounterconditionvaluemaps')
    pokemon_v2_encounterslot = sgqlc.types.Field('pokemon_v2_encounterslot_bool_exp', graphql_name='pokemon_v2_encounterslot')
    pokemon_v2_locationarea = sgqlc.types.Field('pokemon_v2_locationarea_bool_exp', graphql_name='pokemon_v2_locationarea')
    pokemon_v2_pokemon = sgqlc.types.Field('pokemon_v2_pokemon_bool_exp', graphql_name='pokemon_v2_pokemon')
    pokemon_v2_version = sgqlc.types.Field('pokemon_v2_version_bool_exp', graphql_name='pokemon_v2_version')
    version_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='version_id')


class pokemon_v2_encounter_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'version_id')
    encounter_slot_id = sgqlc.types.Field(order_by, graphql_name='encounter_slot_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    max_level = sgqlc.types.Field(order_by, graphql_name='max_level')
    min_level = sgqlc.types.Field(order_by, graphql_name='min_level')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_encounter_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'version_id')
    encounter_slot_id = sgqlc.types.Field(order_by, graphql_name='encounter_slot_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    max_level = sgqlc.types.Field(order_by, graphql_name='max_level')
    min_level = sgqlc.types.Field(order_by, graphql_name='min_level')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_encounter_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'pokemon_v2_encounterconditionvaluemaps_aggregate', 'pokemon_v2_encounterslot', 'pokemon_v2_locationarea', 'pokemon_v2_pokemon', 'pokemon_v2_version', 'version_id')
    encounter_slot_id = sgqlc.types.Field(order_by, graphql_name='encounter_slot_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    max_level = sgqlc.types.Field(order_by, graphql_name='max_level')
    min_level = sgqlc.types.Field(order_by, graphql_name='min_level')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    pokemon_v2_encounterconditionvaluemaps_aggregate = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_aggregate_order_by', graphql_name='pokemon_v2_encounterconditionvaluemaps_aggregate')
    pokemon_v2_encounterslot = sgqlc.types.Field('pokemon_v2_encounterslot_order_by', graphql_name='pokemon_v2_encounterslot')
    pokemon_v2_locationarea = sgqlc.types.Field('pokemon_v2_locationarea_order_by', graphql_name='pokemon_v2_locationarea')
    pokemon_v2_pokemon = sgqlc.types.Field('pokemon_v2_pokemon_order_by', graphql_name='pokemon_v2_pokemon')
    pokemon_v2_version = sgqlc.types.Field('pokemon_v2_version_order_by', graphql_name='pokemon_v2_version')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_encounter_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'version_id')
    encounter_slot_id = sgqlc.types.Field(order_by, graphql_name='encounter_slot_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    max_level = sgqlc.types.Field(order_by, graphql_name='max_level')
    min_level = sgqlc.types.Field(order_by, graphql_name='min_level')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_encounter_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'version_id')
    encounter_slot_id = sgqlc.types.Field(order_by, graphql_name='encounter_slot_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    max_level = sgqlc.types.Field(order_by, graphql_name='max_level')
    min_level = sgqlc.types.Field(order_by, graphql_name='min_level')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_encounter_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'version_id')
    encounter_slot_id = sgqlc.types.Field(order_by, graphql_name='encounter_slot_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    max_level = sgqlc.types.Field(order_by, graphql_name='max_level')
    min_level = sgqlc.types.Field(order_by, graphql_name='min_level')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_encounter_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'version_id')
    encounter_slot_id = sgqlc.types.Field(order_by, graphql_name='encounter_slot_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    max_level = sgqlc.types.Field(order_by, graphql_name='max_level')
    min_level = sgqlc.types.Field(order_by, graphql_name='min_level')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_encounter_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'version_id')
    encounter_slot_id = sgqlc.types.Field(order_by, graphql_name='encounter_slot_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    max_level = sgqlc.types.Field(order_by, graphql_name='max_level')
    min_level = sgqlc.types.Field(order_by, graphql_name='min_level')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_encounter_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'version_id')
    encounter_slot_id = sgqlc.types.Field(order_by, graphql_name='encounter_slot_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    max_level = sgqlc.types.Field(order_by, graphql_name='max_level')
    min_level = sgqlc.types.Field(order_by, graphql_name='min_level')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_encounter_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'version_id')
    encounter_slot_id = sgqlc.types.Field(order_by, graphql_name='encounter_slot_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    max_level = sgqlc.types.Field(order_by, graphql_name='max_level')
    min_level = sgqlc.types.Field(order_by, graphql_name='min_level')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_encountercondition_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_encounterconditionnames', 'pokemon_v2_encounterconditionvalues')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encountercondition_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_encountercondition_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encountercondition_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_encounterconditionnames = sgqlc.types.Field('pokemon_v2_encounterconditionname_bool_exp', graphql_name='pokemon_v2_encounterconditionnames')
    pokemon_v2_encounterconditionvalues = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_bool_exp', graphql_name='pokemon_v2_encounterconditionvalues')


class pokemon_v2_encountercondition_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_encounterconditionnames_aggregate', 'pokemon_v2_encounterconditionvalues_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_encounterconditionnames_aggregate = sgqlc.types.Field('pokemon_v2_encounterconditionname_aggregate_order_by', graphql_name='pokemon_v2_encounterconditionnames_aggregate')
    pokemon_v2_encounterconditionvalues_aggregate = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_aggregate_order_by', graphql_name='pokemon_v2_encounterconditionvalues_aggregate')


class pokemon_v2_encounterconditionname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_encounterconditionname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_encounterconditionname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_encounterconditionname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_encounterconditionname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_encounterconditionname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_encounterconditionname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_encounterconditionname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_encounterconditionname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_encounterconditionname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_encounterconditionname_variance_order_by', graphql_name='variance')


class pokemon_v2_encounterconditionname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'language_id')
    encounter_condition_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encounterconditionname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'encounter_condition_id', 'id', 'language_id', 'name', 'pokemon_v2_encountercondition', 'pokemon_v2_language')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterconditionname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_encounterconditionname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterconditionname_bool_exp')), graphql_name='_or')
    encounter_condition_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_encountercondition = sgqlc.types.Field(pokemon_v2_encountercondition_bool_exp, graphql_name='pokemon_v2_encountercondition')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')


class pokemon_v2_encounterconditionname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'language_id', 'name')
    encounter_condition_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_encounterconditionname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'language_id', 'name')
    encounter_condition_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_encounterconditionname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'language_id', 'name', 'pokemon_v2_encountercondition', 'pokemon_v2_language')
    encounter_condition_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_encountercondition = sgqlc.types.Field(pokemon_v2_encountercondition_order_by, graphql_name='pokemon_v2_encountercondition')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')


class pokemon_v2_encounterconditionname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'language_id')
    encounter_condition_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encounterconditionname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'language_id')
    encounter_condition_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encounterconditionname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'language_id')
    encounter_condition_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encounterconditionname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'language_id')
    encounter_condition_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encounterconditionname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'language_id')
    encounter_condition_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encounterconditionname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'language_id')
    encounter_condition_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encounterconditionname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'language_id')
    encounter_condition_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encounterconditionvalue_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_variance_order_by', graphql_name='variance')


class pokemon_v2_encounterconditionvalue_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id')
    encounter_condition_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_encounterconditionvalue_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'encounter_condition_id', 'id', 'is_default', 'name', 'pokemon_v2_encountercondition', 'pokemon_v2_encounterconditionvaluemaps', 'pokemon_v2_encounterconditionvaluenames')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterconditionvalue_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterconditionvalue_bool_exp')), graphql_name='_or')
    encounter_condition_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    is_default = sgqlc.types.Field(Boolean_comparison_exp, graphql_name='is_default')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_encountercondition = sgqlc.types.Field(pokemon_v2_encountercondition_bool_exp, graphql_name='pokemon_v2_encountercondition')
    pokemon_v2_encounterconditionvaluemaps = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_bool_exp', graphql_name='pokemon_v2_encounterconditionvaluemaps')
    pokemon_v2_encounterconditionvaluenames = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_bool_exp', graphql_name='pokemon_v2_encounterconditionvaluenames')


class pokemon_v2_encounterconditionvalue_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'name')
    encounter_condition_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_encounterconditionvalue_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'name')
    encounter_condition_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_encounterconditionvalue_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'is_default', 'name', 'pokemon_v2_encountercondition', 'pokemon_v2_encounterconditionvaluemaps_aggregate', 'pokemon_v2_encounterconditionvaluenames_aggregate')
    encounter_condition_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    is_default = sgqlc.types.Field(order_by, graphql_name='is_default')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_encountercondition = sgqlc.types.Field(pokemon_v2_encountercondition_order_by, graphql_name='pokemon_v2_encountercondition')
    pokemon_v2_encounterconditionvaluemaps_aggregate = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_aggregate_order_by', graphql_name='pokemon_v2_encounterconditionvaluemaps_aggregate')
    pokemon_v2_encounterconditionvaluenames_aggregate = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_aggregate_order_by', graphql_name='pokemon_v2_encounterconditionvaluenames_aggregate')


class pokemon_v2_encounterconditionvalue_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id')
    encounter_condition_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_encounterconditionvalue_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id')
    encounter_condition_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_encounterconditionvalue_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id')
    encounter_condition_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_encounterconditionvalue_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id')
    encounter_condition_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_encounterconditionvalue_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id')
    encounter_condition_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_encounterconditionvalue_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id')
    encounter_condition_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_encounterconditionvalue_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id')
    encounter_condition_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_encounterconditionvaluemap_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_variance_order_by', graphql_name='variance')


class pokemon_v2_encounterconditionvaluemap_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'encounter_id', 'id')
    encounter_condition_value_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_value_id')
    encounter_id = sgqlc.types.Field(order_by, graphql_name='encounter_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_encounterconditionvaluemap_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'encounter_condition_value_id', 'encounter_id', 'id', 'pokemon_v2_encounter', 'pokemon_v2_encounterconditionvalue')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterconditionvaluemap_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterconditionvaluemap_bool_exp')), graphql_name='_or')
    encounter_condition_value_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='encounter_condition_value_id')
    encounter_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='encounter_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokemon_v2_encounter = sgqlc.types.Field(pokemon_v2_encounter_bool_exp, graphql_name='pokemon_v2_encounter')
    pokemon_v2_encounterconditionvalue = sgqlc.types.Field(pokemon_v2_encounterconditionvalue_bool_exp, graphql_name='pokemon_v2_encounterconditionvalue')


class pokemon_v2_encounterconditionvaluemap_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'encounter_id', 'id')
    encounter_condition_value_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_value_id')
    encounter_id = sgqlc.types.Field(order_by, graphql_name='encounter_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_encounterconditionvaluemap_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'encounter_id', 'id')
    encounter_condition_value_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_value_id')
    encounter_id = sgqlc.types.Field(order_by, graphql_name='encounter_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_encounterconditionvaluemap_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'encounter_id', 'id', 'pokemon_v2_encounter', 'pokemon_v2_encounterconditionvalue')
    encounter_condition_value_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_value_id')
    encounter_id = sgqlc.types.Field(order_by, graphql_name='encounter_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_v2_encounter = sgqlc.types.Field(pokemon_v2_encounter_order_by, graphql_name='pokemon_v2_encounter')
    pokemon_v2_encounterconditionvalue = sgqlc.types.Field(pokemon_v2_encounterconditionvalue_order_by, graphql_name='pokemon_v2_encounterconditionvalue')


class pokemon_v2_encounterconditionvaluemap_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'encounter_id', 'id')
    encounter_condition_value_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_value_id')
    encounter_id = sgqlc.types.Field(order_by, graphql_name='encounter_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_encounterconditionvaluemap_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'encounter_id', 'id')
    encounter_condition_value_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_value_id')
    encounter_id = sgqlc.types.Field(order_by, graphql_name='encounter_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_encounterconditionvaluemap_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'encounter_id', 'id')
    encounter_condition_value_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_value_id')
    encounter_id = sgqlc.types.Field(order_by, graphql_name='encounter_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_encounterconditionvaluemap_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'encounter_id', 'id')
    encounter_condition_value_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_value_id')
    encounter_id = sgqlc.types.Field(order_by, graphql_name='encounter_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_encounterconditionvaluemap_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'encounter_id', 'id')
    encounter_condition_value_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_value_id')
    encounter_id = sgqlc.types.Field(order_by, graphql_name='encounter_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_encounterconditionvaluemap_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'encounter_id', 'id')
    encounter_condition_value_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_value_id')
    encounter_id = sgqlc.types.Field(order_by, graphql_name='encounter_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_encounterconditionvaluemap_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'encounter_id', 'id')
    encounter_condition_value_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_value_id')
    encounter_id = sgqlc.types.Field(order_by, graphql_name='encounter_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_encounterconditionvaluename_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_variance_order_by', graphql_name='variance')


class pokemon_v2_encounterconditionvaluename_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'id', 'language_id')
    encounter_condition_value_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_value_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encounterconditionvaluename_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'encounter_condition_value_id', 'id', 'language_id', 'name', 'pokemon_v2_encounterconditionvalue', 'pokemon_v2_language')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterconditionvaluename_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterconditionvaluename_bool_exp')), graphql_name='_or')
    encounter_condition_value_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='encounter_condition_value_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_encounterconditionvalue = sgqlc.types.Field(pokemon_v2_encounterconditionvalue_bool_exp, graphql_name='pokemon_v2_encounterconditionvalue')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')


class pokemon_v2_encounterconditionvaluename_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'id', 'language_id', 'name')
    encounter_condition_value_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_value_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_encounterconditionvaluename_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'id', 'language_id', 'name')
    encounter_condition_value_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_value_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_encounterconditionvaluename_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'id', 'language_id', 'name', 'pokemon_v2_encounterconditionvalue', 'pokemon_v2_language')
    encounter_condition_value_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_value_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_encounterconditionvalue = sgqlc.types.Field(pokemon_v2_encounterconditionvalue_order_by, graphql_name='pokemon_v2_encounterconditionvalue')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')


class pokemon_v2_encounterconditionvaluename_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'id', 'language_id')
    encounter_condition_value_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_value_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encounterconditionvaluename_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'id', 'language_id')
    encounter_condition_value_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_value_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encounterconditionvaluename_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'id', 'language_id')
    encounter_condition_value_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_value_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encounterconditionvaluename_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'id', 'language_id')
    encounter_condition_value_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_value_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encounterconditionvaluename_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'id', 'language_id')
    encounter_condition_value_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_value_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encounterconditionvaluename_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'id', 'language_id')
    encounter_condition_value_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_value_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encounterconditionvaluename_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'id', 'language_id')
    encounter_condition_value_id = sgqlc.types.Field(order_by, graphql_name='encounter_condition_value_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encountermethod_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'order', 'pokemon_v2_encountermethodnames', 'pokemon_v2_encounterslots', 'pokemon_v2_locationareaencounterrates')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encountermethod_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_encountermethod_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encountermethod_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    order = sgqlc.types.Field(Int_comparison_exp, graphql_name='order')
    pokemon_v2_encountermethodnames = sgqlc.types.Field('pokemon_v2_encountermethodname_bool_exp', graphql_name='pokemon_v2_encountermethodnames')
    pokemon_v2_encounterslots = sgqlc.types.Field('pokemon_v2_encounterslot_bool_exp', graphql_name='pokemon_v2_encounterslots')
    pokemon_v2_locationareaencounterrates = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_bool_exp', graphql_name='pokemon_v2_locationareaencounterrates')


class pokemon_v2_encountermethod_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'order', 'pokemon_v2_encountermethodnames_aggregate', 'pokemon_v2_encounterslots_aggregate', 'pokemon_v2_locationareaencounterrates_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_v2_encountermethodnames_aggregate = sgqlc.types.Field('pokemon_v2_encountermethodname_aggregate_order_by', graphql_name='pokemon_v2_encountermethodnames_aggregate')
    pokemon_v2_encounterslots_aggregate = sgqlc.types.Field('pokemon_v2_encounterslot_aggregate_order_by', graphql_name='pokemon_v2_encounterslots_aggregate')
    pokemon_v2_locationareaencounterrates_aggregate = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_aggregate_order_by', graphql_name='pokemon_v2_locationareaencounterrates_aggregate')


class pokemon_v2_encountermethodname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_encountermethodname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_encountermethodname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_encountermethodname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_encountermethodname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_encountermethodname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_encountermethodname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_encountermethodname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_encountermethodname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_encountermethodname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_encountermethodname_variance_order_by', graphql_name='variance')


class pokemon_v2_encountermethodname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'language_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encountermethodname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'encounter_method_id', 'id', 'language_id', 'name', 'pokemon_v2_encountermethod', 'pokemon_v2_language')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encountermethodname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_encountermethodname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encountermethodname_bool_exp')), graphql_name='_or')
    encounter_method_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_encountermethod = sgqlc.types.Field(pokemon_v2_encountermethod_bool_exp, graphql_name='pokemon_v2_encountermethod')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')


class pokemon_v2_encountermethodname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'language_id', 'name')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_encountermethodname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'language_id', 'name')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_encountermethodname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'language_id', 'name', 'pokemon_v2_encountermethod', 'pokemon_v2_language')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_encountermethod = sgqlc.types.Field(pokemon_v2_encountermethod_order_by, graphql_name='pokemon_v2_encountermethod')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')


class pokemon_v2_encountermethodname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'language_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encountermethodname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'language_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encountermethodname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'language_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encountermethodname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'language_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encountermethodname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'language_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encountermethodname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'language_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encountermethodname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'language_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_encounterslot_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_encounterslot_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_encounterslot_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_encounterslot_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_encounterslot_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_encounterslot_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_encounterslot_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_encounterslot_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_encounterslot_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_encounterslot_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_encounterslot_variance_order_by', graphql_name='variance')


class pokemon_v2_encounterslot_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'rarity', 'slot', 'version_group_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    rarity = sgqlc.types.Field(order_by, graphql_name='rarity')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_encounterslot_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'encounter_method_id', 'id', 'pokemon_v2_encountermethod', 'pokemon_v2_encounters', 'pokemon_v2_versiongroup', 'rarity', 'slot', 'version_group_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterslot_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_encounterslot_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterslot_bool_exp')), graphql_name='_or')
    encounter_method_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokemon_v2_encountermethod = sgqlc.types.Field(pokemon_v2_encountermethod_bool_exp, graphql_name='pokemon_v2_encountermethod')
    pokemon_v2_encounters = sgqlc.types.Field(pokemon_v2_encounter_bool_exp, graphql_name='pokemon_v2_encounters')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_bool_exp', graphql_name='pokemon_v2_versiongroup')
    rarity = sgqlc.types.Field(Int_comparison_exp, graphql_name='rarity')
    slot = sgqlc.types.Field(Int_comparison_exp, graphql_name='slot')
    version_group_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='version_group_id')


class pokemon_v2_encounterslot_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'rarity', 'slot', 'version_group_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    rarity = sgqlc.types.Field(order_by, graphql_name='rarity')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_encounterslot_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'rarity', 'slot', 'version_group_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    rarity = sgqlc.types.Field(order_by, graphql_name='rarity')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_encounterslot_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'pokemon_v2_encountermethod', 'pokemon_v2_encounters_aggregate', 'pokemon_v2_versiongroup', 'rarity', 'slot', 'version_group_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_v2_encountermethod = sgqlc.types.Field(pokemon_v2_encountermethod_order_by, graphql_name='pokemon_v2_encountermethod')
    pokemon_v2_encounters_aggregate = sgqlc.types.Field(pokemon_v2_encounter_aggregate_order_by, graphql_name='pokemon_v2_encounters_aggregate')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_order_by', graphql_name='pokemon_v2_versiongroup')
    rarity = sgqlc.types.Field(order_by, graphql_name='rarity')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_encounterslot_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'rarity', 'slot', 'version_group_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    rarity = sgqlc.types.Field(order_by, graphql_name='rarity')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_encounterslot_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'rarity', 'slot', 'version_group_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    rarity = sgqlc.types.Field(order_by, graphql_name='rarity')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_encounterslot_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'rarity', 'slot', 'version_group_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    rarity = sgqlc.types.Field(order_by, graphql_name='rarity')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_encounterslot_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'rarity', 'slot', 'version_group_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    rarity = sgqlc.types.Field(order_by, graphql_name='rarity')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_encounterslot_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'rarity', 'slot', 'version_group_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    rarity = sgqlc.types.Field(order_by, graphql_name='rarity')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_encounterslot_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'rarity', 'slot', 'version_group_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    rarity = sgqlc.types.Field(order_by, graphql_name='rarity')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_encounterslot_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'rarity', 'slot', 'version_group_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    rarity = sgqlc.types.Field(order_by, graphql_name='rarity')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_evolutionchain_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_evolutionchain_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_evolutionchain_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_evolutionchain_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_evolutionchain_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_evolutionchain_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_evolutionchain_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_evolutionchain_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_evolutionchain_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_evolutionchain_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_evolutionchain_variance_order_by', graphql_name='variance')


class pokemon_v2_evolutionchain_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('baby_trigger_item_id', 'id')
    baby_trigger_item_id = sgqlc.types.Field(order_by, graphql_name='baby_trigger_item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_evolutionchain_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'baby_trigger_item_id', 'id', 'pokemon_v2_item', 'pokemon_v2_pokemonspecies')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_evolutionchain_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_evolutionchain_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_evolutionchain_bool_exp')), graphql_name='_or')
    baby_trigger_item_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='baby_trigger_item_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokemon_v2_item = sgqlc.types.Field('pokemon_v2_item_bool_exp', graphql_name='pokemon_v2_item')
    pokemon_v2_pokemonspecies = sgqlc.types.Field('pokemon_v2_pokemonspecies_bool_exp', graphql_name='pokemon_v2_pokemonspecies')


class pokemon_v2_evolutionchain_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('baby_trigger_item_id', 'id')
    baby_trigger_item_id = sgqlc.types.Field(order_by, graphql_name='baby_trigger_item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_evolutionchain_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('baby_trigger_item_id', 'id')
    baby_trigger_item_id = sgqlc.types.Field(order_by, graphql_name='baby_trigger_item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_evolutionchain_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('baby_trigger_item_id', 'id', 'pokemon_v2_item', 'pokemon_v2_pokemonspecies_aggregate')
    baby_trigger_item_id = sgqlc.types.Field(order_by, graphql_name='baby_trigger_item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_v2_item = sgqlc.types.Field('pokemon_v2_item_order_by', graphql_name='pokemon_v2_item')
    pokemon_v2_pokemonspecies_aggregate = sgqlc.types.Field('pokemon_v2_pokemonspecies_aggregate_order_by', graphql_name='pokemon_v2_pokemonspecies_aggregate')


class pokemon_v2_evolutionchain_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('baby_trigger_item_id', 'id')
    baby_trigger_item_id = sgqlc.types.Field(order_by, graphql_name='baby_trigger_item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_evolutionchain_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('baby_trigger_item_id', 'id')
    baby_trigger_item_id = sgqlc.types.Field(order_by, graphql_name='baby_trigger_item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_evolutionchain_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('baby_trigger_item_id', 'id')
    baby_trigger_item_id = sgqlc.types.Field(order_by, graphql_name='baby_trigger_item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_evolutionchain_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('baby_trigger_item_id', 'id')
    baby_trigger_item_id = sgqlc.types.Field(order_by, graphql_name='baby_trigger_item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_evolutionchain_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('baby_trigger_item_id', 'id')
    baby_trigger_item_id = sgqlc.types.Field(order_by, graphql_name='baby_trigger_item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_evolutionchain_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('baby_trigger_item_id', 'id')
    baby_trigger_item_id = sgqlc.types.Field(order_by, graphql_name='baby_trigger_item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_evolutionchain_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('baby_trigger_item_id', 'id')
    baby_trigger_item_id = sgqlc.types.Field(order_by, graphql_name='baby_trigger_item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')


class pokemon_v2_evolutiontrigger_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_evolutiontriggernames', 'pokemon_v2_pokemonevolutions')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_evolutiontrigger_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_evolutiontrigger_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_evolutiontrigger_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_evolutiontriggernames = sgqlc.types.Field('pokemon_v2_evolutiontriggername_bool_exp', graphql_name='pokemon_v2_evolutiontriggernames')
    pokemon_v2_pokemonevolutions = sgqlc.types.Field('pokemon_v2_pokemonevolution_bool_exp', graphql_name='pokemon_v2_pokemonevolutions')


class pokemon_v2_evolutiontrigger_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_evolutiontriggernames_aggregate', 'pokemon_v2_pokemonevolutions_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_evolutiontriggernames_aggregate = sgqlc.types.Field('pokemon_v2_evolutiontriggername_aggregate_order_by', graphql_name='pokemon_v2_evolutiontriggernames_aggregate')
    pokemon_v2_pokemonevolutions_aggregate = sgqlc.types.Field('pokemon_v2_pokemonevolution_aggregate_order_by', graphql_name='pokemon_v2_pokemonevolutions_aggregate')


class pokemon_v2_evolutiontriggername_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_evolutiontriggername_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_evolutiontriggername_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_evolutiontriggername_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_evolutiontriggername_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_evolutiontriggername_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_evolutiontriggername_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_evolutiontriggername_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_evolutiontriggername_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_evolutiontriggername_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_evolutiontriggername_variance_order_by', graphql_name='variance')


class pokemon_v2_evolutiontriggername_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_trigger_id', 'id', 'language_id')
    evolution_trigger_id = sgqlc.types.Field(order_by, graphql_name='evolution_trigger_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_evolutiontriggername_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'evolution_trigger_id', 'id', 'language_id', 'name', 'pokemon_v2_evolutiontrigger', 'pokemon_v2_language')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_evolutiontriggername_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_evolutiontriggername_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_evolutiontriggername_bool_exp')), graphql_name='_or')
    evolution_trigger_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='evolution_trigger_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_evolutiontrigger = sgqlc.types.Field(pokemon_v2_evolutiontrigger_bool_exp, graphql_name='pokemon_v2_evolutiontrigger')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')


class pokemon_v2_evolutiontriggername_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_trigger_id', 'id', 'language_id', 'name')
    evolution_trigger_id = sgqlc.types.Field(order_by, graphql_name='evolution_trigger_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_evolutiontriggername_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_trigger_id', 'id', 'language_id', 'name')
    evolution_trigger_id = sgqlc.types.Field(order_by, graphql_name='evolution_trigger_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_evolutiontriggername_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_trigger_id', 'id', 'language_id', 'name', 'pokemon_v2_evolutiontrigger', 'pokemon_v2_language')
    evolution_trigger_id = sgqlc.types.Field(order_by, graphql_name='evolution_trigger_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_evolutiontrigger = sgqlc.types.Field(pokemon_v2_evolutiontrigger_order_by, graphql_name='pokemon_v2_evolutiontrigger')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')


class pokemon_v2_evolutiontriggername_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_trigger_id', 'id', 'language_id')
    evolution_trigger_id = sgqlc.types.Field(order_by, graphql_name='evolution_trigger_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_evolutiontriggername_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_trigger_id', 'id', 'language_id')
    evolution_trigger_id = sgqlc.types.Field(order_by, graphql_name='evolution_trigger_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_evolutiontriggername_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_trigger_id', 'id', 'language_id')
    evolution_trigger_id = sgqlc.types.Field(order_by, graphql_name='evolution_trigger_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_evolutiontriggername_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_trigger_id', 'id', 'language_id')
    evolution_trigger_id = sgqlc.types.Field(order_by, graphql_name='evolution_trigger_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_evolutiontriggername_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_trigger_id', 'id', 'language_id')
    evolution_trigger_id = sgqlc.types.Field(order_by, graphql_name='evolution_trigger_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_evolutiontriggername_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_trigger_id', 'id', 'language_id')
    evolution_trigger_id = sgqlc.types.Field(order_by, graphql_name='evolution_trigger_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_evolutiontriggername_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_trigger_id', 'id', 'language_id')
    evolution_trigger_id = sgqlc.types.Field(order_by, graphql_name='evolution_trigger_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_experience_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_experience_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_experience_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_experience_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_experience_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_experience_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_experience_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_experience_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_experience_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_experience_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_experience_variance_order_by', graphql_name='variance')


class pokemon_v2_experience_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('experience', 'growth_rate_id', 'id', 'level')
    experience = sgqlc.types.Field(order_by, graphql_name='experience')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    level = sgqlc.types.Field(order_by, graphql_name='level')


class pokemon_v2_experience_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'experience', 'growth_rate_id', 'id', 'level', 'pokemon_v2_growthrate')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_experience_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_experience_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_experience_bool_exp')), graphql_name='_or')
    experience = sgqlc.types.Field(Int_comparison_exp, graphql_name='experience')
    growth_rate_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    level = sgqlc.types.Field(Int_comparison_exp, graphql_name='level')
    pokemon_v2_growthrate = sgqlc.types.Field('pokemon_v2_growthrate_bool_exp', graphql_name='pokemon_v2_growthrate')


class pokemon_v2_experience_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('experience', 'growth_rate_id', 'id', 'level')
    experience = sgqlc.types.Field(order_by, graphql_name='experience')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    level = sgqlc.types.Field(order_by, graphql_name='level')


class pokemon_v2_experience_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('experience', 'growth_rate_id', 'id', 'level')
    experience = sgqlc.types.Field(order_by, graphql_name='experience')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    level = sgqlc.types.Field(order_by, graphql_name='level')


class pokemon_v2_experience_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('experience', 'growth_rate_id', 'id', 'level', 'pokemon_v2_growthrate')
    experience = sgqlc.types.Field(order_by, graphql_name='experience')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    level = sgqlc.types.Field(order_by, graphql_name='level')
    pokemon_v2_growthrate = sgqlc.types.Field('pokemon_v2_growthrate_order_by', graphql_name='pokemon_v2_growthrate')


class pokemon_v2_experience_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('experience', 'growth_rate_id', 'id', 'level')
    experience = sgqlc.types.Field(order_by, graphql_name='experience')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    level = sgqlc.types.Field(order_by, graphql_name='level')


class pokemon_v2_experience_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('experience', 'growth_rate_id', 'id', 'level')
    experience = sgqlc.types.Field(order_by, graphql_name='experience')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    level = sgqlc.types.Field(order_by, graphql_name='level')


class pokemon_v2_experience_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('experience', 'growth_rate_id', 'id', 'level')
    experience = sgqlc.types.Field(order_by, graphql_name='experience')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    level = sgqlc.types.Field(order_by, graphql_name='level')


class pokemon_v2_experience_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('experience', 'growth_rate_id', 'id', 'level')
    experience = sgqlc.types.Field(order_by, graphql_name='experience')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    level = sgqlc.types.Field(order_by, graphql_name='level')


class pokemon_v2_experience_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('experience', 'growth_rate_id', 'id', 'level')
    experience = sgqlc.types.Field(order_by, graphql_name='experience')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    level = sgqlc.types.Field(order_by, graphql_name='level')


class pokemon_v2_experience_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('experience', 'growth_rate_id', 'id', 'level')
    experience = sgqlc.types.Field(order_by, graphql_name='experience')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    level = sgqlc.types.Field(order_by, graphql_name='level')


class pokemon_v2_experience_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('experience', 'growth_rate_id', 'id', 'level')
    experience = sgqlc.types.Field(order_by, graphql_name='experience')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    level = sgqlc.types.Field(order_by, graphql_name='level')


class pokemon_v2_gender_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_pokemonevolutions')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_gender_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_gender_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_gender_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_pokemonevolutions = sgqlc.types.Field('pokemon_v2_pokemonevolution_bool_exp', graphql_name='pokemon_v2_pokemonevolutions')


class pokemon_v2_gender_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_pokemonevolutions_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_pokemonevolutions_aggregate = sgqlc.types.Field('pokemon_v2_pokemonevolution_aggregate_order_by', graphql_name='pokemon_v2_pokemonevolutions_aggregate')


class pokemon_v2_generation_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_generation_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_generation_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_generation_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_generation_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_generation_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_generation_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_generation_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_generation_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_generation_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_generation_variance_order_by', graphql_name='variance')


class pokemon_v2_generation_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_generation_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_abilities', 'pokemon_v2_generationnames', 'pokemon_v2_itemgameindices', 'pokemon_v2_locationgameindices', 'pokemon_v2_moves', 'pokemon_v2_pokemonformgenerations', 'pokemon_v2_pokemonspecies', 'pokemon_v2_pokemontypepasts', 'pokemon_v2_region', 'pokemon_v2_typegameindices', 'pokemon_v2_types', 'pokemon_v2_versiongroups', 'region_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_generation_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_generation_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_generation_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_abilities = sgqlc.types.Field(pokemon_v2_ability_bool_exp, graphql_name='pokemon_v2_abilities')
    pokemon_v2_generationnames = sgqlc.types.Field('pokemon_v2_generationname_bool_exp', graphql_name='pokemon_v2_generationnames')
    pokemon_v2_itemgameindices = sgqlc.types.Field('pokemon_v2_itemgameindex_bool_exp', graphql_name='pokemon_v2_itemgameindices')
    pokemon_v2_locationgameindices = sgqlc.types.Field('pokemon_v2_locationgameindex_bool_exp', graphql_name='pokemon_v2_locationgameindices')
    pokemon_v2_moves = sgqlc.types.Field('pokemon_v2_move_bool_exp', graphql_name='pokemon_v2_moves')
    pokemon_v2_pokemonformgenerations = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_bool_exp', graphql_name='pokemon_v2_pokemonformgenerations')
    pokemon_v2_pokemonspecies = sgqlc.types.Field('pokemon_v2_pokemonspecies_bool_exp', graphql_name='pokemon_v2_pokemonspecies')
    pokemon_v2_pokemontypepasts = sgqlc.types.Field('pokemon_v2_pokemontypepast_bool_exp', graphql_name='pokemon_v2_pokemontypepasts')
    pokemon_v2_region = sgqlc.types.Field('pokemon_v2_region_bool_exp', graphql_name='pokemon_v2_region')
    pokemon_v2_typegameindices = sgqlc.types.Field('pokemon_v2_typegameindex_bool_exp', graphql_name='pokemon_v2_typegameindices')
    pokemon_v2_types = sgqlc.types.Field('pokemon_v2_type_bool_exp', graphql_name='pokemon_v2_types')
    pokemon_v2_versiongroups = sgqlc.types.Field('pokemon_v2_versiongroup_bool_exp', graphql_name='pokemon_v2_versiongroups')
    region_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='region_id')


class pokemon_v2_generation_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_generation_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_generation_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_abilities_aggregate', 'pokemon_v2_generationnames_aggregate', 'pokemon_v2_itemgameindices_aggregate', 'pokemon_v2_locationgameindices_aggregate', 'pokemon_v2_moves_aggregate', 'pokemon_v2_pokemonformgenerations_aggregate', 'pokemon_v2_pokemonspecies_aggregate', 'pokemon_v2_pokemontypepasts_aggregate', 'pokemon_v2_region', 'pokemon_v2_typegameindices_aggregate', 'pokemon_v2_types_aggregate', 'pokemon_v2_versiongroups_aggregate', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_abilities_aggregate = sgqlc.types.Field(pokemon_v2_ability_aggregate_order_by, graphql_name='pokemon_v2_abilities_aggregate')
    pokemon_v2_generationnames_aggregate = sgqlc.types.Field('pokemon_v2_generationname_aggregate_order_by', graphql_name='pokemon_v2_generationnames_aggregate')
    pokemon_v2_itemgameindices_aggregate = sgqlc.types.Field('pokemon_v2_itemgameindex_aggregate_order_by', graphql_name='pokemon_v2_itemgameindices_aggregate')
    pokemon_v2_locationgameindices_aggregate = sgqlc.types.Field('pokemon_v2_locationgameindex_aggregate_order_by', graphql_name='pokemon_v2_locationgameindices_aggregate')
    pokemon_v2_moves_aggregate = sgqlc.types.Field('pokemon_v2_move_aggregate_order_by', graphql_name='pokemon_v2_moves_aggregate')
    pokemon_v2_pokemonformgenerations_aggregate = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_aggregate_order_by', graphql_name='pokemon_v2_pokemonformgenerations_aggregate')
    pokemon_v2_pokemonspecies_aggregate = sgqlc.types.Field('pokemon_v2_pokemonspecies_aggregate_order_by', graphql_name='pokemon_v2_pokemonspecies_aggregate')
    pokemon_v2_pokemontypepasts_aggregate = sgqlc.types.Field('pokemon_v2_pokemontypepast_aggregate_order_by', graphql_name='pokemon_v2_pokemontypepasts_aggregate')
    pokemon_v2_region = sgqlc.types.Field('pokemon_v2_region_order_by', graphql_name='pokemon_v2_region')
    pokemon_v2_typegameindices_aggregate = sgqlc.types.Field('pokemon_v2_typegameindex_aggregate_order_by', graphql_name='pokemon_v2_typegameindices_aggregate')
    pokemon_v2_types_aggregate = sgqlc.types.Field('pokemon_v2_type_aggregate_order_by', graphql_name='pokemon_v2_types_aggregate')
    pokemon_v2_versiongroups_aggregate = sgqlc.types.Field('pokemon_v2_versiongroup_aggregate_order_by', graphql_name='pokemon_v2_versiongroups_aggregate')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_generation_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_generation_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_generation_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_generation_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_generation_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_generation_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_generation_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_generationname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_generationname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_generationname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_generationname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_generationname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_generationname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_generationname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_generationname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_generationname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_generationname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_generationname_variance_order_by', graphql_name='variance')


class pokemon_v2_generationname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'language_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_generationname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'generation_id', 'id', 'language_id', 'name', 'pokemon_v2_generation', 'pokemon_v2_language')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_generationname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_generationname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_generationname_bool_exp')), graphql_name='_or')
    generation_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='generation_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_generation = sgqlc.types.Field(pokemon_v2_generation_bool_exp, graphql_name='pokemon_v2_generation')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')


class pokemon_v2_generationname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'language_id', 'name')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_generationname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'language_id', 'name')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_generationname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'language_id', 'name', 'pokemon_v2_generation', 'pokemon_v2_language')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_generation = sgqlc.types.Field(pokemon_v2_generation_order_by, graphql_name='pokemon_v2_generation')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')


class pokemon_v2_generationname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'language_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_generationname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'language_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_generationname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'language_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_generationname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'language_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_generationname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'language_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_generationname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'language_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_generationname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'language_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_growthrate_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'formula', 'id', 'name', 'pokemon_v2_experiences', 'pokemon_v2_growthratedescriptions', 'pokemon_v2_machines', 'pokemon_v2_pokemonspecies')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_growthrate_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_growthrate_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_growthrate_bool_exp')), graphql_name='_or')
    formula = sgqlc.types.Field(String_comparison_exp, graphql_name='formula')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_experiences = sgqlc.types.Field(pokemon_v2_experience_bool_exp, graphql_name='pokemon_v2_experiences')
    pokemon_v2_growthratedescriptions = sgqlc.types.Field('pokemon_v2_growthratedescription_bool_exp', graphql_name='pokemon_v2_growthratedescriptions')
    pokemon_v2_machines = sgqlc.types.Field('pokemon_v2_machine_bool_exp', graphql_name='pokemon_v2_machines')
    pokemon_v2_pokemonspecies = sgqlc.types.Field('pokemon_v2_pokemonspecies_bool_exp', graphql_name='pokemon_v2_pokemonspecies')


class pokemon_v2_growthrate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('formula', 'id', 'name', 'pokemon_v2_experiences_aggregate', 'pokemon_v2_growthratedescriptions_aggregate', 'pokemon_v2_machines_aggregate', 'pokemon_v2_pokemonspecies_aggregate')
    formula = sgqlc.types.Field(order_by, graphql_name='formula')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_experiences_aggregate = sgqlc.types.Field(pokemon_v2_experience_aggregate_order_by, graphql_name='pokemon_v2_experiences_aggregate')
    pokemon_v2_growthratedescriptions_aggregate = sgqlc.types.Field('pokemon_v2_growthratedescription_aggregate_order_by', graphql_name='pokemon_v2_growthratedescriptions_aggregate')
    pokemon_v2_machines_aggregate = sgqlc.types.Field('pokemon_v2_machine_aggregate_order_by', graphql_name='pokemon_v2_machines_aggregate')
    pokemon_v2_pokemonspecies_aggregate = sgqlc.types.Field('pokemon_v2_pokemonspecies_aggregate_order_by', graphql_name='pokemon_v2_pokemonspecies_aggregate')


class pokemon_v2_growthratedescription_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_growthratedescription_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_growthratedescription_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_growthratedescription_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_growthratedescription_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_growthratedescription_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_growthratedescription_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_growthratedescription_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_growthratedescription_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_growthratedescription_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_growthratedescription_variance_order_by', graphql_name='variance')


class pokemon_v2_growthratedescription_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'language_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_growthratedescription_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'description', 'growth_rate_id', 'id', 'language_id', 'pokemon_v2_growthrate', 'pokemon_v2_language')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_growthratedescription_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_growthratedescription_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_growthratedescription_bool_exp')), graphql_name='_or')
    description = sgqlc.types.Field(String_comparison_exp, graphql_name='description')
    growth_rate_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    pokemon_v2_growthrate = sgqlc.types.Field(pokemon_v2_growthrate_bool_exp, graphql_name='pokemon_v2_growthrate')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')


class pokemon_v2_growthratedescription_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'growth_rate_id', 'id', 'language_id')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_growthratedescription_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'growth_rate_id', 'id', 'language_id')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_growthratedescription_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'growth_rate_id', 'id', 'language_id', 'pokemon_v2_growthrate', 'pokemon_v2_language')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_v2_growthrate = sgqlc.types.Field(pokemon_v2_growthrate_order_by, graphql_name='pokemon_v2_growthrate')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')


class pokemon_v2_growthratedescription_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'language_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_growthratedescription_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'language_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_growthratedescription_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'language_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_growthratedescription_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'language_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_growthratedescription_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'language_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_growthratedescription_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'language_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_growthratedescription_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'language_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_item_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_item_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_item_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_item_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_item_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_item_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_item_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_item_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_item_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_item_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_item_variance_order_by', graphql_name='variance')


class pokemon_v2_item_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id')
    cost = sgqlc.types.Field(order_by, graphql_name='cost')
    fling_power = sgqlc.types.Field(order_by, graphql_name='fling_power')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_category_id = sgqlc.types.Field(order_by, graphql_name='item_category_id')
    item_fling_effect_id = sgqlc.types.Field(order_by, graphql_name='item_fling_effect_id')


class pokemon_v2_item_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id', 'name', 'pokemon_v2_pokemonevolutions_by_held_item_id', 'pokemon_v2_berries', 'pokemon_v2_evolutionchains', 'pokemon_v2_itemattributemaps', 'pokemon_v2_itemcategory', 'pokemon_v2_itemeffecttexts', 'pokemon_v2_itemflavortexts', 'pokemon_v2_itemflingeffect', 'pokemon_v2_itemgameindices', 'pokemon_v2_itemnames', 'pokemon_v2_itemsprites', 'pokemon_v2_machines', 'pokemon_v2_pokemonevolutions', 'pokemon_v2_pokemonitems')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_item_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_item_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_item_bool_exp')), graphql_name='_or')
    cost = sgqlc.types.Field(Int_comparison_exp, graphql_name='cost')
    fling_power = sgqlc.types.Field(Int_comparison_exp, graphql_name='fling_power')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    item_category_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='item_category_id')
    item_fling_effect_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='item_fling_effect_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_pokemonevolutions_by_held_item_id = sgqlc.types.Field('pokemon_v2_pokemonevolution_bool_exp', graphql_name='pokemonV2PokemonevolutionsByHeldItemId')
    pokemon_v2_berries = sgqlc.types.Field(pokemon_v2_berry_bool_exp, graphql_name='pokemon_v2_berries')
    pokemon_v2_evolutionchains = sgqlc.types.Field(pokemon_v2_evolutionchain_bool_exp, graphql_name='pokemon_v2_evolutionchains')
    pokemon_v2_itemattributemaps = sgqlc.types.Field('pokemon_v2_itemattributemap_bool_exp', graphql_name='pokemon_v2_itemattributemaps')
    pokemon_v2_itemcategory = sgqlc.types.Field('pokemon_v2_itemcategory_bool_exp', graphql_name='pokemon_v2_itemcategory')
    pokemon_v2_itemeffecttexts = sgqlc.types.Field('pokemon_v2_itemeffecttext_bool_exp', graphql_name='pokemon_v2_itemeffecttexts')
    pokemon_v2_itemflavortexts = sgqlc.types.Field('pokemon_v2_itemflavortext_bool_exp', graphql_name='pokemon_v2_itemflavortexts')
    pokemon_v2_itemflingeffect = sgqlc.types.Field('pokemon_v2_itemflingeffect_bool_exp', graphql_name='pokemon_v2_itemflingeffect')
    pokemon_v2_itemgameindices = sgqlc.types.Field('pokemon_v2_itemgameindex_bool_exp', graphql_name='pokemon_v2_itemgameindices')
    pokemon_v2_itemnames = sgqlc.types.Field('pokemon_v2_itemname_bool_exp', graphql_name='pokemon_v2_itemnames')
    pokemon_v2_itemsprites = sgqlc.types.Field('pokemon_v2_itemsprites_bool_exp', graphql_name='pokemon_v2_itemsprites')
    pokemon_v2_machines = sgqlc.types.Field('pokemon_v2_machine_bool_exp', graphql_name='pokemon_v2_machines')
    pokemon_v2_pokemonevolutions = sgqlc.types.Field('pokemon_v2_pokemonevolution_bool_exp', graphql_name='pokemon_v2_pokemonevolutions')
    pokemon_v2_pokemonitems = sgqlc.types.Field('pokemon_v2_pokemonitem_bool_exp', graphql_name='pokemon_v2_pokemonitems')


class pokemon_v2_item_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id', 'name')
    cost = sgqlc.types.Field(order_by, graphql_name='cost')
    fling_power = sgqlc.types.Field(order_by, graphql_name='fling_power')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_category_id = sgqlc.types.Field(order_by, graphql_name='item_category_id')
    item_fling_effect_id = sgqlc.types.Field(order_by, graphql_name='item_fling_effect_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_item_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id', 'name')
    cost = sgqlc.types.Field(order_by, graphql_name='cost')
    fling_power = sgqlc.types.Field(order_by, graphql_name='fling_power')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_category_id = sgqlc.types.Field(order_by, graphql_name='item_category_id')
    item_fling_effect_id = sgqlc.types.Field(order_by, graphql_name='item_fling_effect_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_item_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id', 'name', 'pokemon_v2_pokemonevolutions_by_held_item_id_aggregate', 'pokemon_v2_berries_aggregate', 'pokemon_v2_evolutionchains_aggregate', 'pokemon_v2_itemattributemaps_aggregate', 'pokemon_v2_itemcategory', 'pokemon_v2_itemeffecttexts_aggregate', 'pokemon_v2_itemflavortexts_aggregate', 'pokemon_v2_itemflingeffect', 'pokemon_v2_itemgameindices_aggregate', 'pokemon_v2_itemnames_aggregate', 'pokemon_v2_itemsprites_aggregate', 'pokemon_v2_machines_aggregate', 'pokemon_v2_pokemonevolutions_aggregate', 'pokemon_v2_pokemonitems_aggregate')
    cost = sgqlc.types.Field(order_by, graphql_name='cost')
    fling_power = sgqlc.types.Field(order_by, graphql_name='fling_power')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_category_id = sgqlc.types.Field(order_by, graphql_name='item_category_id')
    item_fling_effect_id = sgqlc.types.Field(order_by, graphql_name='item_fling_effect_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_pokemonevolutions_by_held_item_id_aggregate = sgqlc.types.Field('pokemon_v2_pokemonevolution_aggregate_order_by', graphql_name='pokemonV2PokemonevolutionsByHeldItemId_aggregate')
    pokemon_v2_berries_aggregate = sgqlc.types.Field(pokemon_v2_berry_aggregate_order_by, graphql_name='pokemon_v2_berries_aggregate')
    pokemon_v2_evolutionchains_aggregate = sgqlc.types.Field(pokemon_v2_evolutionchain_aggregate_order_by, graphql_name='pokemon_v2_evolutionchains_aggregate')
    pokemon_v2_itemattributemaps_aggregate = sgqlc.types.Field('pokemon_v2_itemattributemap_aggregate_order_by', graphql_name='pokemon_v2_itemattributemaps_aggregate')
    pokemon_v2_itemcategory = sgqlc.types.Field('pokemon_v2_itemcategory_order_by', graphql_name='pokemon_v2_itemcategory')
    pokemon_v2_itemeffecttexts_aggregate = sgqlc.types.Field('pokemon_v2_itemeffecttext_aggregate_order_by', graphql_name='pokemon_v2_itemeffecttexts_aggregate')
    pokemon_v2_itemflavortexts_aggregate = sgqlc.types.Field('pokemon_v2_itemflavortext_aggregate_order_by', graphql_name='pokemon_v2_itemflavortexts_aggregate')
    pokemon_v2_itemflingeffect = sgqlc.types.Field('pokemon_v2_itemflingeffect_order_by', graphql_name='pokemon_v2_itemflingeffect')
    pokemon_v2_itemgameindices_aggregate = sgqlc.types.Field('pokemon_v2_itemgameindex_aggregate_order_by', graphql_name='pokemon_v2_itemgameindices_aggregate')
    pokemon_v2_itemnames_aggregate = sgqlc.types.Field('pokemon_v2_itemname_aggregate_order_by', graphql_name='pokemon_v2_itemnames_aggregate')
    pokemon_v2_itemsprites_aggregate = sgqlc.types.Field('pokemon_v2_itemsprites_aggregate_order_by', graphql_name='pokemon_v2_itemsprites_aggregate')
    pokemon_v2_machines_aggregate = sgqlc.types.Field('pokemon_v2_machine_aggregate_order_by', graphql_name='pokemon_v2_machines_aggregate')
    pokemon_v2_pokemonevolutions_aggregate = sgqlc.types.Field('pokemon_v2_pokemonevolution_aggregate_order_by', graphql_name='pokemon_v2_pokemonevolutions_aggregate')
    pokemon_v2_pokemonitems_aggregate = sgqlc.types.Field('pokemon_v2_pokemonitem_aggregate_order_by', graphql_name='pokemon_v2_pokemonitems_aggregate')


class pokemon_v2_item_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id')
    cost = sgqlc.types.Field(order_by, graphql_name='cost')
    fling_power = sgqlc.types.Field(order_by, graphql_name='fling_power')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_category_id = sgqlc.types.Field(order_by, graphql_name='item_category_id')
    item_fling_effect_id = sgqlc.types.Field(order_by, graphql_name='item_fling_effect_id')


class pokemon_v2_item_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id')
    cost = sgqlc.types.Field(order_by, graphql_name='cost')
    fling_power = sgqlc.types.Field(order_by, graphql_name='fling_power')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_category_id = sgqlc.types.Field(order_by, graphql_name='item_category_id')
    item_fling_effect_id = sgqlc.types.Field(order_by, graphql_name='item_fling_effect_id')


class pokemon_v2_item_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id')
    cost = sgqlc.types.Field(order_by, graphql_name='cost')
    fling_power = sgqlc.types.Field(order_by, graphql_name='fling_power')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_category_id = sgqlc.types.Field(order_by, graphql_name='item_category_id')
    item_fling_effect_id = sgqlc.types.Field(order_by, graphql_name='item_fling_effect_id')


class pokemon_v2_item_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id')
    cost = sgqlc.types.Field(order_by, graphql_name='cost')
    fling_power = sgqlc.types.Field(order_by, graphql_name='fling_power')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_category_id = sgqlc.types.Field(order_by, graphql_name='item_category_id')
    item_fling_effect_id = sgqlc.types.Field(order_by, graphql_name='item_fling_effect_id')


class pokemon_v2_item_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id')
    cost = sgqlc.types.Field(order_by, graphql_name='cost')
    fling_power = sgqlc.types.Field(order_by, graphql_name='fling_power')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_category_id = sgqlc.types.Field(order_by, graphql_name='item_category_id')
    item_fling_effect_id = sgqlc.types.Field(order_by, graphql_name='item_fling_effect_id')


class pokemon_v2_item_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id')
    cost = sgqlc.types.Field(order_by, graphql_name='cost')
    fling_power = sgqlc.types.Field(order_by, graphql_name='fling_power')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_category_id = sgqlc.types.Field(order_by, graphql_name='item_category_id')
    item_fling_effect_id = sgqlc.types.Field(order_by, graphql_name='item_fling_effect_id')


class pokemon_v2_item_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id')
    cost = sgqlc.types.Field(order_by, graphql_name='cost')
    fling_power = sgqlc.types.Field(order_by, graphql_name='fling_power')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_category_id = sgqlc.types.Field(order_by, graphql_name='item_category_id')
    item_fling_effect_id = sgqlc.types.Field(order_by, graphql_name='item_fling_effect_id')


class pokemon_v2_itemattribute_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_itemattributedescriptions', 'pokemon_v2_itemattributemaps', 'pokemon_v2_itemattributenames')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemattribute_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_itemattribute_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemattribute_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_itemattributedescriptions = sgqlc.types.Field('pokemon_v2_itemattributedescription_bool_exp', graphql_name='pokemon_v2_itemattributedescriptions')
    pokemon_v2_itemattributemaps = sgqlc.types.Field('pokemon_v2_itemattributemap_bool_exp', graphql_name='pokemon_v2_itemattributemaps')
    pokemon_v2_itemattributenames = sgqlc.types.Field('pokemon_v2_itemattributename_bool_exp', graphql_name='pokemon_v2_itemattributenames')


class pokemon_v2_itemattribute_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_itemattributedescriptions_aggregate', 'pokemon_v2_itemattributemaps_aggregate', 'pokemon_v2_itemattributenames_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_itemattributedescriptions_aggregate = sgqlc.types.Field('pokemon_v2_itemattributedescription_aggregate_order_by', graphql_name='pokemon_v2_itemattributedescriptions_aggregate')
    pokemon_v2_itemattributemaps_aggregate = sgqlc.types.Field('pokemon_v2_itemattributemap_aggregate_order_by', graphql_name='pokemon_v2_itemattributemaps_aggregate')
    pokemon_v2_itemattributenames_aggregate = sgqlc.types.Field('pokemon_v2_itemattributename_aggregate_order_by', graphql_name='pokemon_v2_itemattributenames_aggregate')


class pokemon_v2_itemattributedescription_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemattributedescription_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_itemattributedescription_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemattributedescription_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemattributedescription_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemattributedescription_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemattributedescription_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemattributedescription_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemattributedescription_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemattributedescription_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemattributedescription_variance_order_by', graphql_name='variance')


class pokemon_v2_itemattributedescription_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemattributedescription_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'description', 'id', 'item_attribute_id', 'language_id', 'pokemon_v2_itemattribute', 'pokemon_v2_language')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemattributedescription_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_itemattributedescription_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemattributedescription_bool_exp')), graphql_name='_or')
    description = sgqlc.types.Field(String_comparison_exp, graphql_name='description')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    pokemon_v2_itemattribute = sgqlc.types.Field(pokemon_v2_itemattribute_bool_exp, graphql_name='pokemon_v2_itemattribute')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')


class pokemon_v2_itemattributedescription_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'item_attribute_id', 'language_id')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemattributedescription_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'item_attribute_id', 'language_id')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemattributedescription_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'item_attribute_id', 'language_id', 'pokemon_v2_itemattribute', 'pokemon_v2_language')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_v2_itemattribute = sgqlc.types.Field(pokemon_v2_itemattribute_order_by, graphql_name='pokemon_v2_itemattribute')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')


class pokemon_v2_itemattributedescription_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemattributedescription_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemattributedescription_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemattributedescription_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemattributedescription_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemattributedescription_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemattributedescription_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemattributemap_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemattributemap_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_itemattributemap_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemattributemap_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemattributemap_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemattributemap_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemattributemap_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemattributemap_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemattributemap_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemattributemap_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemattributemap_variance_order_by', graphql_name='variance')


class pokemon_v2_itemattributemap_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemattributemap_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'item_attribute_id', 'item_id', 'pokemon_v2_item', 'pokemon_v2_itemattribute')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemattributemap_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_itemattributemap_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemattributemap_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='item_attribute_id')
    item_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='item_id')
    pokemon_v2_item = sgqlc.types.Field(pokemon_v2_item_bool_exp, graphql_name='pokemon_v2_item')
    pokemon_v2_itemattribute = sgqlc.types.Field(pokemon_v2_itemattribute_bool_exp, graphql_name='pokemon_v2_itemattribute')


class pokemon_v2_itemattributemap_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemattributemap_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemattributemap_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'item_id', 'pokemon_v2_item', 'pokemon_v2_itemattribute')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    pokemon_v2_item = sgqlc.types.Field(pokemon_v2_item_order_by, graphql_name='pokemon_v2_item')
    pokemon_v2_itemattribute = sgqlc.types.Field(pokemon_v2_itemattribute_order_by, graphql_name='pokemon_v2_itemattribute')


class pokemon_v2_itemattributemap_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemattributemap_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemattributemap_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemattributemap_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemattributemap_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemattributemap_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemattributemap_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemattributename_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemattributename_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_itemattributename_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemattributename_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemattributename_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemattributename_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemattributename_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemattributename_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemattributename_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemattributename_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemattributename_variance_order_by', graphql_name='variance')


class pokemon_v2_itemattributename_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemattributename_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'item_attribute_id', 'language_id', 'name', 'pokemon_v2_itemattribute', 'pokemon_v2_language')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemattributename_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_itemattributename_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemattributename_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_itemattribute = sgqlc.types.Field(pokemon_v2_itemattribute_bool_exp, graphql_name='pokemon_v2_itemattribute')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')


class pokemon_v2_itemattributename_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_itemattributename_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_itemattributename_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id', 'name', 'pokemon_v2_itemattribute', 'pokemon_v2_language')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_itemattribute = sgqlc.types.Field(pokemon_v2_itemattribute_order_by, graphql_name='pokemon_v2_itemattribute')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')


class pokemon_v2_itemattributename_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemattributename_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemattributename_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemattributename_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemattributename_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemattributename_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemattributename_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(order_by, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemcategory_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemcategory_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_itemcategory_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemcategory_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemcategory_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemcategory_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemcategory_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemcategory_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemcategory_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemcategory_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemcategory_variance_order_by', graphql_name='variance')


class pokemon_v2_itemcategory_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(order_by, graphql_name='item_pocket_id')


class pokemon_v2_itemcategory_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'item_pocket_id', 'name', 'pokemon_v2_itemcategorynames', 'pokemon_v2_itempocket', 'pokemon_v2_items')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemcategory_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_itemcategory_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemcategory_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='item_pocket_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_itemcategorynames = sgqlc.types.Field('pokemon_v2_itemcategoryname_bool_exp', graphql_name='pokemon_v2_itemcategorynames')
    pokemon_v2_itempocket = sgqlc.types.Field('pokemon_v2_itempocket_bool_exp', graphql_name='pokemon_v2_itempocket')
    pokemon_v2_items = sgqlc.types.Field(pokemon_v2_item_bool_exp, graphql_name='pokemon_v2_items')


class pokemon_v2_itemcategory_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(order_by, graphql_name='item_pocket_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_itemcategory_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(order_by, graphql_name='item_pocket_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_itemcategory_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'name', 'pokemon_v2_itemcategorynames_aggregate', 'pokemon_v2_itempocket', 'pokemon_v2_items_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(order_by, graphql_name='item_pocket_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_itemcategorynames_aggregate = sgqlc.types.Field('pokemon_v2_itemcategoryname_aggregate_order_by', graphql_name='pokemon_v2_itemcategorynames_aggregate')
    pokemon_v2_itempocket = sgqlc.types.Field('pokemon_v2_itempocket_order_by', graphql_name='pokemon_v2_itempocket')
    pokemon_v2_items_aggregate = sgqlc.types.Field(pokemon_v2_item_aggregate_order_by, graphql_name='pokemon_v2_items_aggregate')


class pokemon_v2_itemcategory_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(order_by, graphql_name='item_pocket_id')


class pokemon_v2_itemcategory_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(order_by, graphql_name='item_pocket_id')


class pokemon_v2_itemcategory_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(order_by, graphql_name='item_pocket_id')


class pokemon_v2_itemcategory_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(order_by, graphql_name='item_pocket_id')


class pokemon_v2_itemcategory_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(order_by, graphql_name='item_pocket_id')


class pokemon_v2_itemcategory_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(order_by, graphql_name='item_pocket_id')


class pokemon_v2_itemcategory_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(order_by, graphql_name='item_pocket_id')


class pokemon_v2_itemcategoryname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemcategoryname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_itemcategoryname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemcategoryname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemcategoryname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemcategoryname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemcategoryname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemcategoryname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemcategoryname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemcategoryname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemcategoryname_variance_order_by', graphql_name='variance')


class pokemon_v2_itemcategoryname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_category_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_category_id = sgqlc.types.Field(order_by, graphql_name='item_category_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemcategoryname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'item_category_id', 'language_id', 'name', 'pokemon_v2_itemcategory', 'pokemon_v2_language')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemcategoryname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_itemcategoryname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemcategoryname_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    item_category_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='item_category_id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_itemcategory = sgqlc.types.Field(pokemon_v2_itemcategory_bool_exp, graphql_name='pokemon_v2_itemcategory')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')


class pokemon_v2_itemcategoryname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_category_id', 'language_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_category_id = sgqlc.types.Field(order_by, graphql_name='item_category_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_itemcategoryname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_category_id', 'language_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_category_id = sgqlc.types.Field(order_by, graphql_name='item_category_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_itemcategoryname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_category_id', 'language_id', 'name', 'pokemon_v2_itemcategory', 'pokemon_v2_language')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_category_id = sgqlc.types.Field(order_by, graphql_name='item_category_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_itemcategory = sgqlc.types.Field(pokemon_v2_itemcategory_order_by, graphql_name='pokemon_v2_itemcategory')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')


class pokemon_v2_itemcategoryname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_category_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_category_id = sgqlc.types.Field(order_by, graphql_name='item_category_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemcategoryname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_category_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_category_id = sgqlc.types.Field(order_by, graphql_name='item_category_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemcategoryname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_category_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_category_id = sgqlc.types.Field(order_by, graphql_name='item_category_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemcategoryname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_category_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_category_id = sgqlc.types.Field(order_by, graphql_name='item_category_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemcategoryname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_category_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_category_id = sgqlc.types.Field(order_by, graphql_name='item_category_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemcategoryname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_category_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_category_id = sgqlc.types.Field(order_by, graphql_name='item_category_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemcategoryname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_category_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_category_id = sgqlc.types.Field(order_by, graphql_name='item_category_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemeffecttext_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemeffecttext_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_itemeffecttext_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemeffecttext_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemeffecttext_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemeffecttext_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemeffecttext_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemeffecttext_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemeffecttext_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemeffecttext_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemeffecttext_variance_order_by', graphql_name='variance')


class pokemon_v2_itemeffecttext_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemeffecttext_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'effect', 'id', 'item_id', 'language_id', 'pokemon_v2_item', 'pokemon_v2_language', 'short_effect')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemeffecttext_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_itemeffecttext_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemeffecttext_bool_exp')), graphql_name='_or')
    effect = sgqlc.types.Field(String_comparison_exp, graphql_name='effect')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    item_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='item_id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    pokemon_v2_item = sgqlc.types.Field(pokemon_v2_item_bool_exp, graphql_name='pokemon_v2_item')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')
    short_effect = sgqlc.types.Field(String_comparison_exp, graphql_name='short_effect')


class pokemon_v2_itemeffecttext_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'item_id', 'language_id', 'short_effect')
    effect = sgqlc.types.Field(order_by, graphql_name='effect')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    short_effect = sgqlc.types.Field(order_by, graphql_name='short_effect')


class pokemon_v2_itemeffecttext_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'item_id', 'language_id', 'short_effect')
    effect = sgqlc.types.Field(order_by, graphql_name='effect')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    short_effect = sgqlc.types.Field(order_by, graphql_name='short_effect')


class pokemon_v2_itemeffecttext_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'item_id', 'language_id', 'pokemon_v2_item', 'pokemon_v2_language', 'short_effect')
    effect = sgqlc.types.Field(order_by, graphql_name='effect')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_v2_item = sgqlc.types.Field(pokemon_v2_item_order_by, graphql_name='pokemon_v2_item')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')
    short_effect = sgqlc.types.Field(order_by, graphql_name='short_effect')


class pokemon_v2_itemeffecttext_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemeffecttext_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemeffecttext_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemeffecttext_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemeffecttext_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemeffecttext_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemeffecttext_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemflavortext_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemflavortext_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_itemflavortext_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemflavortext_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemflavortext_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemflavortext_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemflavortext_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemflavortext_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemflavortext_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemflavortext_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemflavortext_variance_order_by', graphql_name='variance')


class pokemon_v2_itemflavortext_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_itemflavortext_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'flavor_text', 'id', 'item_id', 'language_id', 'pokemon_v2_item', 'pokemon_v2_language', 'pokemon_v2_versiongroup', 'version_group_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemflavortext_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_itemflavortext_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemflavortext_bool_exp')), graphql_name='_or')
    flavor_text = sgqlc.types.Field(String_comparison_exp, graphql_name='flavor_text')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    item_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='item_id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    pokemon_v2_item = sgqlc.types.Field(pokemon_v2_item_bool_exp, graphql_name='pokemon_v2_item')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_bool_exp', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='version_group_id')


class pokemon_v2_itemflavortext_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'item_id', 'language_id', 'version_group_id')
    flavor_text = sgqlc.types.Field(order_by, graphql_name='flavor_text')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_itemflavortext_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'item_id', 'language_id', 'version_group_id')
    flavor_text = sgqlc.types.Field(order_by, graphql_name='flavor_text')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_itemflavortext_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'item_id', 'language_id', 'pokemon_v2_item', 'pokemon_v2_language', 'pokemon_v2_versiongroup', 'version_group_id')
    flavor_text = sgqlc.types.Field(order_by, graphql_name='flavor_text')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_v2_item = sgqlc.types.Field(pokemon_v2_item_order_by, graphql_name='pokemon_v2_item')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_order_by', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_itemflavortext_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_itemflavortext_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_itemflavortext_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_itemflavortext_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_itemflavortext_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_itemflavortext_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_itemflavortext_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_itemflingeffect_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_itemflingeffecteffecttexts', 'pokemon_v2_items')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemflingeffect_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_itemflingeffect_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemflingeffect_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_itemflingeffecteffecttexts = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_bool_exp', graphql_name='pokemon_v2_itemflingeffecteffecttexts')
    pokemon_v2_items = sgqlc.types.Field(pokemon_v2_item_bool_exp, graphql_name='pokemon_v2_items')


class pokemon_v2_itemflingeffect_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_itemflingeffecteffecttexts_aggregate', 'pokemon_v2_items_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_itemflingeffecteffecttexts_aggregate = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_aggregate_order_by', graphql_name='pokemon_v2_itemflingeffecteffecttexts_aggregate')
    pokemon_v2_items_aggregate = sgqlc.types.Field(pokemon_v2_item_aggregate_order_by, graphql_name='pokemon_v2_items_aggregate')


class pokemon_v2_itemflingeffecteffecttext_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_variance_order_by', graphql_name='variance')


class pokemon_v2_itemflingeffecteffecttext_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_fling_effect_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_fling_effect_id = sgqlc.types.Field(order_by, graphql_name='item_fling_effect_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemflingeffecteffecttext_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'effect', 'id', 'item_fling_effect_id', 'language_id', 'pokemon_v2_itemflingeffect', 'pokemon_v2_language')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemflingeffecteffecttext_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemflingeffecteffecttext_bool_exp')), graphql_name='_or')
    effect = sgqlc.types.Field(String_comparison_exp, graphql_name='effect')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    item_fling_effect_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='item_fling_effect_id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    pokemon_v2_itemflingeffect = sgqlc.types.Field(pokemon_v2_itemflingeffect_bool_exp, graphql_name='pokemon_v2_itemflingeffect')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')


class pokemon_v2_itemflingeffecteffecttext_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'item_fling_effect_id', 'language_id')
    effect = sgqlc.types.Field(order_by, graphql_name='effect')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_fling_effect_id = sgqlc.types.Field(order_by, graphql_name='item_fling_effect_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemflingeffecteffecttext_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'item_fling_effect_id', 'language_id')
    effect = sgqlc.types.Field(order_by, graphql_name='effect')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_fling_effect_id = sgqlc.types.Field(order_by, graphql_name='item_fling_effect_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemflingeffecteffecttext_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'item_fling_effect_id', 'language_id', 'pokemon_v2_itemflingeffect', 'pokemon_v2_language')
    effect = sgqlc.types.Field(order_by, graphql_name='effect')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_fling_effect_id = sgqlc.types.Field(order_by, graphql_name='item_fling_effect_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_v2_itemflingeffect = sgqlc.types.Field(pokemon_v2_itemflingeffect_order_by, graphql_name='pokemon_v2_itemflingeffect')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')


class pokemon_v2_itemflingeffecteffecttext_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_fling_effect_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_fling_effect_id = sgqlc.types.Field(order_by, graphql_name='item_fling_effect_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemflingeffecteffecttext_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_fling_effect_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_fling_effect_id = sgqlc.types.Field(order_by, graphql_name='item_fling_effect_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemflingeffecteffecttext_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_fling_effect_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_fling_effect_id = sgqlc.types.Field(order_by, graphql_name='item_fling_effect_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemflingeffecteffecttext_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_fling_effect_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_fling_effect_id = sgqlc.types.Field(order_by, graphql_name='item_fling_effect_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemflingeffecteffecttext_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_fling_effect_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_fling_effect_id = sgqlc.types.Field(order_by, graphql_name='item_fling_effect_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemflingeffecteffecttext_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_fling_effect_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_fling_effect_id = sgqlc.types.Field(order_by, graphql_name='item_fling_effect_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemflingeffecteffecttext_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_fling_effect_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_fling_effect_id = sgqlc.types.Field(order_by, graphql_name='item_fling_effect_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemgameindex_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemgameindex_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_itemgameindex_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemgameindex_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemgameindex_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemgameindex_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemgameindex_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemgameindex_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemgameindex_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemgameindex_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemgameindex_variance_order_by', graphql_name='variance')


class pokemon_v2_itemgameindex_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'item_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemgameindex_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'game_index', 'generation_id', 'id', 'item_id', 'pokemon_v2_generation', 'pokemon_v2_item')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemgameindex_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_itemgameindex_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemgameindex_bool_exp')), graphql_name='_or')
    game_index = sgqlc.types.Field(Int_comparison_exp, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='generation_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    item_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='item_id')
    pokemon_v2_generation = sgqlc.types.Field(pokemon_v2_generation_bool_exp, graphql_name='pokemon_v2_generation')
    pokemon_v2_item = sgqlc.types.Field(pokemon_v2_item_bool_exp, graphql_name='pokemon_v2_item')


class pokemon_v2_itemgameindex_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'item_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemgameindex_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'item_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemgameindex_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'item_id', 'pokemon_v2_generation', 'pokemon_v2_item')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    pokemon_v2_generation = sgqlc.types.Field(pokemon_v2_generation_order_by, graphql_name='pokemon_v2_generation')
    pokemon_v2_item = sgqlc.types.Field(pokemon_v2_item_order_by, graphql_name='pokemon_v2_item')


class pokemon_v2_itemgameindex_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'item_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemgameindex_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'item_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemgameindex_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'item_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemgameindex_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'item_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemgameindex_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'item_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemgameindex_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'item_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemgameindex_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'item_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_itemname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemname_variance_order_by', graphql_name='variance')


class pokemon_v2_itemname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'item_id', 'language_id', 'name', 'pokemon_v2_item', 'pokemon_v2_language')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_itemname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemname_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    item_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='item_id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_item = sgqlc.types.Field(pokemon_v2_item_bool_exp, graphql_name='pokemon_v2_item')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')


class pokemon_v2_itemname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_itemname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_itemname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id', 'name', 'pokemon_v2_item', 'pokemon_v2_language')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_item = sgqlc.types.Field(pokemon_v2_item_order_by, graphql_name='pokemon_v2_item')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')


class pokemon_v2_itemname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itempocket_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_itemcategories', 'pokemon_v2_itempocketnames')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itempocket_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_itempocket_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itempocket_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_itemcategories = sgqlc.types.Field(pokemon_v2_itemcategory_bool_exp, graphql_name='pokemon_v2_itemcategories')
    pokemon_v2_itempocketnames = sgqlc.types.Field('pokemon_v2_itempocketname_bool_exp', graphql_name='pokemon_v2_itempocketnames')


class pokemon_v2_itempocket_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_itemcategories_aggregate', 'pokemon_v2_itempocketnames_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_itemcategories_aggregate = sgqlc.types.Field(pokemon_v2_itemcategory_aggregate_order_by, graphql_name='pokemon_v2_itemcategories_aggregate')
    pokemon_v2_itempocketnames_aggregate = sgqlc.types.Field('pokemon_v2_itempocketname_aggregate_order_by', graphql_name='pokemon_v2_itempocketnames_aggregate')


class pokemon_v2_itempocketname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itempocketname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_itempocketname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itempocketname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itempocketname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itempocketname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itempocketname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itempocketname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itempocketname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itempocketname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itempocketname_variance_order_by', graphql_name='variance')


class pokemon_v2_itempocketname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(order_by, graphql_name='item_pocket_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itempocketname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'item_pocket_id', 'language_id', 'name', 'pokemon_v2_itempocket', 'pokemon_v2_language')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itempocketname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_itempocketname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itempocketname_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='item_pocket_id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_itempocket = sgqlc.types.Field(pokemon_v2_itempocket_bool_exp, graphql_name='pokemon_v2_itempocket')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='pokemon_v2_language')


class pokemon_v2_itempocketname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'language_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(order_by, graphql_name='item_pocket_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_itempocketname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'language_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(order_by, graphql_name='item_pocket_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_itempocketname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'language_id', 'name', 'pokemon_v2_itempocket', 'pokemon_v2_language')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(order_by, graphql_name='item_pocket_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_itempocket = sgqlc.types.Field(pokemon_v2_itempocket_order_by, graphql_name='pokemon_v2_itempocket')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language_order_by', graphql_name='pokemon_v2_language')


class pokemon_v2_itempocketname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(order_by, graphql_name='item_pocket_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itempocketname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(order_by, graphql_name='item_pocket_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itempocketname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(order_by, graphql_name='item_pocket_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itempocketname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(order_by, graphql_name='item_pocket_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itempocketname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(order_by, graphql_name='item_pocket_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itempocketname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(order_by, graphql_name='item_pocket_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itempocketname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(order_by, graphql_name='item_pocket_id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')


class pokemon_v2_itemsprites_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemsprites_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_itemsprites_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemsprites_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemsprites_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemsprites_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemsprites_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemsprites_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemsprites_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemsprites_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemsprites_variance_order_by', graphql_name='variance')


class pokemon_v2_itemsprites_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemsprites_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'item_id', 'pokemon_v2_item', 'sprites')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemsprites_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_itemsprites_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemsprites_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    item_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='item_id')
    pokemon_v2_item = sgqlc.types.Field(pokemon_v2_item_bool_exp, graphql_name='pokemon_v2_item')
    sprites = sgqlc.types.Field(String_comparison_exp, graphql_name='sprites')


class pokemon_v2_itemsprites_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'sprites')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    sprites = sgqlc.types.Field(order_by, graphql_name='sprites')


class pokemon_v2_itemsprites_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'sprites')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    sprites = sgqlc.types.Field(order_by, graphql_name='sprites')


class pokemon_v2_itemsprites_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_v2_item', 'sprites')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    pokemon_v2_item = sgqlc.types.Field(pokemon_v2_item_order_by, graphql_name='pokemon_v2_item')
    sprites = sgqlc.types.Field(order_by, graphql_name='sprites')


class pokemon_v2_itemsprites_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemsprites_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemsprites_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemsprites_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemsprites_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemsprites_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_itemsprites_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')


class pokemon_v2_language_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'iso3166', 'iso639', 'name', 'official', 'order', 'pokemon_v2_languagenames_by_local_language_id', 'pokemon_v2_abilitychangeeffecttexts', 'pokemon_v2_abilityeffecttexts', 'pokemon_v2_abilityflavortexts', 'pokemon_v2_abilitynames', 'pokemon_v2_berryfirmnessnames', 'pokemon_v2_berryflavornames', 'pokemon_v2_characteristicdescriptions', 'pokemon_v2_contesteffecteffecttexts', 'pokemon_v2_contesteffectflavortexts', 'pokemon_v2_contesttypenames', 'pokemon_v2_egggroupnames', 'pokemon_v2_encounterconditionnames', 'pokemon_v2_encounterconditionvaluenames', 'pokemon_v2_encountermethodnames', 'pokemon_v2_evolutiontriggernames', 'pokemon_v2_generationnames', 'pokemon_v2_growthratedescriptions', 'pokemon_v2_itemattributedescriptions', 'pokemon_v2_itemattributenames', 'pokemon_v2_itemcategorynames', 'pokemon_v2_itemeffecttexts', 'pokemon_v2_itemflavortexts', 'pokemon_v2_itemflingeffecteffecttexts', 'pokemon_v2_itemnames', 'pokemon_v2_itempocketnames', 'pokemon_v2_languagenames', 'pokemon_v2_locationareanames', 'pokemon_v2_locationnames', 'pokemon_v2_moveattributedescriptions', 'pokemon_v2_moveattributenames', 'pokemon_v2_movebattlestylenames', 'pokemon_v2_movedamageclassdescriptions', 'pokemon_v2_movedamageclassnames', 'pokemon_v2_moveeffectchangeeffecttexts', 'pokemon_v2_moveeffecteffecttexts', 'pokemon_v2_moveflavortexts', 'pokemon_v2_movelearnmethoddescriptions', 'pokemon_v2_movelearnmethodnames', 'pokemon_v2_movemetaailmentnames', 'pokemon_v2_movemetacategorydescriptions', 'pokemon_v2_movenames', 'pokemon_v2_movetargetdescriptions', 'pokemon_v2_movetargetnames', 'pokemon_v2_naturenames', 'pokemon_v2_palparkareanames', 'pokemon_v2_pokeathlonstatnames', 'pokemon_v2_pokedexdescriptions', 'pokemon_v2_pokedexnames', 'pokemon_v2_pokemoncolornames', 'pokemon_v2_pokemonformnames', 'pokemon_v2_pokemonhabitatnames', 'pokemon_v2_pokemonshapenames', 'pokemon_v2_pokemonspeciesdescriptions', 'pokemon_v2_pokemonspeciesflavortexts', 'pokemon_v2_pokemonspeciesnames', 'pokemon_v2_regionnames', 'pokemon_v2_statnames', 'pokemon_v2_supercontesteffectflavortexts', 'pokemon_v2_typenames', 'pokemon_v2_versionnames')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_language_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_language_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_language_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    iso3166 = sgqlc.types.Field(String_comparison_exp, graphql_name='iso3166')
    iso639 = sgqlc.types.Field(String_comparison_exp, graphql_name='iso639')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    official = sgqlc.types.Field(Boolean_comparison_exp, graphql_name='official')
    order = sgqlc.types.Field(Int_comparison_exp, graphql_name='order')
    pokemon_v2_languagenames_by_local_language_id = sgqlc.types.Field('pokemon_v2_languagename_bool_exp', graphql_name='pokemonV2LanguagenamesByLocalLanguageId')
    pokemon_v2_abilitychangeeffecttexts = sgqlc.types.Field(pokemon_v2_abilitychangeeffecttext_bool_exp, graphql_name='pokemon_v2_abilitychangeeffecttexts')
    pokemon_v2_abilityeffecttexts = sgqlc.types.Field(pokemon_v2_abilityeffecttext_bool_exp, graphql_name='pokemon_v2_abilityeffecttexts')
    pokemon_v2_abilityflavortexts = sgqlc.types.Field(pokemon_v2_abilityflavortext_bool_exp, graphql_name='pokemon_v2_abilityflavortexts')
    pokemon_v2_abilitynames = sgqlc.types.Field(pokemon_v2_abilityname_bool_exp, graphql_name='pokemon_v2_abilitynames')
    pokemon_v2_berryfirmnessnames = sgqlc.types.Field(pokemon_v2_berryfirmnessname_bool_exp, graphql_name='pokemon_v2_berryfirmnessnames')
    pokemon_v2_berryflavornames = sgqlc.types.Field(pokemon_v2_berryflavorname_bool_exp, graphql_name='pokemon_v2_berryflavornames')
    pokemon_v2_characteristicdescriptions = sgqlc.types.Field(pokemon_v2_characteristicdescription_bool_exp, graphql_name='pokemon_v2_characteristicdescriptions')
    pokemon_v2_contesteffecteffecttexts = sgqlc.types.Field(pokemon_v2_contesteffecteffecttext_bool_exp, graphql_name='pokemon_v2_contesteffecteffecttexts')
    pokemon_v2_contesteffectflavortexts = sgqlc.types.Field(pokemon_v2_contesteffectflavortext_bool_exp, graphql_name='pokemon_v2_contesteffectflavortexts')
    pokemon_v2_contesttypenames = sgqlc.types.Field(pokemon_v2_contesttypename_bool_exp, graphql_name='pokemon_v2_contesttypenames')
    pokemon_v2_egggroupnames = sgqlc.types.Field(pokemon_v2_egggroupname_bool_exp, graphql_name='pokemon_v2_egggroupnames')
    pokemon_v2_encounterconditionnames = sgqlc.types.Field(pokemon_v2_encounterconditionname_bool_exp, graphql_name='pokemon_v2_encounterconditionnames')
    pokemon_v2_encounterconditionvaluenames = sgqlc.types.Field(pokemon_v2_encounterconditionvaluename_bool_exp, graphql_name='pokemon_v2_encounterconditionvaluenames')
    pokemon_v2_encountermethodnames = sgqlc.types.Field(pokemon_v2_encountermethodname_bool_exp, graphql_name='pokemon_v2_encountermethodnames')
    pokemon_v2_evolutiontriggernames = sgqlc.types.Field(pokemon_v2_evolutiontriggername_bool_exp, graphql_name='pokemon_v2_evolutiontriggernames')
    pokemon_v2_generationnames = sgqlc.types.Field(pokemon_v2_generationname_bool_exp, graphql_name='pokemon_v2_generationnames')
    pokemon_v2_growthratedescriptions = sgqlc.types.Field(pokemon_v2_growthratedescription_bool_exp, graphql_name='pokemon_v2_growthratedescriptions')
    pokemon_v2_itemattributedescriptions = sgqlc.types.Field(pokemon_v2_itemattributedescription_bool_exp, graphql_name='pokemon_v2_itemattributedescriptions')
    pokemon_v2_itemattributenames = sgqlc.types.Field(pokemon_v2_itemattributename_bool_exp, graphql_name='pokemon_v2_itemattributenames')
    pokemon_v2_itemcategorynames = sgqlc.types.Field(pokemon_v2_itemcategoryname_bool_exp, graphql_name='pokemon_v2_itemcategorynames')
    pokemon_v2_itemeffecttexts = sgqlc.types.Field(pokemon_v2_itemeffecttext_bool_exp, graphql_name='pokemon_v2_itemeffecttexts')
    pokemon_v2_itemflavortexts = sgqlc.types.Field(pokemon_v2_itemflavortext_bool_exp, graphql_name='pokemon_v2_itemflavortexts')
    pokemon_v2_itemflingeffecteffecttexts = sgqlc.types.Field(pokemon_v2_itemflingeffecteffecttext_bool_exp, graphql_name='pokemon_v2_itemflingeffecteffecttexts')
    pokemon_v2_itemnames = sgqlc.types.Field(pokemon_v2_itemname_bool_exp, graphql_name='pokemon_v2_itemnames')
    pokemon_v2_itempocketnames = sgqlc.types.Field(pokemon_v2_itempocketname_bool_exp, graphql_name='pokemon_v2_itempocketnames')
    pokemon_v2_languagenames = sgqlc.types.Field('pokemon_v2_languagename_bool_exp', graphql_name='pokemon_v2_languagenames')
    pokemon_v2_locationareanames = sgqlc.types.Field('pokemon_v2_locationareaname_bool_exp', graphql_name='pokemon_v2_locationareanames')
    pokemon_v2_locationnames = sgqlc.types.Field('pokemon_v2_locationname_bool_exp', graphql_name='pokemon_v2_locationnames')
    pokemon_v2_moveattributedescriptions = sgqlc.types.Field('pokemon_v2_moveattributedescription_bool_exp', graphql_name='pokemon_v2_moveattributedescriptions')
    pokemon_v2_moveattributenames = sgqlc.types.Field('pokemon_v2_moveattributename_bool_exp', graphql_name='pokemon_v2_moveattributenames')
    pokemon_v2_movebattlestylenames = sgqlc.types.Field('pokemon_v2_movebattlestylename_bool_exp', graphql_name='pokemon_v2_movebattlestylenames')
    pokemon_v2_movedamageclassdescriptions = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_bool_exp', graphql_name='pokemon_v2_movedamageclassdescriptions')
    pokemon_v2_movedamageclassnames = sgqlc.types.Field('pokemon_v2_movedamageclassname_bool_exp', graphql_name='pokemon_v2_movedamageclassnames')
    pokemon_v2_moveeffectchangeeffecttexts = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_bool_exp', graphql_name='pokemon_v2_moveeffectchangeeffecttexts')
    pokemon_v2_moveeffecteffecttexts = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_bool_exp', graphql_name='pokemon_v2_moveeffecteffecttexts')
    pokemon_v2_moveflavortexts = sgqlc.types.Field('pokemon_v2_moveflavortext_bool_exp', graphql_name='pokemon_v2_moveflavortexts')
    pokemon_v2_movelearnmethoddescriptions = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_bool_exp', graphql_name='pokemon_v2_movelearnmethoddescriptions')
    pokemon_v2_movelearnmethodnames = sgqlc.types.Field('pokemon_v2_movelearnmethodname_bool_exp', graphql_name='pokemon_v2_movelearnmethodnames')
    pokemon_v2_movemetaailmentnames = sgqlc.types.Field('pokemon_v2_movemetaailmentname_bool_exp', graphql_name='pokemon_v2_movemetaailmentnames')
    pokemon_v2_movemetacategorydescriptions = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_bool_exp', graphql_name='pokemon_v2_movemetacategorydescriptions')
    pokemon_v2_movenames = sgqlc.types.Field('pokemon_v2_movename_bool_exp', graphql_name='pokemon_v2_movenames')
    pokemon_v2_movetargetdescriptions = sgqlc.types.Field('pokemon_v2_movetargetdescription_bool_exp', graphql_name='pokemon_v2_movetargetdescriptions')
    pokemon_v2_movetargetnames = sgqlc.types.Field('pokemon_v2_movetargetname_bool_exp', graphql_name='pokemon_v2_movetargetnames')
    pokemon_v2_naturenames = sgqlc.types.Field('pokemon_v2_naturename_bool_exp', graphql_name='pokemon_v2_naturenames')
    pokemon_v2_palparkareanames = sgqlc.types.Field('pokemon_v2_palparkareaname_bool_exp', graphql_name='pokemon_v2_palparkareanames')
    pokemon_v2_pokeathlonstatnames = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_bool_exp', graphql_name='pokemon_v2_pokeathlonstatnames')
    pokemon_v2_pokedexdescriptions = sgqlc.types.Field('pokemon_v2_pokedexdescription_bool_exp', graphql_name='pokemon_v2_pokedexdescriptions')
    pokemon_v2_pokedexnames = sgqlc.types.Field('pokemon_v2_pokedexname_bool_exp', graphql_name='pokemon_v2_pokedexnames')
    pokemon_v2_pokemoncolornames = sgqlc.types.Field('pokemon_v2_pokemoncolorname_bool_exp', graphql_name='pokemon_v2_pokemoncolornames')
    pokemon_v2_pokemonformnames = sgqlc.types.Field('pokemon_v2_pokemonformname_bool_exp', graphql_name='pokemon_v2_pokemonformnames')
    pokemon_v2_pokemonhabitatnames = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_bool_exp', graphql_name='pokemon_v2_pokemonhabitatnames')
    pokemon_v2_pokemonshapenames = sgqlc.types.Field('pokemon_v2_pokemonshapename_bool_exp', graphql_name='pokemon_v2_pokemonshapenames')
    pokemon_v2_pokemonspeciesdescriptions = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_bool_exp', graphql_name='pokemon_v2_pokemonspeciesdescriptions')
    pokemon_v2_pokemonspeciesflavortexts = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_bool_exp', graphql_name='pokemon_v2_pokemonspeciesflavortexts')
    pokemon_v2_pokemonspeciesnames = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_bool_exp', graphql_name='pokemon_v2_pokemonspeciesnames')
    pokemon_v2_regionnames = sgqlc.types.Field('pokemon_v2_regionname_bool_exp', graphql_name='pokemon_v2_regionnames')
    pokemon_v2_statnames = sgqlc.types.Field('pokemon_v2_statname_bool_exp', graphql_name='pokemon_v2_statnames')
    pokemon_v2_supercontesteffectflavortexts = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_bool_exp', graphql_name='pokemon_v2_supercontesteffectflavortexts')
    pokemon_v2_typenames = sgqlc.types.Field('pokemon_v2_typename_bool_exp', graphql_name='pokemon_v2_typenames')
    pokemon_v2_versionnames = sgqlc.types.Field('pokemon_v2_versionname_bool_exp', graphql_name='pokemon_v2_versionnames')


class pokemon_v2_language_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'iso3166', 'iso639', 'name', 'official', 'order', 'pokemon_v2_languagenames_by_local_language_id_aggregate', 'pokemon_v2_abilitychangeeffecttexts_aggregate', 'pokemon_v2_abilityeffecttexts_aggregate', 'pokemon_v2_abilityflavortexts_aggregate', 'pokemon_v2_abilitynames_aggregate', 'pokemon_v2_berryfirmnessnames_aggregate', 'pokemon_v2_berryflavornames_aggregate', 'pokemon_v2_characteristicdescriptions_aggregate', 'pokemon_v2_contesteffecteffecttexts_aggregate', 'pokemon_v2_contesteffectflavortexts_aggregate', 'pokemon_v2_contesttypenames_aggregate', 'pokemon_v2_egggroupnames_aggregate', 'pokemon_v2_encounterconditionnames_aggregate', 'pokemon_v2_encounterconditionvaluenames_aggregate', 'pokemon_v2_encountermethodnames_aggregate', 'pokemon_v2_evolutiontriggernames_aggregate', 'pokemon_v2_generationnames_aggregate', 'pokemon_v2_growthratedescriptions_aggregate', 'pokemon_v2_itemattributedescriptions_aggregate', 'pokemon_v2_itemattributenames_aggregate', 'pokemon_v2_itemcategorynames_aggregate', 'pokemon_v2_itemeffecttexts_aggregate', 'pokemon_v2_itemflavortexts_aggregate', 'pokemon_v2_itemflingeffecteffecttexts_aggregate', 'pokemon_v2_itemnames_aggregate', 'pokemon_v2_itempocketnames_aggregate', 'pokemon_v2_languagenames_aggregate', 'pokemon_v2_locationareanames_aggregate', 'pokemon_v2_locationnames_aggregate', 'pokemon_v2_moveattributedescriptions_aggregate', 'pokemon_v2_moveattributenames_aggregate', 'pokemon_v2_movebattlestylenames_aggregate', 'pokemon_v2_movedamageclassdescriptions_aggregate', 'pokemon_v2_movedamageclassnames_aggregate', 'pokemon_v2_moveeffectchangeeffecttexts_aggregate', 'pokemon_v2_moveeffecteffecttexts_aggregate', 'pokemon_v2_moveflavortexts_aggregate', 'pokemon_v2_movelearnmethoddescriptions_aggregate', 'pokemon_v2_movelearnmethodnames_aggregate', 'pokemon_v2_movemetaailmentnames_aggregate', 'pokemon_v2_movemetacategorydescriptions_aggregate', 'pokemon_v2_movenames_aggregate', 'pokemon_v2_movetargetdescriptions_aggregate', 'pokemon_v2_movetargetnames_aggregate', 'pokemon_v2_naturenames_aggregate', 'pokemon_v2_palparkareanames_aggregate', 'pokemon_v2_pokeathlonstatnames_aggregate', 'pokemon_v2_pokedexdescriptions_aggregate', 'pokemon_v2_pokedexnames_aggregate', 'pokemon_v2_pokemoncolornames_aggregate', 'pokemon_v2_pokemonformnames_aggregate', 'pokemon_v2_pokemonhabitatnames_aggregate', 'pokemon_v2_pokemonshapenames_aggregate', 'pokemon_v2_pokemonspeciesdescriptions_aggregate', 'pokemon_v2_pokemonspeciesflavortexts_aggregate', 'pokemon_v2_pokemonspeciesnames_aggregate', 'pokemon_v2_regionnames_aggregate', 'pokemon_v2_statnames_aggregate', 'pokemon_v2_supercontesteffectflavortexts_aggregate', 'pokemon_v2_typenames_aggregate', 'pokemon_v2_versionnames_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    iso3166 = sgqlc.types.Field(order_by, graphql_name='iso3166')
    iso639 = sgqlc.types.Field(order_by, graphql_name='iso639')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    official = sgqlc.types.Field(order_by, graphql_name='official')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_v2_languagenames_by_local_language_id_aggregate = sgqlc.types.Field('pokemon_v2_languagename_aggregate_order_by', graphql_name='pokemonV2LanguagenamesByLocalLanguageId_aggregate')
    pokemon_v2_abilitychangeeffecttexts_aggregate = sgqlc.types.Field(pokemon_v2_abilitychangeeffecttext_aggregate_order_by, graphql_name='pokemon_v2_abilitychangeeffecttexts_aggregate')
    pokemon_v2_abilityeffecttexts_aggregate = sgqlc.types.Field(pokemon_v2_abilityeffecttext_aggregate_order_by, graphql_name='pokemon_v2_abilityeffecttexts_aggregate')
    pokemon_v2_abilityflavortexts_aggregate = sgqlc.types.Field(pokemon_v2_abilityflavortext_aggregate_order_by, graphql_name='pokemon_v2_abilityflavortexts_aggregate')
    pokemon_v2_abilitynames_aggregate = sgqlc.types.Field(pokemon_v2_abilityname_aggregate_order_by, graphql_name='pokemon_v2_abilitynames_aggregate')
    pokemon_v2_berryfirmnessnames_aggregate = sgqlc.types.Field(pokemon_v2_berryfirmnessname_aggregate_order_by, graphql_name='pokemon_v2_berryfirmnessnames_aggregate')
    pokemon_v2_berryflavornames_aggregate = sgqlc.types.Field(pokemon_v2_berryflavorname_aggregate_order_by, graphql_name='pokemon_v2_berryflavornames_aggregate')
    pokemon_v2_characteristicdescriptions_aggregate = sgqlc.types.Field(pokemon_v2_characteristicdescription_aggregate_order_by, graphql_name='pokemon_v2_characteristicdescriptions_aggregate')
    pokemon_v2_contesteffecteffecttexts_aggregate = sgqlc.types.Field(pokemon_v2_contesteffecteffecttext_aggregate_order_by, graphql_name='pokemon_v2_contesteffecteffecttexts_aggregate')
    pokemon_v2_contesteffectflavortexts_aggregate = sgqlc.types.Field(pokemon_v2_contesteffectflavortext_aggregate_order_by, graphql_name='pokemon_v2_contesteffectflavortexts_aggregate')
    pokemon_v2_contesttypenames_aggregate = sgqlc.types.Field(pokemon_v2_contesttypename_aggregate_order_by, graphql_name='pokemon_v2_contesttypenames_aggregate')
    pokemon_v2_egggroupnames_aggregate = sgqlc.types.Field(pokemon_v2_egggroupname_aggregate_order_by, graphql_name='pokemon_v2_egggroupnames_aggregate')
    pokemon_v2_encounterconditionnames_aggregate = sgqlc.types.Field(pokemon_v2_encounterconditionname_aggregate_order_by, graphql_name='pokemon_v2_encounterconditionnames_aggregate')
    pokemon_v2_encounterconditionvaluenames_aggregate = sgqlc.types.Field(pokemon_v2_encounterconditionvaluename_aggregate_order_by, graphql_name='pokemon_v2_encounterconditionvaluenames_aggregate')
    pokemon_v2_encountermethodnames_aggregate = sgqlc.types.Field(pokemon_v2_encountermethodname_aggregate_order_by, graphql_name='pokemon_v2_encountermethodnames_aggregate')
    pokemon_v2_evolutiontriggernames_aggregate = sgqlc.types.Field(pokemon_v2_evolutiontriggername_aggregate_order_by, graphql_name='pokemon_v2_evolutiontriggernames_aggregate')
    pokemon_v2_generationnames_aggregate = sgqlc.types.Field(pokemon_v2_generationname_aggregate_order_by, graphql_name='pokemon_v2_generationnames_aggregate')
    pokemon_v2_growthratedescriptions_aggregate = sgqlc.types.Field(pokemon_v2_growthratedescription_aggregate_order_by, graphql_name='pokemon_v2_growthratedescriptions_aggregate')
    pokemon_v2_itemattributedescriptions_aggregate = sgqlc.types.Field(pokemon_v2_itemattributedescription_aggregate_order_by, graphql_name='pokemon_v2_itemattributedescriptions_aggregate')
    pokemon_v2_itemattributenames_aggregate = sgqlc.types.Field(pokemon_v2_itemattributename_aggregate_order_by, graphql_name='pokemon_v2_itemattributenames_aggregate')
    pokemon_v2_itemcategorynames_aggregate = sgqlc.types.Field(pokemon_v2_itemcategoryname_aggregate_order_by, graphql_name='pokemon_v2_itemcategorynames_aggregate')
    pokemon_v2_itemeffecttexts_aggregate = sgqlc.types.Field(pokemon_v2_itemeffecttext_aggregate_order_by, graphql_name='pokemon_v2_itemeffecttexts_aggregate')
    pokemon_v2_itemflavortexts_aggregate = sgqlc.types.Field(pokemon_v2_itemflavortext_aggregate_order_by, graphql_name='pokemon_v2_itemflavortexts_aggregate')
    pokemon_v2_itemflingeffecteffecttexts_aggregate = sgqlc.types.Field(pokemon_v2_itemflingeffecteffecttext_aggregate_order_by, graphql_name='pokemon_v2_itemflingeffecteffecttexts_aggregate')
    pokemon_v2_itemnames_aggregate = sgqlc.types.Field(pokemon_v2_itemname_aggregate_order_by, graphql_name='pokemon_v2_itemnames_aggregate')
    pokemon_v2_itempocketnames_aggregate = sgqlc.types.Field(pokemon_v2_itempocketname_aggregate_order_by, graphql_name='pokemon_v2_itempocketnames_aggregate')
    pokemon_v2_languagenames_aggregate = sgqlc.types.Field('pokemon_v2_languagename_aggregate_order_by', graphql_name='pokemon_v2_languagenames_aggregate')
    pokemon_v2_locationareanames_aggregate = sgqlc.types.Field('pokemon_v2_locationareaname_aggregate_order_by', graphql_name='pokemon_v2_locationareanames_aggregate')
    pokemon_v2_locationnames_aggregate = sgqlc.types.Field('pokemon_v2_locationname_aggregate_order_by', graphql_name='pokemon_v2_locationnames_aggregate')
    pokemon_v2_moveattributedescriptions_aggregate = sgqlc.types.Field('pokemon_v2_moveattributedescription_aggregate_order_by', graphql_name='pokemon_v2_moveattributedescriptions_aggregate')
    pokemon_v2_moveattributenames_aggregate = sgqlc.types.Field('pokemon_v2_moveattributename_aggregate_order_by', graphql_name='pokemon_v2_moveattributenames_aggregate')
    pokemon_v2_movebattlestylenames_aggregate = sgqlc.types.Field('pokemon_v2_movebattlestylename_aggregate_order_by', graphql_name='pokemon_v2_movebattlestylenames_aggregate')
    pokemon_v2_movedamageclassdescriptions_aggregate = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_aggregate_order_by', graphql_name='pokemon_v2_movedamageclassdescriptions_aggregate')
    pokemon_v2_movedamageclassnames_aggregate = sgqlc.types.Field('pokemon_v2_movedamageclassname_aggregate_order_by', graphql_name='pokemon_v2_movedamageclassnames_aggregate')
    pokemon_v2_moveeffectchangeeffecttexts_aggregate = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_aggregate_order_by', graphql_name='pokemon_v2_moveeffectchangeeffecttexts_aggregate')
    pokemon_v2_moveeffecteffecttexts_aggregate = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_aggregate_order_by', graphql_name='pokemon_v2_moveeffecteffecttexts_aggregate')
    pokemon_v2_moveflavortexts_aggregate = sgqlc.types.Field('pokemon_v2_moveflavortext_aggregate_order_by', graphql_name='pokemon_v2_moveflavortexts_aggregate')
    pokemon_v2_movelearnmethoddescriptions_aggregate = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_aggregate_order_by', graphql_name='pokemon_v2_movelearnmethoddescriptions_aggregate')
    pokemon_v2_movelearnmethodnames_aggregate = sgqlc.types.Field('pokemon_v2_movelearnmethodname_aggregate_order_by', graphql_name='pokemon_v2_movelearnmethodnames_aggregate')
    pokemon_v2_movemetaailmentnames_aggregate = sgqlc.types.Field('pokemon_v2_movemetaailmentname_aggregate_order_by', graphql_name='pokemon_v2_movemetaailmentnames_aggregate')
    pokemon_v2_movemetacategorydescriptions_aggregate = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_aggregate_order_by', graphql_name='pokemon_v2_movemetacategorydescriptions_aggregate')
    pokemon_v2_movenames_aggregate = sgqlc.types.Field('pokemon_v2_movename_aggregate_order_by', graphql_name='pokemon_v2_movenames_aggregate')
    pokemon_v2_movetargetdescriptions_aggregate = sgqlc.types.Field('pokemon_v2_movetargetdescription_aggregate_order_by', graphql_name='pokemon_v2_movetargetdescriptions_aggregate')
    pokemon_v2_movetargetnames_aggregate = sgqlc.types.Field('pokemon_v2_movetargetname_aggregate_order_by', graphql_name='pokemon_v2_movetargetnames_aggregate')
    pokemon_v2_naturenames_aggregate = sgqlc.types.Field('pokemon_v2_naturename_aggregate_order_by', graphql_name='pokemon_v2_naturenames_aggregate')
    pokemon_v2_palparkareanames_aggregate = sgqlc.types.Field('pokemon_v2_palparkareaname_aggregate_order_by', graphql_name='pokemon_v2_palparkareanames_aggregate')
    pokemon_v2_pokeathlonstatnames_aggregate = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_aggregate_order_by', graphql_name='pokemon_v2_pokeathlonstatnames_aggregate')
    pokemon_v2_pokedexdescriptions_aggregate = sgqlc.types.Field('pokemon_v2_pokedexdescription_aggregate_order_by', graphql_name='pokemon_v2_pokedexdescriptions_aggregate')
    pokemon_v2_pokedexnames_aggregate = sgqlc.types.Field('pokemon_v2_pokedexname_aggregate_order_by', graphql_name='pokemon_v2_pokedexnames_aggregate')
    pokemon_v2_pokemoncolornames_aggregate = sgqlc.types.Field('pokemon_v2_pokemoncolorname_aggregate_order_by', graphql_name='pokemon_v2_pokemoncolornames_aggregate')
    pokemon_v2_pokemonformnames_aggregate = sgqlc.types.Field('pokemon_v2_pokemonformname_aggregate_order_by', graphql_name='pokemon_v2_pokemonformnames_aggregate')
    pokemon_v2_pokemonhabitatnames_aggregate = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_aggregate_order_by', graphql_name='pokemon_v2_pokemonhabitatnames_aggregate')
    pokemon_v2_pokemonshapenames_aggregate = sgqlc.types.Field('pokemon_v2_pokemonshapename_aggregate_order_by', graphql_name='pokemon_v2_pokemonshapenames_aggregate')
    pokemon_v2_pokemonspeciesdescriptions_aggregate = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_aggregate_order_by', graphql_name='pokemon_v2_pokemonspeciesdescriptions_aggregate')
    pokemon_v2_pokemonspeciesflavortexts_aggregate = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_aggregate_order_by', graphql_name='pokemon_v2_pokemonspeciesflavortexts_aggregate')
    pokemon_v2_pokemonspeciesnames_aggregate = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_aggregate_order_by', graphql_name='pokemon_v2_pokemonspeciesnames_aggregate')
    pokemon_v2_regionnames_aggregate = sgqlc.types.Field('pokemon_v2_regionname_aggregate_order_by', graphql_name='pokemon_v2_regionnames_aggregate')
    pokemon_v2_statnames_aggregate = sgqlc.types.Field('pokemon_v2_statname_aggregate_order_by', graphql_name='pokemon_v2_statnames_aggregate')
    pokemon_v2_supercontesteffectflavortexts_aggregate = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_aggregate_order_by', graphql_name='pokemon_v2_supercontesteffectflavortexts_aggregate')
    pokemon_v2_typenames_aggregate = sgqlc.types.Field('pokemon_v2_typename_aggregate_order_by', graphql_name='pokemon_v2_typenames_aggregate')
    pokemon_v2_versionnames_aggregate = sgqlc.types.Field('pokemon_v2_versionname_aggregate_order_by', graphql_name='pokemon_v2_versionnames_aggregate')


class pokemon_v2_languagename_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_languagename_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_languagename_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_languagename_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_languagename_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_languagename_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_languagename_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_languagename_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_languagename_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_languagename_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_languagename_variance_order_by', graphql_name='variance')


class pokemon_v2_languagename_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'local_language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    local_language_id = sgqlc.types.Field(order_by, graphql_name='local_language_id')


class pokemon_v2_languagename_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'language_id', 'local_language_id', 'name', 'pokemon_v2_language_by_local_language_id', 'pokemon_v2_language')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_languagename_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_languagename_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_languagename_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    local_language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='local_language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_language_by_local_language_id = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemonV2LanguageByLocalLanguageId')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')


class pokemon_v2_languagename_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'local_language_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    local_language_id = sgqlc.types.Field(order_by, graphql_name='local_language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_languagename_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'local_language_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    local_language_id = sgqlc.types.Field(order_by, graphql_name='local_language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_languagename_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'local_language_id', 'name', 'pokemon_v2_language_by_local_language_id', 'pokemon_v2_language')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    local_language_id = sgqlc.types.Field(order_by, graphql_name='local_language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_language_by_local_language_id = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemonV2LanguageByLocalLanguageId')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')


class pokemon_v2_languagename_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'local_language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    local_language_id = sgqlc.types.Field(order_by, graphql_name='local_language_id')


class pokemon_v2_languagename_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'local_language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    local_language_id = sgqlc.types.Field(order_by, graphql_name='local_language_id')


class pokemon_v2_languagename_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'local_language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    local_language_id = sgqlc.types.Field(order_by, graphql_name='local_language_id')


class pokemon_v2_languagename_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'local_language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    local_language_id = sgqlc.types.Field(order_by, graphql_name='local_language_id')


class pokemon_v2_languagename_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'local_language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    local_language_id = sgqlc.types.Field(order_by, graphql_name='local_language_id')


class pokemon_v2_languagename_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'local_language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    local_language_id = sgqlc.types.Field(order_by, graphql_name='local_language_id')


class pokemon_v2_languagename_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'local_language_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    local_language_id = sgqlc.types.Field(order_by, graphql_name='local_language_id')


class pokemon_v2_location_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_location_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_location_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_location_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_location_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_location_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_location_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_location_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_location_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_location_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_location_variance_order_by', graphql_name='variance')


class pokemon_v2_location_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_location_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_locationareas', 'pokemon_v2_locationgameindices', 'pokemon_v2_locationnames', 'pokemon_v2_pokemonevolutions', 'pokemon_v2_region', 'region_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_location_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_location_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_location_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_locationareas = sgqlc.types.Field('pokemon_v2_locationarea_bool_exp', graphql_name='pokemon_v2_locationareas')
    pokemon_v2_locationgameindices = sgqlc.types.Field('pokemon_v2_locationgameindex_bool_exp', graphql_name='pokemon_v2_locationgameindices')
    pokemon_v2_locationnames = sgqlc.types.Field('pokemon_v2_locationname_bool_exp', graphql_name='pokemon_v2_locationnames')
    pokemon_v2_pokemonevolutions = sgqlc.types.Field('pokemon_v2_pokemonevolution_bool_exp', graphql_name='pokemon_v2_pokemonevolutions')
    pokemon_v2_region = sgqlc.types.Field('pokemon_v2_region_bool_exp', graphql_name='pokemon_v2_region')
    region_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='region_id')


class pokemon_v2_location_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_location_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_location_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_locationareas_aggregate', 'pokemon_v2_locationgameindices_aggregate', 'pokemon_v2_locationnames_aggregate', 'pokemon_v2_pokemonevolutions_aggregate', 'pokemon_v2_region', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_locationareas_aggregate = sgqlc.types.Field('pokemon_v2_locationarea_aggregate_order_by', graphql_name='pokemon_v2_locationareas_aggregate')
    pokemon_v2_locationgameindices_aggregate = sgqlc.types.Field('pokemon_v2_locationgameindex_aggregate_order_by', graphql_name='pokemon_v2_locationgameindices_aggregate')
    pokemon_v2_locationnames_aggregate = sgqlc.types.Field('pokemon_v2_locationname_aggregate_order_by', graphql_name='pokemon_v2_locationnames_aggregate')
    pokemon_v2_pokemonevolutions_aggregate = sgqlc.types.Field('pokemon_v2_pokemonevolution_aggregate_order_by', graphql_name='pokemon_v2_pokemonevolutions_aggregate')
    pokemon_v2_region = sgqlc.types.Field('pokemon_v2_region_order_by', graphql_name='pokemon_v2_region')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_location_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_location_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_location_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_location_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_location_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_location_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_location_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_locationarea_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_locationarea_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_locationarea_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_locationarea_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_locationarea_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_locationarea_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_locationarea_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_locationarea_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_locationarea_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_locationarea_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_locationarea_variance_order_by', graphql_name='variance')


class pokemon_v2_locationarea_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'location_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationarea_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'game_index', 'id', 'location_id', 'name', 'pokemon_v2_encounters', 'pokemon_v2_location', 'pokemon_v2_locationareaencounterrates', 'pokemon_v2_locationareanames')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationarea_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_locationarea_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationarea_bool_exp')), graphql_name='_or')
    game_index = sgqlc.types.Field(Int_comparison_exp, graphql_name='game_index')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    location_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='location_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_encounters = sgqlc.types.Field(pokemon_v2_encounter_bool_exp, graphql_name='pokemon_v2_encounters')
    pokemon_v2_location = sgqlc.types.Field(pokemon_v2_location_bool_exp, graphql_name='pokemon_v2_location')
    pokemon_v2_locationareaencounterrates = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_bool_exp', graphql_name='pokemon_v2_locationareaencounterrates')
    pokemon_v2_locationareanames = sgqlc.types.Field('pokemon_v2_locationareaname_bool_exp', graphql_name='pokemon_v2_locationareanames')


class pokemon_v2_locationarea_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'location_id', 'name')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_locationarea_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'location_id', 'name')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_locationarea_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'location_id', 'name', 'pokemon_v2_encounters_aggregate', 'pokemon_v2_location', 'pokemon_v2_locationareaencounterrates_aggregate', 'pokemon_v2_locationareanames_aggregate')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_encounters_aggregate = sgqlc.types.Field(pokemon_v2_encounter_aggregate_order_by, graphql_name='pokemon_v2_encounters_aggregate')
    pokemon_v2_location = sgqlc.types.Field(pokemon_v2_location_order_by, graphql_name='pokemon_v2_location')
    pokemon_v2_locationareaencounterrates_aggregate = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_aggregate_order_by', graphql_name='pokemon_v2_locationareaencounterrates_aggregate')
    pokemon_v2_locationareanames_aggregate = sgqlc.types.Field('pokemon_v2_locationareaname_aggregate_order_by', graphql_name='pokemon_v2_locationareanames_aggregate')


class pokemon_v2_locationarea_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'location_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationarea_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'location_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationarea_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'location_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationarea_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'location_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationarea_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'location_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationarea_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'location_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationarea_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'location_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationareaencounterrate_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_variance_order_by', graphql_name='variance')


class pokemon_v2_locationareaencounterrate_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'location_area_id', 'rate', 'version_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    rate = sgqlc.types.Field(order_by, graphql_name='rate')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_locationareaencounterrate_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'encounter_method_id', 'id', 'location_area_id', 'pokemon_v2_encountermethod', 'pokemon_v2_locationarea', 'pokemon_v2_version', 'rate', 'version_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationareaencounterrate_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationareaencounterrate_bool_exp')), graphql_name='_or')
    encounter_method_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    location_area_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='location_area_id')
    pokemon_v2_encountermethod = sgqlc.types.Field(pokemon_v2_encountermethod_bool_exp, graphql_name='pokemon_v2_encountermethod')
    pokemon_v2_locationarea = sgqlc.types.Field(pokemon_v2_locationarea_bool_exp, graphql_name='pokemon_v2_locationarea')
    pokemon_v2_version = sgqlc.types.Field('pokemon_v2_version_bool_exp', graphql_name='pokemon_v2_version')
    rate = sgqlc.types.Field(Int_comparison_exp, graphql_name='rate')
    version_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='version_id')


class pokemon_v2_locationareaencounterrate_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'location_area_id', 'rate', 'version_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    rate = sgqlc.types.Field(order_by, graphql_name='rate')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_locationareaencounterrate_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'location_area_id', 'rate', 'version_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    rate = sgqlc.types.Field(order_by, graphql_name='rate')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_locationareaencounterrate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'location_area_id', 'pokemon_v2_encountermethod', 'pokemon_v2_locationarea', 'pokemon_v2_version', 'rate', 'version_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    pokemon_v2_encountermethod = sgqlc.types.Field(pokemon_v2_encountermethod_order_by, graphql_name='pokemon_v2_encountermethod')
    pokemon_v2_locationarea = sgqlc.types.Field(pokemon_v2_locationarea_order_by, graphql_name='pokemon_v2_locationarea')
    pokemon_v2_version = sgqlc.types.Field('pokemon_v2_version_order_by', graphql_name='pokemon_v2_version')
    rate = sgqlc.types.Field(order_by, graphql_name='rate')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_locationareaencounterrate_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'location_area_id', 'rate', 'version_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    rate = sgqlc.types.Field(order_by, graphql_name='rate')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_locationareaencounterrate_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'location_area_id', 'rate', 'version_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    rate = sgqlc.types.Field(order_by, graphql_name='rate')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_locationareaencounterrate_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'location_area_id', 'rate', 'version_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    rate = sgqlc.types.Field(order_by, graphql_name='rate')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_locationareaencounterrate_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'location_area_id', 'rate', 'version_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    rate = sgqlc.types.Field(order_by, graphql_name='rate')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_locationareaencounterrate_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'location_area_id', 'rate', 'version_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    rate = sgqlc.types.Field(order_by, graphql_name='rate')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_locationareaencounterrate_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'location_area_id', 'rate', 'version_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    rate = sgqlc.types.Field(order_by, graphql_name='rate')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_locationareaencounterrate_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'location_area_id', 'rate', 'version_id')
    encounter_method_id = sgqlc.types.Field(order_by, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    rate = sgqlc.types.Field(order_by, graphql_name='rate')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_locationareaname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_locationareaname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_locationareaname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_locationareaname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_locationareaname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_locationareaname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_locationareaname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_locationareaname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_locationareaname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_locationareaname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_locationareaname_variance_order_by', graphql_name='variance')


class pokemon_v2_locationareaname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_area_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')


class pokemon_v2_locationareaname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'language_id', 'location_area_id', 'name', 'pokemon_v2_language', 'pokemon_v2_locationarea')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationareaname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_locationareaname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationareaname_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    location_area_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='location_area_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_locationarea = sgqlc.types.Field(pokemon_v2_locationarea_bool_exp, graphql_name='pokemon_v2_locationarea')


class pokemon_v2_locationareaname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_area_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_locationareaname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_area_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_locationareaname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_area_id', 'name', 'pokemon_v2_language', 'pokemon_v2_locationarea')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_locationarea = sgqlc.types.Field(pokemon_v2_locationarea_order_by, graphql_name='pokemon_v2_locationarea')


class pokemon_v2_locationareaname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_area_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')


class pokemon_v2_locationareaname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_area_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')


class pokemon_v2_locationareaname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_area_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')


class pokemon_v2_locationareaname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_area_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')


class pokemon_v2_locationareaname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_area_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')


class pokemon_v2_locationareaname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_area_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')


class pokemon_v2_locationareaname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_area_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    location_area_id = sgqlc.types.Field(order_by, graphql_name='location_area_id')


class pokemon_v2_locationgameindex_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_locationgameindex_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_locationgameindex_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_locationgameindex_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_locationgameindex_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_locationgameindex_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_locationgameindex_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_locationgameindex_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_locationgameindex_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_locationgameindex_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_locationgameindex_variance_order_by', graphql_name='variance')


class pokemon_v2_locationgameindex_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'location_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationgameindex_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'game_index', 'generation_id', 'id', 'location_id', 'pokemon_v2_generation', 'pokemon_v2_location')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationgameindex_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_locationgameindex_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationgameindex_bool_exp')), graphql_name='_or')
    game_index = sgqlc.types.Field(Int_comparison_exp, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='generation_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    location_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='location_id')
    pokemon_v2_generation = sgqlc.types.Field(pokemon_v2_generation_bool_exp, graphql_name='pokemon_v2_generation')
    pokemon_v2_location = sgqlc.types.Field(pokemon_v2_location_bool_exp, graphql_name='pokemon_v2_location')


class pokemon_v2_locationgameindex_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'location_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationgameindex_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'location_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationgameindex_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'location_id', 'pokemon_v2_generation', 'pokemon_v2_location')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')
    pokemon_v2_generation = sgqlc.types.Field(pokemon_v2_generation_order_by, graphql_name='pokemon_v2_generation')
    pokemon_v2_location = sgqlc.types.Field(pokemon_v2_location_order_by, graphql_name='pokemon_v2_location')


class pokemon_v2_locationgameindex_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'location_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationgameindex_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'location_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationgameindex_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'location_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationgameindex_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'location_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationgameindex_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'location_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationgameindex_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'location_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationgameindex_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'location_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_locationname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_locationname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_locationname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_locationname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_locationname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_locationname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_locationname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_locationname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_locationname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_locationname_variance_order_by', graphql_name='variance')


class pokemon_v2_locationname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'language_id', 'location_id', 'name', 'pokemon_v2_language', 'pokemon_v2_location')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_locationname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationname_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    location_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='location_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_location = sgqlc.types.Field(pokemon_v2_location_bool_exp, graphql_name='pokemon_v2_location')


class pokemon_v2_locationname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_locationname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_locationname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_id', 'name', 'pokemon_v2_language', 'pokemon_v2_location')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_location = sgqlc.types.Field(pokemon_v2_location_order_by, graphql_name='pokemon_v2_location')


class pokemon_v2_locationname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_locationname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')


class pokemon_v2_machine_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_machine_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_machine_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_machine_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_machine_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_machine_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_machine_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_machine_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_machine_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_machine_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_machine_variance_order_by', graphql_name='variance')


class pokemon_v2_machine_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'version_group_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    machine_number = sgqlc.types.Field(order_by, graphql_name='machine_number')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_machine_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'pokemon_v2_growthrate', 'pokemon_v2_item', 'pokemon_v2_move', 'pokemon_v2_versiongroup', 'version_group_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_machine_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_machine_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_machine_bool_exp')), graphql_name='_or')
    growth_rate_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    item_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='item_id')
    machine_number = sgqlc.types.Field(Int_comparison_exp, graphql_name='machine_number')
    move_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_id')
    pokemon_v2_growthrate = sgqlc.types.Field(pokemon_v2_growthrate_bool_exp, graphql_name='pokemon_v2_growthrate')
    pokemon_v2_item = sgqlc.types.Field(pokemon_v2_item_bool_exp, graphql_name='pokemon_v2_item')
    pokemon_v2_move = sgqlc.types.Field('pokemon_v2_move_bool_exp', graphql_name='pokemon_v2_move')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_bool_exp', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='version_group_id')


class pokemon_v2_machine_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'version_group_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    machine_number = sgqlc.types.Field(order_by, graphql_name='machine_number')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_machine_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'version_group_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    machine_number = sgqlc.types.Field(order_by, graphql_name='machine_number')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_machine_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'pokemon_v2_growthrate', 'pokemon_v2_item', 'pokemon_v2_move', 'pokemon_v2_versiongroup', 'version_group_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    machine_number = sgqlc.types.Field(order_by, graphql_name='machine_number')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    pokemon_v2_growthrate = sgqlc.types.Field(pokemon_v2_growthrate_order_by, graphql_name='pokemon_v2_growthrate')
    pokemon_v2_item = sgqlc.types.Field(pokemon_v2_item_order_by, graphql_name='pokemon_v2_item')
    pokemon_v2_move = sgqlc.types.Field('pokemon_v2_move_order_by', graphql_name='pokemon_v2_move')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_order_by', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_machine_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'version_group_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    machine_number = sgqlc.types.Field(order_by, graphql_name='machine_number')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_machine_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'version_group_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    machine_number = sgqlc.types.Field(order_by, graphql_name='machine_number')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_machine_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'version_group_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    machine_number = sgqlc.types.Field(order_by, graphql_name='machine_number')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_machine_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'version_group_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    machine_number = sgqlc.types.Field(order_by, graphql_name='machine_number')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_machine_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'version_group_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    machine_number = sgqlc.types.Field(order_by, graphql_name='machine_number')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_machine_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'version_group_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    machine_number = sgqlc.types.Field(order_by, graphql_name='machine_number')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_machine_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'version_group_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    machine_number = sgqlc.types.Field(order_by, graphql_name='machine_number')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_move_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_move_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_move_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_move_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_move_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_move_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_move_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_move_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_move_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_move_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_move_variance_order_by', graphql_name='variance')


class pokemon_v2_move_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')
    accuracy = sgqlc.types.Field(order_by, graphql_name='accuracy')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')
    move_effect_chance = sgqlc.types.Field(order_by, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')
    power = sgqlc.types.Field(order_by, graphql_name='power')
    pp = sgqlc.types.Field(order_by, graphql_name='pp')
    priority = sgqlc.types.Field(order_by, graphql_name='priority')
    super_contest_effect_id = sgqlc.types.Field(order_by, graphql_name='super_contest_effect_id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_move_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'name', 'pokemon_v2_contestcombos_by_second_move_id', 'pokemon_v2_supercontestcombos_by_second_move_id', 'pokemon_v2_contestcombos', 'pokemon_v2_contesteffect', 'pokemon_v2_contesttype', 'pokemon_v2_generation', 'pokemon_v2_machines', 'pokemon_v2_moveattributemaps', 'pokemon_v2_movechanges', 'pokemon_v2_movedamageclass', 'pokemon_v2_moveeffect', 'pokemon_v2_moveflavortexts', 'pokemon_v2_movemeta', 'pokemon_v2_movemetastatchanges', 'pokemon_v2_movemetum', 'pokemon_v2_movenames', 'pokemon_v2_movetarget', 'pokemon_v2_pokemonevolutions', 'pokemon_v2_pokemonmoves', 'pokemon_v2_supercontestcombos', 'pokemon_v2_supercontesteffect', 'pokemon_v2_type', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_move_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_move_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_move_bool_exp')), graphql_name='_or')
    accuracy = sgqlc.types.Field(Int_comparison_exp, graphql_name='accuracy')
    contest_effect_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='contest_effect_id')
    contest_type_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='contest_type_id')
    generation_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='generation_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_damage_class_id')
    move_effect_chance = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_effect_id')
    move_target_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_target_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_contestcombos_by_second_move_id = sgqlc.types.Field(pokemon_v2_contestcombo_bool_exp, graphql_name='pokemonV2ContestcombosBySecondMoveId')
    pokemon_v2_supercontestcombos_by_second_move_id = sgqlc.types.Field('pokemon_v2_supercontestcombo_bool_exp', graphql_name='pokemonV2SupercontestcombosBySecondMoveId')
    pokemon_v2_contestcombos = sgqlc.types.Field(pokemon_v2_contestcombo_bool_exp, graphql_name='pokemon_v2_contestcombos')
    pokemon_v2_contesteffect = sgqlc.types.Field(pokemon_v2_contesteffect_bool_exp, graphql_name='pokemon_v2_contesteffect')
    pokemon_v2_contesttype = sgqlc.types.Field(pokemon_v2_contesttype_bool_exp, graphql_name='pokemon_v2_contesttype')
    pokemon_v2_generation = sgqlc.types.Field(pokemon_v2_generation_bool_exp, graphql_name='pokemon_v2_generation')
    pokemon_v2_machines = sgqlc.types.Field(pokemon_v2_machine_bool_exp, graphql_name='pokemon_v2_machines')
    pokemon_v2_moveattributemaps = sgqlc.types.Field('pokemon_v2_moveattributemap_bool_exp', graphql_name='pokemon_v2_moveattributemaps')
    pokemon_v2_movechanges = sgqlc.types.Field('pokemon_v2_movechange_bool_exp', graphql_name='pokemon_v2_movechanges')
    pokemon_v2_movedamageclass = sgqlc.types.Field('pokemon_v2_movedamageclass_bool_exp', graphql_name='pokemon_v2_movedamageclass')
    pokemon_v2_moveeffect = sgqlc.types.Field('pokemon_v2_moveeffect_bool_exp', graphql_name='pokemon_v2_moveeffect')
    pokemon_v2_moveflavortexts = sgqlc.types.Field('pokemon_v2_moveflavortext_bool_exp', graphql_name='pokemon_v2_moveflavortexts')
    pokemon_v2_movemeta = sgqlc.types.Field('pokemon_v2_movemeta_bool_exp', graphql_name='pokemon_v2_movemeta')
    pokemon_v2_movemetastatchanges = sgqlc.types.Field('pokemon_v2_movemetastatchange_bool_exp', graphql_name='pokemon_v2_movemetastatchanges')
    pokemon_v2_movemetum = sgqlc.types.Field('pokemon_v2_movemeta_bool_exp', graphql_name='pokemon_v2_movemetum')
    pokemon_v2_movenames = sgqlc.types.Field('pokemon_v2_movename_bool_exp', graphql_name='pokemon_v2_movenames')
    pokemon_v2_movetarget = sgqlc.types.Field('pokemon_v2_movetarget_bool_exp', graphql_name='pokemon_v2_movetarget')
    pokemon_v2_pokemonevolutions = sgqlc.types.Field('pokemon_v2_pokemonevolution_bool_exp', graphql_name='pokemon_v2_pokemonevolutions')
    pokemon_v2_pokemonmoves = sgqlc.types.Field('pokemon_v2_pokemonmove_bool_exp', graphql_name='pokemon_v2_pokemonmoves')
    pokemon_v2_supercontestcombos = sgqlc.types.Field('pokemon_v2_supercontestcombo_bool_exp', graphql_name='pokemon_v2_supercontestcombos')
    pokemon_v2_supercontesteffect = sgqlc.types.Field('pokemon_v2_supercontesteffect_bool_exp', graphql_name='pokemon_v2_supercontesteffect')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type_bool_exp', graphql_name='pokemon_v2_type')
    power = sgqlc.types.Field(Int_comparison_exp, graphql_name='power')
    pp = sgqlc.types.Field(Int_comparison_exp, graphql_name='pp')
    priority = sgqlc.types.Field(Int_comparison_exp, graphql_name='priority')
    super_contest_effect_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='super_contest_effect_id')
    type_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='type_id')


class pokemon_v2_move_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'name', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')
    accuracy = sgqlc.types.Field(order_by, graphql_name='accuracy')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')
    move_effect_chance = sgqlc.types.Field(order_by, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    power = sgqlc.types.Field(order_by, graphql_name='power')
    pp = sgqlc.types.Field(order_by, graphql_name='pp')
    priority = sgqlc.types.Field(order_by, graphql_name='priority')
    super_contest_effect_id = sgqlc.types.Field(order_by, graphql_name='super_contest_effect_id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_move_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'name', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')
    accuracy = sgqlc.types.Field(order_by, graphql_name='accuracy')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')
    move_effect_chance = sgqlc.types.Field(order_by, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    power = sgqlc.types.Field(order_by, graphql_name='power')
    pp = sgqlc.types.Field(order_by, graphql_name='pp')
    priority = sgqlc.types.Field(order_by, graphql_name='priority')
    super_contest_effect_id = sgqlc.types.Field(order_by, graphql_name='super_contest_effect_id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_move_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'name', 'pokemon_v2_contestcombos_by_second_move_id_aggregate', 'pokemon_v2_supercontestcombos_by_second_move_id_aggregate', 'pokemon_v2_contestcombos_aggregate', 'pokemon_v2_contesteffect', 'pokemon_v2_contesttype', 'pokemon_v2_generation', 'pokemon_v2_machines_aggregate', 'pokemon_v2_moveattributemaps_aggregate', 'pokemon_v2_movechanges_aggregate', 'pokemon_v2_movedamageclass', 'pokemon_v2_moveeffect', 'pokemon_v2_moveflavortexts_aggregate', 'pokemon_v2_movemeta_aggregate', 'pokemon_v2_movemetastatchanges_aggregate', 'pokemon_v2_movemetum', 'pokemon_v2_movenames_aggregate', 'pokemon_v2_movetarget', 'pokemon_v2_pokemonevolutions_aggregate', 'pokemon_v2_pokemonmoves_aggregate', 'pokemon_v2_supercontestcombos_aggregate', 'pokemon_v2_supercontesteffect', 'pokemon_v2_type', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')
    accuracy = sgqlc.types.Field(order_by, graphql_name='accuracy')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')
    move_effect_chance = sgqlc.types.Field(order_by, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_contestcombos_by_second_move_id_aggregate = sgqlc.types.Field(pokemon_v2_contestcombo_aggregate_order_by, graphql_name='pokemonV2ContestcombosBySecondMoveId_aggregate')
    pokemon_v2_supercontestcombos_by_second_move_id_aggregate = sgqlc.types.Field('pokemon_v2_supercontestcombo_aggregate_order_by', graphql_name='pokemonV2SupercontestcombosBySecondMoveId_aggregate')
    pokemon_v2_contestcombos_aggregate = sgqlc.types.Field(pokemon_v2_contestcombo_aggregate_order_by, graphql_name='pokemon_v2_contestcombos_aggregate')
    pokemon_v2_contesteffect = sgqlc.types.Field(pokemon_v2_contesteffect_order_by, graphql_name='pokemon_v2_contesteffect')
    pokemon_v2_contesttype = sgqlc.types.Field(pokemon_v2_contesttype_order_by, graphql_name='pokemon_v2_contesttype')
    pokemon_v2_generation = sgqlc.types.Field(pokemon_v2_generation_order_by, graphql_name='pokemon_v2_generation')
    pokemon_v2_machines_aggregate = sgqlc.types.Field(pokemon_v2_machine_aggregate_order_by, graphql_name='pokemon_v2_machines_aggregate')
    pokemon_v2_moveattributemaps_aggregate = sgqlc.types.Field('pokemon_v2_moveattributemap_aggregate_order_by', graphql_name='pokemon_v2_moveattributemaps_aggregate')
    pokemon_v2_movechanges_aggregate = sgqlc.types.Field('pokemon_v2_movechange_aggregate_order_by', graphql_name='pokemon_v2_movechanges_aggregate')
    pokemon_v2_movedamageclass = sgqlc.types.Field('pokemon_v2_movedamageclass_order_by', graphql_name='pokemon_v2_movedamageclass')
    pokemon_v2_moveeffect = sgqlc.types.Field('pokemon_v2_moveeffect_order_by', graphql_name='pokemon_v2_moveeffect')
    pokemon_v2_moveflavortexts_aggregate = sgqlc.types.Field('pokemon_v2_moveflavortext_aggregate_order_by', graphql_name='pokemon_v2_moveflavortexts_aggregate')
    pokemon_v2_movemeta_aggregate = sgqlc.types.Field('pokemon_v2_movemeta_aggregate_order_by', graphql_name='pokemon_v2_movemeta_aggregate')
    pokemon_v2_movemetastatchanges_aggregate = sgqlc.types.Field('pokemon_v2_movemetastatchange_aggregate_order_by', graphql_name='pokemon_v2_movemetastatchanges_aggregate')
    pokemon_v2_movemetum = sgqlc.types.Field('pokemon_v2_movemeta_order_by', graphql_name='pokemon_v2_movemetum')
    pokemon_v2_movenames_aggregate = sgqlc.types.Field('pokemon_v2_movename_aggregate_order_by', graphql_name='pokemon_v2_movenames_aggregate')
    pokemon_v2_movetarget = sgqlc.types.Field('pokemon_v2_movetarget_order_by', graphql_name='pokemon_v2_movetarget')
    pokemon_v2_pokemonevolutions_aggregate = sgqlc.types.Field('pokemon_v2_pokemonevolution_aggregate_order_by', graphql_name='pokemon_v2_pokemonevolutions_aggregate')
    pokemon_v2_pokemonmoves_aggregate = sgqlc.types.Field('pokemon_v2_pokemonmove_aggregate_order_by', graphql_name='pokemon_v2_pokemonmoves_aggregate')
    pokemon_v2_supercontestcombos_aggregate = sgqlc.types.Field('pokemon_v2_supercontestcombo_aggregate_order_by', graphql_name='pokemon_v2_supercontestcombos_aggregate')
    pokemon_v2_supercontesteffect = sgqlc.types.Field('pokemon_v2_supercontesteffect_order_by', graphql_name='pokemon_v2_supercontesteffect')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type_order_by', graphql_name='pokemon_v2_type')
    power = sgqlc.types.Field(order_by, graphql_name='power')
    pp = sgqlc.types.Field(order_by, graphql_name='pp')
    priority = sgqlc.types.Field(order_by, graphql_name='priority')
    super_contest_effect_id = sgqlc.types.Field(order_by, graphql_name='super_contest_effect_id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_move_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')
    accuracy = sgqlc.types.Field(order_by, graphql_name='accuracy')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')
    move_effect_chance = sgqlc.types.Field(order_by, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')
    power = sgqlc.types.Field(order_by, graphql_name='power')
    pp = sgqlc.types.Field(order_by, graphql_name='pp')
    priority = sgqlc.types.Field(order_by, graphql_name='priority')
    super_contest_effect_id = sgqlc.types.Field(order_by, graphql_name='super_contest_effect_id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_move_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')
    accuracy = sgqlc.types.Field(order_by, graphql_name='accuracy')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')
    move_effect_chance = sgqlc.types.Field(order_by, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')
    power = sgqlc.types.Field(order_by, graphql_name='power')
    pp = sgqlc.types.Field(order_by, graphql_name='pp')
    priority = sgqlc.types.Field(order_by, graphql_name='priority')
    super_contest_effect_id = sgqlc.types.Field(order_by, graphql_name='super_contest_effect_id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_move_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')
    accuracy = sgqlc.types.Field(order_by, graphql_name='accuracy')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')
    move_effect_chance = sgqlc.types.Field(order_by, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')
    power = sgqlc.types.Field(order_by, graphql_name='power')
    pp = sgqlc.types.Field(order_by, graphql_name='pp')
    priority = sgqlc.types.Field(order_by, graphql_name='priority')
    super_contest_effect_id = sgqlc.types.Field(order_by, graphql_name='super_contest_effect_id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_move_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')
    accuracy = sgqlc.types.Field(order_by, graphql_name='accuracy')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')
    move_effect_chance = sgqlc.types.Field(order_by, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')
    power = sgqlc.types.Field(order_by, graphql_name='power')
    pp = sgqlc.types.Field(order_by, graphql_name='pp')
    priority = sgqlc.types.Field(order_by, graphql_name='priority')
    super_contest_effect_id = sgqlc.types.Field(order_by, graphql_name='super_contest_effect_id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_move_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')
    accuracy = sgqlc.types.Field(order_by, graphql_name='accuracy')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')
    move_effect_chance = sgqlc.types.Field(order_by, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')
    power = sgqlc.types.Field(order_by, graphql_name='power')
    pp = sgqlc.types.Field(order_by, graphql_name='pp')
    priority = sgqlc.types.Field(order_by, graphql_name='priority')
    super_contest_effect_id = sgqlc.types.Field(order_by, graphql_name='super_contest_effect_id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_move_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')
    accuracy = sgqlc.types.Field(order_by, graphql_name='accuracy')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')
    move_effect_chance = sgqlc.types.Field(order_by, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')
    power = sgqlc.types.Field(order_by, graphql_name='power')
    pp = sgqlc.types.Field(order_by, graphql_name='pp')
    priority = sgqlc.types.Field(order_by, graphql_name='priority')
    super_contest_effect_id = sgqlc.types.Field(order_by, graphql_name='super_contest_effect_id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_move_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')
    accuracy = sgqlc.types.Field(order_by, graphql_name='accuracy')
    contest_effect_id = sgqlc.types.Field(order_by, graphql_name='contest_effect_id')
    contest_type_id = sgqlc.types.Field(order_by, graphql_name='contest_type_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')
    move_effect_chance = sgqlc.types.Field(order_by, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')
    power = sgqlc.types.Field(order_by, graphql_name='power')
    pp = sgqlc.types.Field(order_by, graphql_name='pp')
    priority = sgqlc.types.Field(order_by, graphql_name='priority')
    super_contest_effect_id = sgqlc.types.Field(order_by, graphql_name='super_contest_effect_id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_moveattribute_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_moveattributedescriptions', 'pokemon_v2_moveattributemaps', 'pokemon_v2_moveattributenames')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveattribute_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_moveattribute_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveattribute_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_moveattributedescriptions = sgqlc.types.Field('pokemon_v2_moveattributedescription_bool_exp', graphql_name='pokemon_v2_moveattributedescriptions')
    pokemon_v2_moveattributemaps = sgqlc.types.Field('pokemon_v2_moveattributemap_bool_exp', graphql_name='pokemon_v2_moveattributemaps')
    pokemon_v2_moveattributenames = sgqlc.types.Field('pokemon_v2_moveattributename_bool_exp', graphql_name='pokemon_v2_moveattributenames')


class pokemon_v2_moveattribute_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_moveattributedescriptions_aggregate', 'pokemon_v2_moveattributemaps_aggregate', 'pokemon_v2_moveattributenames_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_moveattributedescriptions_aggregate = sgqlc.types.Field('pokemon_v2_moveattributedescription_aggregate_order_by', graphql_name='pokemon_v2_moveattributedescriptions_aggregate')
    pokemon_v2_moveattributemaps_aggregate = sgqlc.types.Field('pokemon_v2_moveattributemap_aggregate_order_by', graphql_name='pokemon_v2_moveattributemaps_aggregate')
    pokemon_v2_moveattributenames_aggregate = sgqlc.types.Field('pokemon_v2_moveattributename_aggregate_order_by', graphql_name='pokemon_v2_moveattributenames_aggregate')


class pokemon_v2_moveattributedescription_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_moveattributedescription_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_moveattributedescription_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_moveattributedescription_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_moveattributedescription_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_moveattributedescription_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_moveattributedescription_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_moveattributedescription_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_moveattributedescription_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_moveattributedescription_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_moveattributedescription_variance_order_by', graphql_name='variance')


class pokemon_v2_moveattributedescription_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')


class pokemon_v2_moveattributedescription_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'description', 'id', 'language_id', 'move_attribute_id', 'pokemon_v2_language', 'pokemon_v2_moveattribute')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveattributedescription_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_moveattributedescription_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveattributedescription_bool_exp')), graphql_name='_or')
    description = sgqlc.types.Field(String_comparison_exp, graphql_name='description')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_attribute_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_moveattribute = sgqlc.types.Field(pokemon_v2_moveattribute_bool_exp, graphql_name='pokemon_v2_moveattribute')


class pokemon_v2_moveattributedescription_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_attribute_id')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')


class pokemon_v2_moveattributedescription_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_attribute_id')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')


class pokemon_v2_moveattributedescription_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_attribute_id', 'pokemon_v2_language', 'pokemon_v2_moveattribute')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_moveattribute = sgqlc.types.Field(pokemon_v2_moveattribute_order_by, graphql_name='pokemon_v2_moveattribute')


class pokemon_v2_moveattributedescription_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')


class pokemon_v2_moveattributedescription_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')


class pokemon_v2_moveattributedescription_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')


class pokemon_v2_moveattributedescription_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')


class pokemon_v2_moveattributedescription_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')


class pokemon_v2_moveattributedescription_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')


class pokemon_v2_moveattributedescription_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')


class pokemon_v2_moveattributemap_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_moveattributemap_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_moveattributemap_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_moveattributemap_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_moveattributemap_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_moveattributemap_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_moveattributemap_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_moveattributemap_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_moveattributemap_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_moveattributemap_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_moveattributemap_variance_order_by', graphql_name='variance')


class pokemon_v2_moveattributemap_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_attribute_id', 'move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')


class pokemon_v2_moveattributemap_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'move_attribute_id', 'move_id', 'pokemon_v2_move', 'pokemon_v2_moveattribute')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveattributemap_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_moveattributemap_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveattributemap_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    move_attribute_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_attribute_id')
    move_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_id')
    pokemon_v2_move = sgqlc.types.Field(pokemon_v2_move_bool_exp, graphql_name='pokemon_v2_move')
    pokemon_v2_moveattribute = sgqlc.types.Field(pokemon_v2_moveattribute_bool_exp, graphql_name='pokemon_v2_moveattribute')


class pokemon_v2_moveattributemap_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_attribute_id', 'move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')


class pokemon_v2_moveattributemap_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_attribute_id', 'move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')


class pokemon_v2_moveattributemap_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_attribute_id', 'move_id', 'pokemon_v2_move', 'pokemon_v2_moveattribute')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    pokemon_v2_move = sgqlc.types.Field(pokemon_v2_move_order_by, graphql_name='pokemon_v2_move')
    pokemon_v2_moveattribute = sgqlc.types.Field(pokemon_v2_moveattribute_order_by, graphql_name='pokemon_v2_moveattribute')


class pokemon_v2_moveattributemap_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_attribute_id', 'move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')


class pokemon_v2_moveattributemap_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_attribute_id', 'move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')


class pokemon_v2_moveattributemap_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_attribute_id', 'move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')


class pokemon_v2_moveattributemap_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_attribute_id', 'move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')


class pokemon_v2_moveattributemap_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_attribute_id', 'move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')


class pokemon_v2_moveattributemap_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_attribute_id', 'move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')


class pokemon_v2_moveattributemap_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_attribute_id', 'move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')


class pokemon_v2_moveattributename_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_moveattributename_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_moveattributename_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_moveattributename_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_moveattributename_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_moveattributename_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_moveattributename_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_moveattributename_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_moveattributename_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_moveattributename_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_moveattributename_variance_order_by', graphql_name='variance')


class pokemon_v2_moveattributename_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')


class pokemon_v2_moveattributename_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'language_id', 'move_attribute_id', 'name', 'pokemon_v2_language', 'pokemon_v2_moveattribute')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveattributename_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_moveattributename_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveattributename_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_attribute_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_moveattribute = sgqlc.types.Field(pokemon_v2_moveattribute_bool_exp, graphql_name='pokemon_v2_moveattribute')


class pokemon_v2_moveattributename_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_moveattributename_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_moveattributename_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id', 'name', 'pokemon_v2_language', 'pokemon_v2_moveattribute')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_moveattribute = sgqlc.types.Field(pokemon_v2_moveattribute_order_by, graphql_name='pokemon_v2_moveattribute')


class pokemon_v2_moveattributename_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')


class pokemon_v2_moveattributename_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')


class pokemon_v2_moveattributename_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')


class pokemon_v2_moveattributename_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')


class pokemon_v2_moveattributename_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')


class pokemon_v2_moveattributename_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')


class pokemon_v2_moveattributename_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(order_by, graphql_name='move_attribute_id')


class pokemon_v2_movebattlestyle_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_movebattlestylenames', 'pokemon_v2_naturebattlestylepreferences')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movebattlestyle_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_movebattlestyle_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movebattlestyle_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_movebattlestylenames = sgqlc.types.Field('pokemon_v2_movebattlestylename_bool_exp', graphql_name='pokemon_v2_movebattlestylenames')
    pokemon_v2_naturebattlestylepreferences = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_bool_exp', graphql_name='pokemon_v2_naturebattlestylepreferences')


class pokemon_v2_movebattlestyle_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_movebattlestylenames_aggregate', 'pokemon_v2_naturebattlestylepreferences_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_movebattlestylenames_aggregate = sgqlc.types.Field('pokemon_v2_movebattlestylename_aggregate_order_by', graphql_name='pokemon_v2_movebattlestylenames_aggregate')
    pokemon_v2_naturebattlestylepreferences_aggregate = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_aggregate_order_by', graphql_name='pokemon_v2_naturebattlestylepreferences_aggregate')


class pokemon_v2_movebattlestylename_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movebattlestylename_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_movebattlestylename_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movebattlestylename_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movebattlestylename_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movebattlestylename_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movebattlestylename_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movebattlestylename_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movebattlestylename_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movebattlestylename_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movebattlestylename_variance_order_by', graphql_name='variance')


class pokemon_v2_movebattlestylename_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_battle_style_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_battle_style_id = sgqlc.types.Field(order_by, graphql_name='move_battle_style_id')


class pokemon_v2_movebattlestylename_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'language_id', 'move_battle_style_id', 'name', 'pokemon_v2_language', 'pokemon_v2_movebattlestyle')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movebattlestylename_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_movebattlestylename_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movebattlestylename_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    move_battle_style_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_battle_style_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_movebattlestyle = sgqlc.types.Field(pokemon_v2_movebattlestyle_bool_exp, graphql_name='pokemon_v2_movebattlestyle')


class pokemon_v2_movebattlestylename_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_battle_style_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_battle_style_id = sgqlc.types.Field(order_by, graphql_name='move_battle_style_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_movebattlestylename_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_battle_style_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_battle_style_id = sgqlc.types.Field(order_by, graphql_name='move_battle_style_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_movebattlestylename_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_battle_style_id', 'name', 'pokemon_v2_language', 'pokemon_v2_movebattlestyle')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_battle_style_id = sgqlc.types.Field(order_by, graphql_name='move_battle_style_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_movebattlestyle = sgqlc.types.Field(pokemon_v2_movebattlestyle_order_by, graphql_name='pokemon_v2_movebattlestyle')


class pokemon_v2_movebattlestylename_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_battle_style_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_battle_style_id = sgqlc.types.Field(order_by, graphql_name='move_battle_style_id')


class pokemon_v2_movebattlestylename_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_battle_style_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_battle_style_id = sgqlc.types.Field(order_by, graphql_name='move_battle_style_id')


class pokemon_v2_movebattlestylename_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_battle_style_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_battle_style_id = sgqlc.types.Field(order_by, graphql_name='move_battle_style_id')


class pokemon_v2_movebattlestylename_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_battle_style_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_battle_style_id = sgqlc.types.Field(order_by, graphql_name='move_battle_style_id')


class pokemon_v2_movebattlestylename_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_battle_style_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_battle_style_id = sgqlc.types.Field(order_by, graphql_name='move_battle_style_id')


class pokemon_v2_movebattlestylename_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_battle_style_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_battle_style_id = sgqlc.types.Field(order_by, graphql_name='move_battle_style_id')


class pokemon_v2_movebattlestylename_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_battle_style_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_battle_style_id = sgqlc.types.Field(order_by, graphql_name='move_battle_style_id')


class pokemon_v2_movechange_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movechange_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_movechange_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movechange_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movechange_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movechange_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movechange_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movechange_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movechange_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movechange_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movechange_variance_order_by', graphql_name='variance')


class pokemon_v2_movechange_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'power', 'pp', 'type_id', 'version_group_id')
    accuracy = sgqlc.types.Field(order_by, graphql_name='accuracy')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_effect_chance = sgqlc.types.Field(order_by, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    power = sgqlc.types.Field(order_by, graphql_name='power')
    pp = sgqlc.types.Field(order_by, graphql_name='pp')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_movechange_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'pokemon_v2_move', 'pokemon_v2_moveeffect', 'pokemon_v2_type', 'pokemon_v2_versiongroup', 'power', 'pp', 'type_id', 'version_group_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movechange_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_movechange_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movechange_bool_exp')), graphql_name='_or')
    accuracy = sgqlc.types.Field(Int_comparison_exp, graphql_name='accuracy')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    move_effect_chance = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_effect_id')
    move_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_id')
    pokemon_v2_move = sgqlc.types.Field(pokemon_v2_move_bool_exp, graphql_name='pokemon_v2_move')
    pokemon_v2_moveeffect = sgqlc.types.Field('pokemon_v2_moveeffect_bool_exp', graphql_name='pokemon_v2_moveeffect')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type_bool_exp', graphql_name='pokemon_v2_type')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_bool_exp', graphql_name='pokemon_v2_versiongroup')
    power = sgqlc.types.Field(Int_comparison_exp, graphql_name='power')
    pp = sgqlc.types.Field(Int_comparison_exp, graphql_name='pp')
    type_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='type_id')
    version_group_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='version_group_id')


class pokemon_v2_movechange_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'power', 'pp', 'type_id', 'version_group_id')
    accuracy = sgqlc.types.Field(order_by, graphql_name='accuracy')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_effect_chance = sgqlc.types.Field(order_by, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    power = sgqlc.types.Field(order_by, graphql_name='power')
    pp = sgqlc.types.Field(order_by, graphql_name='pp')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_movechange_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'power', 'pp', 'type_id', 'version_group_id')
    accuracy = sgqlc.types.Field(order_by, graphql_name='accuracy')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_effect_chance = sgqlc.types.Field(order_by, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    power = sgqlc.types.Field(order_by, graphql_name='power')
    pp = sgqlc.types.Field(order_by, graphql_name='pp')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_movechange_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'pokemon_v2_move', 'pokemon_v2_moveeffect', 'pokemon_v2_type', 'pokemon_v2_versiongroup', 'power', 'pp', 'type_id', 'version_group_id')
    accuracy = sgqlc.types.Field(order_by, graphql_name='accuracy')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_effect_chance = sgqlc.types.Field(order_by, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    pokemon_v2_move = sgqlc.types.Field(pokemon_v2_move_order_by, graphql_name='pokemon_v2_move')
    pokemon_v2_moveeffect = sgqlc.types.Field('pokemon_v2_moveeffect_order_by', graphql_name='pokemon_v2_moveeffect')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type_order_by', graphql_name='pokemon_v2_type')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_order_by', graphql_name='pokemon_v2_versiongroup')
    power = sgqlc.types.Field(order_by, graphql_name='power')
    pp = sgqlc.types.Field(order_by, graphql_name='pp')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_movechange_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'power', 'pp', 'type_id', 'version_group_id')
    accuracy = sgqlc.types.Field(order_by, graphql_name='accuracy')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_effect_chance = sgqlc.types.Field(order_by, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    power = sgqlc.types.Field(order_by, graphql_name='power')
    pp = sgqlc.types.Field(order_by, graphql_name='pp')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_movechange_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'power', 'pp', 'type_id', 'version_group_id')
    accuracy = sgqlc.types.Field(order_by, graphql_name='accuracy')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_effect_chance = sgqlc.types.Field(order_by, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    power = sgqlc.types.Field(order_by, graphql_name='power')
    pp = sgqlc.types.Field(order_by, graphql_name='pp')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_movechange_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'power', 'pp', 'type_id', 'version_group_id')
    accuracy = sgqlc.types.Field(order_by, graphql_name='accuracy')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_effect_chance = sgqlc.types.Field(order_by, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    power = sgqlc.types.Field(order_by, graphql_name='power')
    pp = sgqlc.types.Field(order_by, graphql_name='pp')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_movechange_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'power', 'pp', 'type_id', 'version_group_id')
    accuracy = sgqlc.types.Field(order_by, graphql_name='accuracy')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_effect_chance = sgqlc.types.Field(order_by, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    power = sgqlc.types.Field(order_by, graphql_name='power')
    pp = sgqlc.types.Field(order_by, graphql_name='pp')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_movechange_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'power', 'pp', 'type_id', 'version_group_id')
    accuracy = sgqlc.types.Field(order_by, graphql_name='accuracy')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_effect_chance = sgqlc.types.Field(order_by, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    power = sgqlc.types.Field(order_by, graphql_name='power')
    pp = sgqlc.types.Field(order_by, graphql_name='pp')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_movechange_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'power', 'pp', 'type_id', 'version_group_id')
    accuracy = sgqlc.types.Field(order_by, graphql_name='accuracy')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_effect_chance = sgqlc.types.Field(order_by, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    power = sgqlc.types.Field(order_by, graphql_name='power')
    pp = sgqlc.types.Field(order_by, graphql_name='pp')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_movechange_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'power', 'pp', 'type_id', 'version_group_id')
    accuracy = sgqlc.types.Field(order_by, graphql_name='accuracy')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_effect_chance = sgqlc.types.Field(order_by, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    power = sgqlc.types.Field(order_by, graphql_name='power')
    pp = sgqlc.types.Field(order_by, graphql_name='pp')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_movedamageclass_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_movedamageclassdescriptions', 'pokemon_v2_movedamageclassnames', 'pokemon_v2_moves', 'pokemon_v2_stats', 'pokemon_v2_types')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movedamageclass_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_movedamageclass_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movedamageclass_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_movedamageclassdescriptions = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_bool_exp', graphql_name='pokemon_v2_movedamageclassdescriptions')
    pokemon_v2_movedamageclassnames = sgqlc.types.Field('pokemon_v2_movedamageclassname_bool_exp', graphql_name='pokemon_v2_movedamageclassnames')
    pokemon_v2_moves = sgqlc.types.Field(pokemon_v2_move_bool_exp, graphql_name='pokemon_v2_moves')
    pokemon_v2_stats = sgqlc.types.Field('pokemon_v2_stat_bool_exp', graphql_name='pokemon_v2_stats')
    pokemon_v2_types = sgqlc.types.Field('pokemon_v2_type_bool_exp', graphql_name='pokemon_v2_types')


class pokemon_v2_movedamageclass_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_movedamageclassdescriptions_aggregate', 'pokemon_v2_movedamageclassnames_aggregate', 'pokemon_v2_moves_aggregate', 'pokemon_v2_stats_aggregate', 'pokemon_v2_types_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_movedamageclassdescriptions_aggregate = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_aggregate_order_by', graphql_name='pokemon_v2_movedamageclassdescriptions_aggregate')
    pokemon_v2_movedamageclassnames_aggregate = sgqlc.types.Field('pokemon_v2_movedamageclassname_aggregate_order_by', graphql_name='pokemon_v2_movedamageclassnames_aggregate')
    pokemon_v2_moves_aggregate = sgqlc.types.Field(pokemon_v2_move_aggregate_order_by, graphql_name='pokemon_v2_moves_aggregate')
    pokemon_v2_stats_aggregate = sgqlc.types.Field('pokemon_v2_stat_aggregate_order_by', graphql_name='pokemon_v2_stats_aggregate')
    pokemon_v2_types_aggregate = sgqlc.types.Field('pokemon_v2_type_aggregate_order_by', graphql_name='pokemon_v2_types_aggregate')


class pokemon_v2_movedamageclassdescription_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_variance_order_by', graphql_name='variance')


class pokemon_v2_movedamageclassdescription_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassdescription_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'description', 'id', 'language_id', 'move_damage_class_id', 'pokemon_v2_language', 'pokemon_v2_movedamageclass')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movedamageclassdescription_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movedamageclassdescription_bool_exp')), graphql_name='_or')
    description = sgqlc.types.Field(String_comparison_exp, graphql_name='description')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_damage_class_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_movedamageclass = sgqlc.types.Field(pokemon_v2_movedamageclass_bool_exp, graphql_name='pokemon_v2_movedamageclass')


class pokemon_v2_movedamageclassdescription_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_damage_class_id')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassdescription_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_damage_class_id')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassdescription_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_damage_class_id', 'pokemon_v2_language', 'pokemon_v2_movedamageclass')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_movedamageclass = sgqlc.types.Field(pokemon_v2_movedamageclass_order_by, graphql_name='pokemon_v2_movedamageclass')


class pokemon_v2_movedamageclassdescription_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassdescription_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassdescription_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassdescription_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassdescription_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassdescription_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassdescription_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movedamageclassname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_movedamageclassname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movedamageclassname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movedamageclassname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movedamageclassname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movedamageclassname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movedamageclassname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movedamageclassname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movedamageclassname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movedamageclassname_variance_order_by', graphql_name='variance')


class pokemon_v2_movedamageclassname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'language_id', 'move_damage_class_id', 'name', 'pokemon_v2_language', 'pokemon_v2_movedamageclass')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movedamageclassname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_movedamageclassname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movedamageclassname_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_damage_class_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_movedamageclass = sgqlc.types.Field(pokemon_v2_movedamageclass_bool_exp, graphql_name='pokemon_v2_movedamageclass')


class pokemon_v2_movedamageclassname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_movedamageclassname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_movedamageclassname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id', 'name', 'pokemon_v2_language', 'pokemon_v2_movedamageclass')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_movedamageclass = sgqlc.types.Field(pokemon_v2_movedamageclass_order_by, graphql_name='pokemon_v2_movedamageclass')


class pokemon_v2_movedamageclassname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_moveeffect_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'pokemon_v2_movechanges', 'pokemon_v2_moveeffectchanges', 'pokemon_v2_moveeffecteffecttexts', 'pokemon_v2_moves')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveeffect_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_moveeffect_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveeffect_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokemon_v2_movechanges = sgqlc.types.Field(pokemon_v2_movechange_bool_exp, graphql_name='pokemon_v2_movechanges')
    pokemon_v2_moveeffectchanges = sgqlc.types.Field('pokemon_v2_moveeffectchange_bool_exp', graphql_name='pokemon_v2_moveeffectchanges')
    pokemon_v2_moveeffecteffecttexts = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_bool_exp', graphql_name='pokemon_v2_moveeffecteffecttexts')
    pokemon_v2_moves = sgqlc.types.Field(pokemon_v2_move_bool_exp, graphql_name='pokemon_v2_moves')


class pokemon_v2_moveeffect_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_v2_movechanges_aggregate', 'pokemon_v2_moveeffectchanges_aggregate', 'pokemon_v2_moveeffecteffecttexts_aggregate', 'pokemon_v2_moves_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_v2_movechanges_aggregate = sgqlc.types.Field(pokemon_v2_movechange_aggregate_order_by, graphql_name='pokemon_v2_movechanges_aggregate')
    pokemon_v2_moveeffectchanges_aggregate = sgqlc.types.Field('pokemon_v2_moveeffectchange_aggregate_order_by', graphql_name='pokemon_v2_moveeffectchanges_aggregate')
    pokemon_v2_moveeffecteffecttexts_aggregate = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_aggregate_order_by', graphql_name='pokemon_v2_moveeffecteffecttexts_aggregate')
    pokemon_v2_moves_aggregate = sgqlc.types.Field(pokemon_v2_move_aggregate_order_by, graphql_name='pokemon_v2_moves_aggregate')


class pokemon_v2_moveeffectchange_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_moveeffectchange_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_moveeffectchange_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_moveeffectchange_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_moveeffectchange_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_moveeffectchange_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_moveeffectchange_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_moveeffectchange_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_moveeffectchange_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_moveeffectchange_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_moveeffectchange_variance_order_by', graphql_name='variance')


class pokemon_v2_moveeffectchange_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_effect_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_moveeffectchange_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'move_effect_id', 'pokemon_v2_moveeffect', 'pokemon_v2_moveeffectchangeeffecttexts', 'pokemon_v2_versiongroup', 'version_group_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveeffectchange_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_moveeffectchange_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveeffectchange_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    move_effect_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_effect_id')
    pokemon_v2_moveeffect = sgqlc.types.Field(pokemon_v2_moveeffect_bool_exp, graphql_name='pokemon_v2_moveeffect')
    pokemon_v2_moveeffectchangeeffecttexts = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_bool_exp', graphql_name='pokemon_v2_moveeffectchangeeffecttexts')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_bool_exp', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='version_group_id')


class pokemon_v2_moveeffectchange_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_effect_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_moveeffectchange_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_effect_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_moveeffectchange_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_effect_id', 'pokemon_v2_moveeffect', 'pokemon_v2_moveeffectchangeeffecttexts_aggregate', 'pokemon_v2_versiongroup', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    pokemon_v2_moveeffect = sgqlc.types.Field(pokemon_v2_moveeffect_order_by, graphql_name='pokemon_v2_moveeffect')
    pokemon_v2_moveeffectchangeeffecttexts_aggregate = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_aggregate_order_by', graphql_name='pokemon_v2_moveeffectchangeeffecttexts_aggregate')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_order_by', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_moveeffectchange_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_effect_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_moveeffectchange_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_effect_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_moveeffectchange_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_effect_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_moveeffectchange_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_effect_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_moveeffectchange_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_effect_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_moveeffectchange_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_effect_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_moveeffectchange_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_effect_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_moveeffectchangeeffecttext_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_variance_order_by', graphql_name='variance')


class pokemon_v2_moveeffectchangeeffecttext_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_change_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_effect_change_id = sgqlc.types.Field(order_by, graphql_name='move_effect_change_id')


class pokemon_v2_moveeffectchangeeffecttext_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'effect', 'id', 'language_id', 'move_effect_change_id', 'pokemon_v2_language', 'pokemon_v2_moveeffectchange')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveeffectchangeeffecttext_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveeffectchangeeffecttext_bool_exp')), graphql_name='_or')
    effect = sgqlc.types.Field(String_comparison_exp, graphql_name='effect')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    move_effect_change_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_effect_change_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_moveeffectchange = sgqlc.types.Field(pokemon_v2_moveeffectchange_bool_exp, graphql_name='pokemon_v2_moveeffectchange')


class pokemon_v2_moveeffectchangeeffecttext_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'language_id', 'move_effect_change_id')
    effect = sgqlc.types.Field(order_by, graphql_name='effect')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_effect_change_id = sgqlc.types.Field(order_by, graphql_name='move_effect_change_id')


class pokemon_v2_moveeffectchangeeffecttext_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'language_id', 'move_effect_change_id')
    effect = sgqlc.types.Field(order_by, graphql_name='effect')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_effect_change_id = sgqlc.types.Field(order_by, graphql_name='move_effect_change_id')


class pokemon_v2_moveeffectchangeeffecttext_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'language_id', 'move_effect_change_id', 'pokemon_v2_language', 'pokemon_v2_moveeffectchange')
    effect = sgqlc.types.Field(order_by, graphql_name='effect')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_effect_change_id = sgqlc.types.Field(order_by, graphql_name='move_effect_change_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_moveeffectchange = sgqlc.types.Field(pokemon_v2_moveeffectchange_order_by, graphql_name='pokemon_v2_moveeffectchange')


class pokemon_v2_moveeffectchangeeffecttext_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_change_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_effect_change_id = sgqlc.types.Field(order_by, graphql_name='move_effect_change_id')


class pokemon_v2_moveeffectchangeeffecttext_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_change_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_effect_change_id = sgqlc.types.Field(order_by, graphql_name='move_effect_change_id')


class pokemon_v2_moveeffectchangeeffecttext_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_change_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_effect_change_id = sgqlc.types.Field(order_by, graphql_name='move_effect_change_id')


class pokemon_v2_moveeffectchangeeffecttext_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_change_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_effect_change_id = sgqlc.types.Field(order_by, graphql_name='move_effect_change_id')


class pokemon_v2_moveeffectchangeeffecttext_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_change_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_effect_change_id = sgqlc.types.Field(order_by, graphql_name='move_effect_change_id')


class pokemon_v2_moveeffectchangeeffecttext_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_change_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_effect_change_id = sgqlc.types.Field(order_by, graphql_name='move_effect_change_id')


class pokemon_v2_moveeffectchangeeffecttext_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_change_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_effect_change_id = sgqlc.types.Field(order_by, graphql_name='move_effect_change_id')


class pokemon_v2_moveeffecteffecttext_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_variance_order_by', graphql_name='variance')


class pokemon_v2_moveeffecteffecttext_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')


class pokemon_v2_moveeffecteffecttext_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'effect', 'id', 'language_id', 'move_effect_id', 'pokemon_v2_language', 'pokemon_v2_moveeffect', 'short_effect')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveeffecteffecttext_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveeffecteffecttext_bool_exp')), graphql_name='_or')
    effect = sgqlc.types.Field(String_comparison_exp, graphql_name='effect')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    move_effect_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_effect_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_moveeffect = sgqlc.types.Field(pokemon_v2_moveeffect_bool_exp, graphql_name='pokemon_v2_moveeffect')
    short_effect = sgqlc.types.Field(String_comparison_exp, graphql_name='short_effect')


class pokemon_v2_moveeffecteffecttext_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'language_id', 'move_effect_id', 'short_effect')
    effect = sgqlc.types.Field(order_by, graphql_name='effect')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    short_effect = sgqlc.types.Field(order_by, graphql_name='short_effect')


class pokemon_v2_moveeffecteffecttext_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'language_id', 'move_effect_id', 'short_effect')
    effect = sgqlc.types.Field(order_by, graphql_name='effect')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    short_effect = sgqlc.types.Field(order_by, graphql_name='short_effect')


class pokemon_v2_moveeffecteffecttext_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'language_id', 'move_effect_id', 'pokemon_v2_language', 'pokemon_v2_moveeffect', 'short_effect')
    effect = sgqlc.types.Field(order_by, graphql_name='effect')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_moveeffect = sgqlc.types.Field(pokemon_v2_moveeffect_order_by, graphql_name='pokemon_v2_moveeffect')
    short_effect = sgqlc.types.Field(order_by, graphql_name='short_effect')


class pokemon_v2_moveeffecteffecttext_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')


class pokemon_v2_moveeffecteffecttext_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')


class pokemon_v2_moveeffecteffecttext_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')


class pokemon_v2_moveeffecteffecttext_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')


class pokemon_v2_moveeffecteffecttext_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')


class pokemon_v2_moveeffecteffecttext_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')


class pokemon_v2_moveeffecteffecttext_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_effect_id = sgqlc.types.Field(order_by, graphql_name='move_effect_id')


class pokemon_v2_moveflavortext_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_moveflavortext_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_moveflavortext_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_moveflavortext_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_moveflavortext_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_moveflavortext_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_moveflavortext_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_moveflavortext_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_moveflavortext_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_moveflavortext_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_moveflavortext_variance_order_by', graphql_name='variance')


class pokemon_v2_moveflavortext_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_moveflavortext_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'flavor_text', 'id', 'language_id', 'move_id', 'pokemon_v2_language', 'pokemon_v2_move', 'pokemon_v2_versiongroup', 'version_group_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveflavortext_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_moveflavortext_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveflavortext_bool_exp')), graphql_name='_or')
    flavor_text = sgqlc.types.Field(String_comparison_exp, graphql_name='flavor_text')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    move_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_move = sgqlc.types.Field(pokemon_v2_move_bool_exp, graphql_name='pokemon_v2_move')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_bool_exp', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='version_group_id')


class pokemon_v2_moveflavortext_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'language_id', 'move_id', 'version_group_id')
    flavor_text = sgqlc.types.Field(order_by, graphql_name='flavor_text')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_moveflavortext_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'language_id', 'move_id', 'version_group_id')
    flavor_text = sgqlc.types.Field(order_by, graphql_name='flavor_text')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_moveflavortext_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'language_id', 'move_id', 'pokemon_v2_language', 'pokemon_v2_move', 'pokemon_v2_versiongroup', 'version_group_id')
    flavor_text = sgqlc.types.Field(order_by, graphql_name='flavor_text')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_move = sgqlc.types.Field(pokemon_v2_move_order_by, graphql_name='pokemon_v2_move')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_order_by', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_moveflavortext_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_moveflavortext_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_moveflavortext_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_moveflavortext_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_moveflavortext_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_moveflavortext_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_moveflavortext_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_movelearnmethod_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_movelearnmethoddescriptions', 'pokemon_v2_movelearnmethodnames', 'pokemon_v2_pokemonmoves', 'pokemon_v2_versiongroupmovelearnmethods')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movelearnmethod_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_movelearnmethod_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movelearnmethod_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_movelearnmethoddescriptions = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_bool_exp', graphql_name='pokemon_v2_movelearnmethoddescriptions')
    pokemon_v2_movelearnmethodnames = sgqlc.types.Field('pokemon_v2_movelearnmethodname_bool_exp', graphql_name='pokemon_v2_movelearnmethodnames')
    pokemon_v2_pokemonmoves = sgqlc.types.Field('pokemon_v2_pokemonmove_bool_exp', graphql_name='pokemon_v2_pokemonmoves')
    pokemon_v2_versiongroupmovelearnmethods = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_bool_exp', graphql_name='pokemon_v2_versiongroupmovelearnmethods')


class pokemon_v2_movelearnmethod_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_movelearnmethoddescriptions_aggregate', 'pokemon_v2_movelearnmethodnames_aggregate', 'pokemon_v2_pokemonmoves_aggregate', 'pokemon_v2_versiongroupmovelearnmethods_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_movelearnmethoddescriptions_aggregate = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_aggregate_order_by', graphql_name='pokemon_v2_movelearnmethoddescriptions_aggregate')
    pokemon_v2_movelearnmethodnames_aggregate = sgqlc.types.Field('pokemon_v2_movelearnmethodname_aggregate_order_by', graphql_name='pokemon_v2_movelearnmethodnames_aggregate')
    pokemon_v2_pokemonmoves_aggregate = sgqlc.types.Field('pokemon_v2_pokemonmove_aggregate_order_by', graphql_name='pokemon_v2_pokemonmoves_aggregate')
    pokemon_v2_versiongroupmovelearnmethods_aggregate = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_aggregate_order_by', graphql_name='pokemon_v2_versiongroupmovelearnmethods_aggregate')


class pokemon_v2_movelearnmethoddescription_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_variance_order_by', graphql_name='variance')


class pokemon_v2_movelearnmethoddescription_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethoddescription_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'description', 'id', 'language_id', 'move_learn_method_id', 'pokemon_v2_language', 'pokemon_v2_movelearnmethod')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movelearnmethoddescription_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movelearnmethoddescription_bool_exp')), graphql_name='_or')
    description = sgqlc.types.Field(String_comparison_exp, graphql_name='description')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_learn_method_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_movelearnmethod = sgqlc.types.Field(pokemon_v2_movelearnmethod_bool_exp, graphql_name='pokemon_v2_movelearnmethod')


class pokemon_v2_movelearnmethoddescription_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_learn_method_id')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethoddescription_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_learn_method_id')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethoddescription_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_learn_method_id', 'pokemon_v2_language', 'pokemon_v2_movelearnmethod')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_movelearnmethod = sgqlc.types.Field(pokemon_v2_movelearnmethod_order_by, graphql_name='pokemon_v2_movelearnmethod')


class pokemon_v2_movelearnmethoddescription_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethoddescription_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethoddescription_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethoddescription_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethoddescription_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethoddescription_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethoddescription_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethodname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movelearnmethodname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_movelearnmethodname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movelearnmethodname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movelearnmethodname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movelearnmethodname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movelearnmethodname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movelearnmethodname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movelearnmethodname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movelearnmethodname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movelearnmethodname_variance_order_by', graphql_name='variance')


class pokemon_v2_movelearnmethodname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethodname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'language_id', 'move_learn_method_id', 'name', 'pokemon_v2_language', 'pokemon_v2_movelearnmethod')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movelearnmethodname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_movelearnmethodname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movelearnmethodname_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_learn_method_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_movelearnmethod = sgqlc.types.Field(pokemon_v2_movelearnmethod_bool_exp, graphql_name='pokemon_v2_movelearnmethod')


class pokemon_v2_movelearnmethodname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_movelearnmethodname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_movelearnmethodname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id', 'name', 'pokemon_v2_language', 'pokemon_v2_movelearnmethod')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_movelearnmethod = sgqlc.types.Field(pokemon_v2_movelearnmethod_order_by, graphql_name='pokemon_v2_movelearnmethod')


class pokemon_v2_movelearnmethodname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethodname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethodname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethodname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethodname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethodname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethodname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')


class pokemon_v2_movemeta_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movemeta_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_movemeta_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movemeta_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movemeta_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movemeta_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movemeta_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movemeta_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movemeta_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movemeta_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movemeta_variance_order_by', graphql_name='variance')


class pokemon_v2_movemeta_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'stat_chance')
    ailment_chance = sgqlc.types.Field(order_by, graphql_name='ailment_chance')
    crit_rate = sgqlc.types.Field(order_by, graphql_name='crit_rate')
    drain = sgqlc.types.Field(order_by, graphql_name='drain')
    flinch_chance = sgqlc.types.Field(order_by, graphql_name='flinch_chance')
    healing = sgqlc.types.Field(order_by, graphql_name='healing')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    max_hits = sgqlc.types.Field(order_by, graphql_name='max_hits')
    max_turns = sgqlc.types.Field(order_by, graphql_name='max_turns')
    min_hits = sgqlc.types.Field(order_by, graphql_name='min_hits')
    min_turns = sgqlc.types.Field(order_by, graphql_name='min_turns')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    move_meta_ailment_id = sgqlc.types.Field(order_by, graphql_name='move_meta_ailment_id')
    move_meta_category_id = sgqlc.types.Field(order_by, graphql_name='move_meta_category_id')
    stat_chance = sgqlc.types.Field(order_by, graphql_name='stat_chance')


class pokemon_v2_movemeta_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'pokemon_v2_move', 'pokemon_v2_movemetaailment', 'pokemon_v2_movemetacategory', 'stat_chance')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemeta_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_movemeta_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemeta_bool_exp')), graphql_name='_or')
    ailment_chance = sgqlc.types.Field(Int_comparison_exp, graphql_name='ailment_chance')
    crit_rate = sgqlc.types.Field(Int_comparison_exp, graphql_name='crit_rate')
    drain = sgqlc.types.Field(Int_comparison_exp, graphql_name='drain')
    flinch_chance = sgqlc.types.Field(Int_comparison_exp, graphql_name='flinch_chance')
    healing = sgqlc.types.Field(Int_comparison_exp, graphql_name='healing')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    max_hits = sgqlc.types.Field(Int_comparison_exp, graphql_name='max_hits')
    max_turns = sgqlc.types.Field(Int_comparison_exp, graphql_name='max_turns')
    min_hits = sgqlc.types.Field(Int_comparison_exp, graphql_name='min_hits')
    min_turns = sgqlc.types.Field(Int_comparison_exp, graphql_name='min_turns')
    move_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_id')
    move_meta_ailment_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_meta_ailment_id')
    move_meta_category_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_meta_category_id')
    pokemon_v2_move = sgqlc.types.Field(pokemon_v2_move_bool_exp, graphql_name='pokemon_v2_move')
    pokemon_v2_movemetaailment = sgqlc.types.Field('pokemon_v2_movemetaailment_bool_exp', graphql_name='pokemon_v2_movemetaailment')
    pokemon_v2_movemetacategory = sgqlc.types.Field('pokemon_v2_movemetacategory_bool_exp', graphql_name='pokemon_v2_movemetacategory')
    stat_chance = sgqlc.types.Field(Int_comparison_exp, graphql_name='stat_chance')


class pokemon_v2_movemeta_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'stat_chance')
    ailment_chance = sgqlc.types.Field(order_by, graphql_name='ailment_chance')
    crit_rate = sgqlc.types.Field(order_by, graphql_name='crit_rate')
    drain = sgqlc.types.Field(order_by, graphql_name='drain')
    flinch_chance = sgqlc.types.Field(order_by, graphql_name='flinch_chance')
    healing = sgqlc.types.Field(order_by, graphql_name='healing')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    max_hits = sgqlc.types.Field(order_by, graphql_name='max_hits')
    max_turns = sgqlc.types.Field(order_by, graphql_name='max_turns')
    min_hits = sgqlc.types.Field(order_by, graphql_name='min_hits')
    min_turns = sgqlc.types.Field(order_by, graphql_name='min_turns')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    move_meta_ailment_id = sgqlc.types.Field(order_by, graphql_name='move_meta_ailment_id')
    move_meta_category_id = sgqlc.types.Field(order_by, graphql_name='move_meta_category_id')
    stat_chance = sgqlc.types.Field(order_by, graphql_name='stat_chance')


class pokemon_v2_movemeta_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'stat_chance')
    ailment_chance = sgqlc.types.Field(order_by, graphql_name='ailment_chance')
    crit_rate = sgqlc.types.Field(order_by, graphql_name='crit_rate')
    drain = sgqlc.types.Field(order_by, graphql_name='drain')
    flinch_chance = sgqlc.types.Field(order_by, graphql_name='flinch_chance')
    healing = sgqlc.types.Field(order_by, graphql_name='healing')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    max_hits = sgqlc.types.Field(order_by, graphql_name='max_hits')
    max_turns = sgqlc.types.Field(order_by, graphql_name='max_turns')
    min_hits = sgqlc.types.Field(order_by, graphql_name='min_hits')
    min_turns = sgqlc.types.Field(order_by, graphql_name='min_turns')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    move_meta_ailment_id = sgqlc.types.Field(order_by, graphql_name='move_meta_ailment_id')
    move_meta_category_id = sgqlc.types.Field(order_by, graphql_name='move_meta_category_id')
    stat_chance = sgqlc.types.Field(order_by, graphql_name='stat_chance')


class pokemon_v2_movemeta_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'pokemon_v2_move', 'pokemon_v2_movemetaailment', 'pokemon_v2_movemetacategory', 'stat_chance')
    ailment_chance = sgqlc.types.Field(order_by, graphql_name='ailment_chance')
    crit_rate = sgqlc.types.Field(order_by, graphql_name='crit_rate')
    drain = sgqlc.types.Field(order_by, graphql_name='drain')
    flinch_chance = sgqlc.types.Field(order_by, graphql_name='flinch_chance')
    healing = sgqlc.types.Field(order_by, graphql_name='healing')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    max_hits = sgqlc.types.Field(order_by, graphql_name='max_hits')
    max_turns = sgqlc.types.Field(order_by, graphql_name='max_turns')
    min_hits = sgqlc.types.Field(order_by, graphql_name='min_hits')
    min_turns = sgqlc.types.Field(order_by, graphql_name='min_turns')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    move_meta_ailment_id = sgqlc.types.Field(order_by, graphql_name='move_meta_ailment_id')
    move_meta_category_id = sgqlc.types.Field(order_by, graphql_name='move_meta_category_id')
    pokemon_v2_move = sgqlc.types.Field(pokemon_v2_move_order_by, graphql_name='pokemon_v2_move')
    pokemon_v2_movemetaailment = sgqlc.types.Field('pokemon_v2_movemetaailment_order_by', graphql_name='pokemon_v2_movemetaailment')
    pokemon_v2_movemetacategory = sgqlc.types.Field('pokemon_v2_movemetacategory_order_by', graphql_name='pokemon_v2_movemetacategory')
    stat_chance = sgqlc.types.Field(order_by, graphql_name='stat_chance')


class pokemon_v2_movemeta_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'stat_chance')
    ailment_chance = sgqlc.types.Field(order_by, graphql_name='ailment_chance')
    crit_rate = sgqlc.types.Field(order_by, graphql_name='crit_rate')
    drain = sgqlc.types.Field(order_by, graphql_name='drain')
    flinch_chance = sgqlc.types.Field(order_by, graphql_name='flinch_chance')
    healing = sgqlc.types.Field(order_by, graphql_name='healing')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    max_hits = sgqlc.types.Field(order_by, graphql_name='max_hits')
    max_turns = sgqlc.types.Field(order_by, graphql_name='max_turns')
    min_hits = sgqlc.types.Field(order_by, graphql_name='min_hits')
    min_turns = sgqlc.types.Field(order_by, graphql_name='min_turns')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    move_meta_ailment_id = sgqlc.types.Field(order_by, graphql_name='move_meta_ailment_id')
    move_meta_category_id = sgqlc.types.Field(order_by, graphql_name='move_meta_category_id')
    stat_chance = sgqlc.types.Field(order_by, graphql_name='stat_chance')


class pokemon_v2_movemeta_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'stat_chance')
    ailment_chance = sgqlc.types.Field(order_by, graphql_name='ailment_chance')
    crit_rate = sgqlc.types.Field(order_by, graphql_name='crit_rate')
    drain = sgqlc.types.Field(order_by, graphql_name='drain')
    flinch_chance = sgqlc.types.Field(order_by, graphql_name='flinch_chance')
    healing = sgqlc.types.Field(order_by, graphql_name='healing')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    max_hits = sgqlc.types.Field(order_by, graphql_name='max_hits')
    max_turns = sgqlc.types.Field(order_by, graphql_name='max_turns')
    min_hits = sgqlc.types.Field(order_by, graphql_name='min_hits')
    min_turns = sgqlc.types.Field(order_by, graphql_name='min_turns')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    move_meta_ailment_id = sgqlc.types.Field(order_by, graphql_name='move_meta_ailment_id')
    move_meta_category_id = sgqlc.types.Field(order_by, graphql_name='move_meta_category_id')
    stat_chance = sgqlc.types.Field(order_by, graphql_name='stat_chance')


class pokemon_v2_movemeta_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'stat_chance')
    ailment_chance = sgqlc.types.Field(order_by, graphql_name='ailment_chance')
    crit_rate = sgqlc.types.Field(order_by, graphql_name='crit_rate')
    drain = sgqlc.types.Field(order_by, graphql_name='drain')
    flinch_chance = sgqlc.types.Field(order_by, graphql_name='flinch_chance')
    healing = sgqlc.types.Field(order_by, graphql_name='healing')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    max_hits = sgqlc.types.Field(order_by, graphql_name='max_hits')
    max_turns = sgqlc.types.Field(order_by, graphql_name='max_turns')
    min_hits = sgqlc.types.Field(order_by, graphql_name='min_hits')
    min_turns = sgqlc.types.Field(order_by, graphql_name='min_turns')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    move_meta_ailment_id = sgqlc.types.Field(order_by, graphql_name='move_meta_ailment_id')
    move_meta_category_id = sgqlc.types.Field(order_by, graphql_name='move_meta_category_id')
    stat_chance = sgqlc.types.Field(order_by, graphql_name='stat_chance')


class pokemon_v2_movemeta_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'stat_chance')
    ailment_chance = sgqlc.types.Field(order_by, graphql_name='ailment_chance')
    crit_rate = sgqlc.types.Field(order_by, graphql_name='crit_rate')
    drain = sgqlc.types.Field(order_by, graphql_name='drain')
    flinch_chance = sgqlc.types.Field(order_by, graphql_name='flinch_chance')
    healing = sgqlc.types.Field(order_by, graphql_name='healing')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    max_hits = sgqlc.types.Field(order_by, graphql_name='max_hits')
    max_turns = sgqlc.types.Field(order_by, graphql_name='max_turns')
    min_hits = sgqlc.types.Field(order_by, graphql_name='min_hits')
    min_turns = sgqlc.types.Field(order_by, graphql_name='min_turns')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    move_meta_ailment_id = sgqlc.types.Field(order_by, graphql_name='move_meta_ailment_id')
    move_meta_category_id = sgqlc.types.Field(order_by, graphql_name='move_meta_category_id')
    stat_chance = sgqlc.types.Field(order_by, graphql_name='stat_chance')


class pokemon_v2_movemeta_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'stat_chance')
    ailment_chance = sgqlc.types.Field(order_by, graphql_name='ailment_chance')
    crit_rate = sgqlc.types.Field(order_by, graphql_name='crit_rate')
    drain = sgqlc.types.Field(order_by, graphql_name='drain')
    flinch_chance = sgqlc.types.Field(order_by, graphql_name='flinch_chance')
    healing = sgqlc.types.Field(order_by, graphql_name='healing')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    max_hits = sgqlc.types.Field(order_by, graphql_name='max_hits')
    max_turns = sgqlc.types.Field(order_by, graphql_name='max_turns')
    min_hits = sgqlc.types.Field(order_by, graphql_name='min_hits')
    min_turns = sgqlc.types.Field(order_by, graphql_name='min_turns')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    move_meta_ailment_id = sgqlc.types.Field(order_by, graphql_name='move_meta_ailment_id')
    move_meta_category_id = sgqlc.types.Field(order_by, graphql_name='move_meta_category_id')
    stat_chance = sgqlc.types.Field(order_by, graphql_name='stat_chance')


class pokemon_v2_movemeta_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'stat_chance')
    ailment_chance = sgqlc.types.Field(order_by, graphql_name='ailment_chance')
    crit_rate = sgqlc.types.Field(order_by, graphql_name='crit_rate')
    drain = sgqlc.types.Field(order_by, graphql_name='drain')
    flinch_chance = sgqlc.types.Field(order_by, graphql_name='flinch_chance')
    healing = sgqlc.types.Field(order_by, graphql_name='healing')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    max_hits = sgqlc.types.Field(order_by, graphql_name='max_hits')
    max_turns = sgqlc.types.Field(order_by, graphql_name='max_turns')
    min_hits = sgqlc.types.Field(order_by, graphql_name='min_hits')
    min_turns = sgqlc.types.Field(order_by, graphql_name='min_turns')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    move_meta_ailment_id = sgqlc.types.Field(order_by, graphql_name='move_meta_ailment_id')
    move_meta_category_id = sgqlc.types.Field(order_by, graphql_name='move_meta_category_id')
    stat_chance = sgqlc.types.Field(order_by, graphql_name='stat_chance')


class pokemon_v2_movemeta_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'stat_chance')
    ailment_chance = sgqlc.types.Field(order_by, graphql_name='ailment_chance')
    crit_rate = sgqlc.types.Field(order_by, graphql_name='crit_rate')
    drain = sgqlc.types.Field(order_by, graphql_name='drain')
    flinch_chance = sgqlc.types.Field(order_by, graphql_name='flinch_chance')
    healing = sgqlc.types.Field(order_by, graphql_name='healing')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    max_hits = sgqlc.types.Field(order_by, graphql_name='max_hits')
    max_turns = sgqlc.types.Field(order_by, graphql_name='max_turns')
    min_hits = sgqlc.types.Field(order_by, graphql_name='min_hits')
    min_turns = sgqlc.types.Field(order_by, graphql_name='min_turns')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    move_meta_ailment_id = sgqlc.types.Field(order_by, graphql_name='move_meta_ailment_id')
    move_meta_category_id = sgqlc.types.Field(order_by, graphql_name='move_meta_category_id')
    stat_chance = sgqlc.types.Field(order_by, graphql_name='stat_chance')


class pokemon_v2_movemetaailment_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_movemeta', 'pokemon_v2_movemetaailmentnames')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetaailment_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_movemetaailment_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetaailment_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_movemeta = sgqlc.types.Field(pokemon_v2_movemeta_bool_exp, graphql_name='pokemon_v2_movemeta')
    pokemon_v2_movemetaailmentnames = sgqlc.types.Field('pokemon_v2_movemetaailmentname_bool_exp', graphql_name='pokemon_v2_movemetaailmentnames')


class pokemon_v2_movemetaailment_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_movemeta_aggregate', 'pokemon_v2_movemetaailmentnames_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_movemeta_aggregate = sgqlc.types.Field(pokemon_v2_movemeta_aggregate_order_by, graphql_name='pokemon_v2_movemeta_aggregate')
    pokemon_v2_movemetaailmentnames_aggregate = sgqlc.types.Field('pokemon_v2_movemetaailmentname_aggregate_order_by', graphql_name='pokemon_v2_movemetaailmentnames_aggregate')


class pokemon_v2_movemetaailmentname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movemetaailmentname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_movemetaailmentname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movemetaailmentname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movemetaailmentname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movemetaailmentname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movemetaailmentname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movemetaailmentname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movemetaailmentname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movemetaailmentname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movemetaailmentname_variance_order_by', graphql_name='variance')


class pokemon_v2_movemetaailmentname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_ailment_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_meta_ailment_id = sgqlc.types.Field(order_by, graphql_name='move_meta_ailment_id')


class pokemon_v2_movemetaailmentname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'language_id', 'move_meta_ailment_id', 'name', 'pokemon_v2_language', 'pokemon_v2_movemetaailment')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetaailmentname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_movemetaailmentname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetaailmentname_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    move_meta_ailment_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_meta_ailment_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_movemetaailment = sgqlc.types.Field(pokemon_v2_movemetaailment_bool_exp, graphql_name='pokemon_v2_movemetaailment')


class pokemon_v2_movemetaailmentname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_ailment_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_meta_ailment_id = sgqlc.types.Field(order_by, graphql_name='move_meta_ailment_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_movemetaailmentname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_ailment_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_meta_ailment_id = sgqlc.types.Field(order_by, graphql_name='move_meta_ailment_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_movemetaailmentname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_ailment_id', 'name', 'pokemon_v2_language', 'pokemon_v2_movemetaailment')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_meta_ailment_id = sgqlc.types.Field(order_by, graphql_name='move_meta_ailment_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_movemetaailment = sgqlc.types.Field(pokemon_v2_movemetaailment_order_by, graphql_name='pokemon_v2_movemetaailment')


class pokemon_v2_movemetaailmentname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_ailment_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_meta_ailment_id = sgqlc.types.Field(order_by, graphql_name='move_meta_ailment_id')


class pokemon_v2_movemetaailmentname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_ailment_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_meta_ailment_id = sgqlc.types.Field(order_by, graphql_name='move_meta_ailment_id')


class pokemon_v2_movemetaailmentname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_ailment_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_meta_ailment_id = sgqlc.types.Field(order_by, graphql_name='move_meta_ailment_id')


class pokemon_v2_movemetaailmentname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_ailment_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_meta_ailment_id = sgqlc.types.Field(order_by, graphql_name='move_meta_ailment_id')


class pokemon_v2_movemetaailmentname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_ailment_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_meta_ailment_id = sgqlc.types.Field(order_by, graphql_name='move_meta_ailment_id')


class pokemon_v2_movemetaailmentname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_ailment_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_meta_ailment_id = sgqlc.types.Field(order_by, graphql_name='move_meta_ailment_id')


class pokemon_v2_movemetaailmentname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_ailment_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_meta_ailment_id = sgqlc.types.Field(order_by, graphql_name='move_meta_ailment_id')


class pokemon_v2_movemetacategory_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_movemeta', 'pokemon_v2_movemetacategorydescriptions')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetacategory_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_movemetacategory_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetacategory_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_movemeta = sgqlc.types.Field(pokemon_v2_movemeta_bool_exp, graphql_name='pokemon_v2_movemeta')
    pokemon_v2_movemetacategorydescriptions = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_bool_exp', graphql_name='pokemon_v2_movemetacategorydescriptions')


class pokemon_v2_movemetacategory_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_movemeta_aggregate', 'pokemon_v2_movemetacategorydescriptions_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_movemeta_aggregate = sgqlc.types.Field(pokemon_v2_movemeta_aggregate_order_by, graphql_name='pokemon_v2_movemeta_aggregate')
    pokemon_v2_movemetacategorydescriptions_aggregate = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_aggregate_order_by', graphql_name='pokemon_v2_movemetacategorydescriptions_aggregate')


class pokemon_v2_movemetacategorydescription_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_variance_order_by', graphql_name='variance')


class pokemon_v2_movemetacategorydescription_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_category_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_meta_category_id = sgqlc.types.Field(order_by, graphql_name='move_meta_category_id')


class pokemon_v2_movemetacategorydescription_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'description', 'id', 'language_id', 'move_meta_category_id', 'pokemon_v2_language', 'pokemon_v2_movemetacategory')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetacategorydescription_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetacategorydescription_bool_exp')), graphql_name='_or')
    description = sgqlc.types.Field(String_comparison_exp, graphql_name='description')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    move_meta_category_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_meta_category_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_movemetacategory = sgqlc.types.Field(pokemon_v2_movemetacategory_bool_exp, graphql_name='pokemon_v2_movemetacategory')


class pokemon_v2_movemetacategorydescription_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_meta_category_id')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_meta_category_id = sgqlc.types.Field(order_by, graphql_name='move_meta_category_id')


class pokemon_v2_movemetacategorydescription_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_meta_category_id')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_meta_category_id = sgqlc.types.Field(order_by, graphql_name='move_meta_category_id')


class pokemon_v2_movemetacategorydescription_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_meta_category_id', 'pokemon_v2_language', 'pokemon_v2_movemetacategory')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_meta_category_id = sgqlc.types.Field(order_by, graphql_name='move_meta_category_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_movemetacategory = sgqlc.types.Field(pokemon_v2_movemetacategory_order_by, graphql_name='pokemon_v2_movemetacategory')


class pokemon_v2_movemetacategorydescription_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_category_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_meta_category_id = sgqlc.types.Field(order_by, graphql_name='move_meta_category_id')


class pokemon_v2_movemetacategorydescription_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_category_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_meta_category_id = sgqlc.types.Field(order_by, graphql_name='move_meta_category_id')


class pokemon_v2_movemetacategorydescription_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_category_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_meta_category_id = sgqlc.types.Field(order_by, graphql_name='move_meta_category_id')


class pokemon_v2_movemetacategorydescription_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_category_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_meta_category_id = sgqlc.types.Field(order_by, graphql_name='move_meta_category_id')


class pokemon_v2_movemetacategorydescription_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_category_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_meta_category_id = sgqlc.types.Field(order_by, graphql_name='move_meta_category_id')


class pokemon_v2_movemetacategorydescription_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_category_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_meta_category_id = sgqlc.types.Field(order_by, graphql_name='move_meta_category_id')


class pokemon_v2_movemetacategorydescription_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_category_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_meta_category_id = sgqlc.types.Field(order_by, graphql_name='move_meta_category_id')


class pokemon_v2_movemetastatchange_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movemetastatchange_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_movemetastatchange_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movemetastatchange_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movemetastatchange_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movemetastatchange_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movemetastatchange_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movemetastatchange_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movemetastatchange_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movemetastatchange_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movemetastatchange_variance_order_by', graphql_name='variance')


class pokemon_v2_movemetastatchange_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('change', 'id', 'move_id', 'stat_id')
    change = sgqlc.types.Field(order_by, graphql_name='change')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_movemetastatchange_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'change', 'id', 'move_id', 'pokemon_v2_move', 'pokemon_v2_stat', 'stat_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetastatchange_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_movemetastatchange_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetastatchange_bool_exp')), graphql_name='_or')
    change = sgqlc.types.Field(Int_comparison_exp, graphql_name='change')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    move_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_id')
    pokemon_v2_move = sgqlc.types.Field(pokemon_v2_move_bool_exp, graphql_name='pokemon_v2_move')
    pokemon_v2_stat = sgqlc.types.Field('pokemon_v2_stat_bool_exp', graphql_name='pokemon_v2_stat')
    stat_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='stat_id')


class pokemon_v2_movemetastatchange_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('change', 'id', 'move_id', 'stat_id')
    change = sgqlc.types.Field(order_by, graphql_name='change')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_movemetastatchange_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('change', 'id', 'move_id', 'stat_id')
    change = sgqlc.types.Field(order_by, graphql_name='change')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_movemetastatchange_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('change', 'id', 'move_id', 'pokemon_v2_move', 'pokemon_v2_stat', 'stat_id')
    change = sgqlc.types.Field(order_by, graphql_name='change')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    pokemon_v2_move = sgqlc.types.Field(pokemon_v2_move_order_by, graphql_name='pokemon_v2_move')
    pokemon_v2_stat = sgqlc.types.Field('pokemon_v2_stat_order_by', graphql_name='pokemon_v2_stat')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_movemetastatchange_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('change', 'id', 'move_id', 'stat_id')
    change = sgqlc.types.Field(order_by, graphql_name='change')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_movemetastatchange_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('change', 'id', 'move_id', 'stat_id')
    change = sgqlc.types.Field(order_by, graphql_name='change')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_movemetastatchange_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('change', 'id', 'move_id', 'stat_id')
    change = sgqlc.types.Field(order_by, graphql_name='change')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_movemetastatchange_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('change', 'id', 'move_id', 'stat_id')
    change = sgqlc.types.Field(order_by, graphql_name='change')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_movemetastatchange_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('change', 'id', 'move_id', 'stat_id')
    change = sgqlc.types.Field(order_by, graphql_name='change')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_movemetastatchange_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('change', 'id', 'move_id', 'stat_id')
    change = sgqlc.types.Field(order_by, graphql_name='change')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_movemetastatchange_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('change', 'id', 'move_id', 'stat_id')
    change = sgqlc.types.Field(order_by, graphql_name='change')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_movename_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movename_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_movename_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movename_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movename_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movename_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movename_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movename_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movename_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movename_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movename_variance_order_by', graphql_name='variance')


class pokemon_v2_movename_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')


class pokemon_v2_movename_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'language_id', 'move_id', 'name', 'pokemon_v2_language', 'pokemon_v2_move')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movename_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_movename_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movename_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    move_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_move = sgqlc.types.Field(pokemon_v2_move_bool_exp, graphql_name='pokemon_v2_move')


class pokemon_v2_movename_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_movename_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_movename_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id', 'name', 'pokemon_v2_language', 'pokemon_v2_move')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_move = sgqlc.types.Field(pokemon_v2_move_order_by, graphql_name='pokemon_v2_move')


class pokemon_v2_movename_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')


class pokemon_v2_movename_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')


class pokemon_v2_movename_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')


class pokemon_v2_movename_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')


class pokemon_v2_movename_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')


class pokemon_v2_movename_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')


class pokemon_v2_movename_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')


class pokemon_v2_movetarget_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_moves', 'pokemon_v2_movetargetdescriptions', 'pokemon_v2_movetargetnames')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movetarget_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_movetarget_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movetarget_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_moves = sgqlc.types.Field(pokemon_v2_move_bool_exp, graphql_name='pokemon_v2_moves')
    pokemon_v2_movetargetdescriptions = sgqlc.types.Field('pokemon_v2_movetargetdescription_bool_exp', graphql_name='pokemon_v2_movetargetdescriptions')
    pokemon_v2_movetargetnames = sgqlc.types.Field('pokemon_v2_movetargetname_bool_exp', graphql_name='pokemon_v2_movetargetnames')


class pokemon_v2_movetarget_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_moves_aggregate', 'pokemon_v2_movetargetdescriptions_aggregate', 'pokemon_v2_movetargetnames_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_moves_aggregate = sgqlc.types.Field(pokemon_v2_move_aggregate_order_by, graphql_name='pokemon_v2_moves_aggregate')
    pokemon_v2_movetargetdescriptions_aggregate = sgqlc.types.Field('pokemon_v2_movetargetdescription_aggregate_order_by', graphql_name='pokemon_v2_movetargetdescriptions_aggregate')
    pokemon_v2_movetargetnames_aggregate = sgqlc.types.Field('pokemon_v2_movetargetname_aggregate_order_by', graphql_name='pokemon_v2_movetargetnames_aggregate')


class pokemon_v2_movetargetdescription_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movetargetdescription_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_movetargetdescription_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movetargetdescription_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movetargetdescription_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movetargetdescription_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movetargetdescription_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movetargetdescription_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movetargetdescription_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movetargetdescription_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movetargetdescription_variance_order_by', graphql_name='variance')


class pokemon_v2_movetargetdescription_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')


class pokemon_v2_movetargetdescription_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'description', 'id', 'language_id', 'move_target_id', 'pokemon_v2_language', 'pokemon_v2_movetarget')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movetargetdescription_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_movetargetdescription_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movetargetdescription_bool_exp')), graphql_name='_or')
    description = sgqlc.types.Field(String_comparison_exp, graphql_name='description')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_target_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_movetarget = sgqlc.types.Field(pokemon_v2_movetarget_bool_exp, graphql_name='pokemon_v2_movetarget')


class pokemon_v2_movetargetdescription_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_target_id')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')


class pokemon_v2_movetargetdescription_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_target_id')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')


class pokemon_v2_movetargetdescription_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_target_id', 'pokemon_v2_language', 'pokemon_v2_movetarget')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_movetarget = sgqlc.types.Field(pokemon_v2_movetarget_order_by, graphql_name='pokemon_v2_movetarget')


class pokemon_v2_movetargetdescription_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')


class pokemon_v2_movetargetdescription_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')


class pokemon_v2_movetargetdescription_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')


class pokemon_v2_movetargetdescription_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')


class pokemon_v2_movetargetdescription_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')


class pokemon_v2_movetargetdescription_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')


class pokemon_v2_movetargetdescription_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')


class pokemon_v2_movetargetname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movetargetname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_movetargetname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movetargetname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movetargetname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movetargetname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movetargetname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movetargetname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movetargetname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movetargetname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movetargetname_variance_order_by', graphql_name='variance')


class pokemon_v2_movetargetname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')


class pokemon_v2_movetargetname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'language_id', 'move_target_id', 'name', 'pokemon_v2_language', 'pokemon_v2_movetarget')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movetargetname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_movetargetname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movetargetname_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_target_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_movetarget = sgqlc.types.Field(pokemon_v2_movetarget_bool_exp, graphql_name='pokemon_v2_movetarget')


class pokemon_v2_movetargetname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_movetargetname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id', 'name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_movetargetname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id', 'name', 'pokemon_v2_language', 'pokemon_v2_movetarget')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_movetarget = sgqlc.types.Field(pokemon_v2_movetarget_order_by, graphql_name='pokemon_v2_movetarget')


class pokemon_v2_movetargetname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')


class pokemon_v2_movetargetname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')


class pokemon_v2_movetargetname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')


class pokemon_v2_movetargetname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')


class pokemon_v2_movetargetname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')


class pokemon_v2_movetargetname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')


class pokemon_v2_movetargetname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(order_by, graphql_name='move_target_id')


class pokemon_v2_nature_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_nature_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_nature_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_nature_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_nature_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_nature_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_nature_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_nature_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_nature_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_nature_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_nature_variance_order_by', graphql_name='variance')


class pokemon_v2_nature_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id')
    decreased_stat_id = sgqlc.types.Field(order_by, graphql_name='decreased_stat_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    hates_flavor_id = sgqlc.types.Field(order_by, graphql_name='hates_flavor_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    increased_stat_id = sgqlc.types.Field(order_by, graphql_name='increased_stat_id')
    likes_flavor_id = sgqlc.types.Field(order_by, graphql_name='likes_flavor_id')


class pokemon_v2_nature_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id', 'name', 'pokemon_v2_berryflavor_by_likes_flavor_id', 'pokemon_v2_stat_by_increased_stat_id', 'pokemon_v2_berryflavor', 'pokemon_v2_naturebattlestylepreferences', 'pokemon_v2_naturenames', 'pokemon_v2_naturepokeathlonstats', 'pokemon_v2_stat')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_nature_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_nature_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_nature_bool_exp')), graphql_name='_or')
    decreased_stat_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='decreased_stat_id')
    game_index = sgqlc.types.Field(Int_comparison_exp, graphql_name='game_index')
    hates_flavor_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='hates_flavor_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    increased_stat_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='increased_stat_id')
    likes_flavor_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='likes_flavor_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_berryflavor_by_likes_flavor_id = sgqlc.types.Field(pokemon_v2_berryflavor_bool_exp, graphql_name='pokemonV2BerryflavorByLikesFlavorId')
    pokemon_v2_stat_by_increased_stat_id = sgqlc.types.Field('pokemon_v2_stat_bool_exp', graphql_name='pokemonV2StatByIncreasedStatId')
    pokemon_v2_berryflavor = sgqlc.types.Field(pokemon_v2_berryflavor_bool_exp, graphql_name='pokemon_v2_berryflavor')
    pokemon_v2_naturebattlestylepreferences = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_bool_exp', graphql_name='pokemon_v2_naturebattlestylepreferences')
    pokemon_v2_naturenames = sgqlc.types.Field('pokemon_v2_naturename_bool_exp', graphql_name='pokemon_v2_naturenames')
    pokemon_v2_naturepokeathlonstats = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_bool_exp', graphql_name='pokemon_v2_naturepokeathlonstats')
    pokemon_v2_stat = sgqlc.types.Field('pokemon_v2_stat_bool_exp', graphql_name='pokemon_v2_stat')


class pokemon_v2_nature_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id', 'name')
    decreased_stat_id = sgqlc.types.Field(order_by, graphql_name='decreased_stat_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    hates_flavor_id = sgqlc.types.Field(order_by, graphql_name='hates_flavor_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    increased_stat_id = sgqlc.types.Field(order_by, graphql_name='increased_stat_id')
    likes_flavor_id = sgqlc.types.Field(order_by, graphql_name='likes_flavor_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_nature_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id', 'name')
    decreased_stat_id = sgqlc.types.Field(order_by, graphql_name='decreased_stat_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    hates_flavor_id = sgqlc.types.Field(order_by, graphql_name='hates_flavor_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    increased_stat_id = sgqlc.types.Field(order_by, graphql_name='increased_stat_id')
    likes_flavor_id = sgqlc.types.Field(order_by, graphql_name='likes_flavor_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_nature_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id', 'name', 'pokemon_v2_berryflavor_by_likes_flavor_id', 'pokemon_v2_stat_by_increased_stat_id', 'pokemon_v2_berryflavor', 'pokemon_v2_naturebattlestylepreferences_aggregate', 'pokemon_v2_naturenames_aggregate', 'pokemon_v2_naturepokeathlonstats_aggregate', 'pokemon_v2_stat')
    decreased_stat_id = sgqlc.types.Field(order_by, graphql_name='decreased_stat_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    hates_flavor_id = sgqlc.types.Field(order_by, graphql_name='hates_flavor_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    increased_stat_id = sgqlc.types.Field(order_by, graphql_name='increased_stat_id')
    likes_flavor_id = sgqlc.types.Field(order_by, graphql_name='likes_flavor_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_berryflavor_by_likes_flavor_id = sgqlc.types.Field(pokemon_v2_berryflavor_order_by, graphql_name='pokemonV2BerryflavorByLikesFlavorId')
    pokemon_v2_stat_by_increased_stat_id = sgqlc.types.Field('pokemon_v2_stat_order_by', graphql_name='pokemonV2StatByIncreasedStatId')
    pokemon_v2_berryflavor = sgqlc.types.Field(pokemon_v2_berryflavor_order_by, graphql_name='pokemon_v2_berryflavor')
    pokemon_v2_naturebattlestylepreferences_aggregate = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_aggregate_order_by', graphql_name='pokemon_v2_naturebattlestylepreferences_aggregate')
    pokemon_v2_naturenames_aggregate = sgqlc.types.Field('pokemon_v2_naturename_aggregate_order_by', graphql_name='pokemon_v2_naturenames_aggregate')
    pokemon_v2_naturepokeathlonstats_aggregate = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_aggregate_order_by', graphql_name='pokemon_v2_naturepokeathlonstats_aggregate')
    pokemon_v2_stat = sgqlc.types.Field('pokemon_v2_stat_order_by', graphql_name='pokemon_v2_stat')


class pokemon_v2_nature_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id')
    decreased_stat_id = sgqlc.types.Field(order_by, graphql_name='decreased_stat_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    hates_flavor_id = sgqlc.types.Field(order_by, graphql_name='hates_flavor_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    increased_stat_id = sgqlc.types.Field(order_by, graphql_name='increased_stat_id')
    likes_flavor_id = sgqlc.types.Field(order_by, graphql_name='likes_flavor_id')


class pokemon_v2_nature_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id')
    decreased_stat_id = sgqlc.types.Field(order_by, graphql_name='decreased_stat_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    hates_flavor_id = sgqlc.types.Field(order_by, graphql_name='hates_flavor_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    increased_stat_id = sgqlc.types.Field(order_by, graphql_name='increased_stat_id')
    likes_flavor_id = sgqlc.types.Field(order_by, graphql_name='likes_flavor_id')


class pokemon_v2_nature_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id')
    decreased_stat_id = sgqlc.types.Field(order_by, graphql_name='decreased_stat_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    hates_flavor_id = sgqlc.types.Field(order_by, graphql_name='hates_flavor_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    increased_stat_id = sgqlc.types.Field(order_by, graphql_name='increased_stat_id')
    likes_flavor_id = sgqlc.types.Field(order_by, graphql_name='likes_flavor_id')


class pokemon_v2_nature_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id')
    decreased_stat_id = sgqlc.types.Field(order_by, graphql_name='decreased_stat_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    hates_flavor_id = sgqlc.types.Field(order_by, graphql_name='hates_flavor_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    increased_stat_id = sgqlc.types.Field(order_by, graphql_name='increased_stat_id')
    likes_flavor_id = sgqlc.types.Field(order_by, graphql_name='likes_flavor_id')


class pokemon_v2_nature_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id')
    decreased_stat_id = sgqlc.types.Field(order_by, graphql_name='decreased_stat_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    hates_flavor_id = sgqlc.types.Field(order_by, graphql_name='hates_flavor_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    increased_stat_id = sgqlc.types.Field(order_by, graphql_name='increased_stat_id')
    likes_flavor_id = sgqlc.types.Field(order_by, graphql_name='likes_flavor_id')


class pokemon_v2_nature_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id')
    decreased_stat_id = sgqlc.types.Field(order_by, graphql_name='decreased_stat_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    hates_flavor_id = sgqlc.types.Field(order_by, graphql_name='hates_flavor_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    increased_stat_id = sgqlc.types.Field(order_by, graphql_name='increased_stat_id')
    likes_flavor_id = sgqlc.types.Field(order_by, graphql_name='likes_flavor_id')


class pokemon_v2_nature_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id')
    decreased_stat_id = sgqlc.types.Field(order_by, graphql_name='decreased_stat_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    hates_flavor_id = sgqlc.types.Field(order_by, graphql_name='hates_flavor_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    increased_stat_id = sgqlc.types.Field(order_by, graphql_name='increased_stat_id')
    likes_flavor_id = sgqlc.types.Field(order_by, graphql_name='likes_flavor_id')


class pokemon_v2_naturebattlestylepreference_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_variance_order_by', graphql_name='variance')


class pokemon_v2_naturebattlestylepreference_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id')
    high_hp_preference = sgqlc.types.Field(order_by, graphql_name='high_hp_preference')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    low_hp_preference = sgqlc.types.Field(order_by, graphql_name='low_hp_preference')
    move_battle_style_id = sgqlc.types.Field(order_by, graphql_name='move_battle_style_id')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')


class pokemon_v2_naturebattlestylepreference_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id', 'pokemon_v2_movebattlestyle', 'pokemon_v2_nature')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_naturebattlestylepreference_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_naturebattlestylepreference_bool_exp')), graphql_name='_or')
    high_hp_preference = sgqlc.types.Field(Int_comparison_exp, graphql_name='high_hp_preference')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    low_hp_preference = sgqlc.types.Field(Int_comparison_exp, graphql_name='low_hp_preference')
    move_battle_style_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_battle_style_id')
    nature_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='nature_id')
    pokemon_v2_movebattlestyle = sgqlc.types.Field(pokemon_v2_movebattlestyle_bool_exp, graphql_name='pokemon_v2_movebattlestyle')
    pokemon_v2_nature = sgqlc.types.Field(pokemon_v2_nature_bool_exp, graphql_name='pokemon_v2_nature')


class pokemon_v2_naturebattlestylepreference_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id')
    high_hp_preference = sgqlc.types.Field(order_by, graphql_name='high_hp_preference')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    low_hp_preference = sgqlc.types.Field(order_by, graphql_name='low_hp_preference')
    move_battle_style_id = sgqlc.types.Field(order_by, graphql_name='move_battle_style_id')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')


class pokemon_v2_naturebattlestylepreference_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id')
    high_hp_preference = sgqlc.types.Field(order_by, graphql_name='high_hp_preference')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    low_hp_preference = sgqlc.types.Field(order_by, graphql_name='low_hp_preference')
    move_battle_style_id = sgqlc.types.Field(order_by, graphql_name='move_battle_style_id')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')


class pokemon_v2_naturebattlestylepreference_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id', 'pokemon_v2_movebattlestyle', 'pokemon_v2_nature')
    high_hp_preference = sgqlc.types.Field(order_by, graphql_name='high_hp_preference')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    low_hp_preference = sgqlc.types.Field(order_by, graphql_name='low_hp_preference')
    move_battle_style_id = sgqlc.types.Field(order_by, graphql_name='move_battle_style_id')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')
    pokemon_v2_movebattlestyle = sgqlc.types.Field(pokemon_v2_movebattlestyle_order_by, graphql_name='pokemon_v2_movebattlestyle')
    pokemon_v2_nature = sgqlc.types.Field(pokemon_v2_nature_order_by, graphql_name='pokemon_v2_nature')


class pokemon_v2_naturebattlestylepreference_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id')
    high_hp_preference = sgqlc.types.Field(order_by, graphql_name='high_hp_preference')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    low_hp_preference = sgqlc.types.Field(order_by, graphql_name='low_hp_preference')
    move_battle_style_id = sgqlc.types.Field(order_by, graphql_name='move_battle_style_id')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')


class pokemon_v2_naturebattlestylepreference_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id')
    high_hp_preference = sgqlc.types.Field(order_by, graphql_name='high_hp_preference')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    low_hp_preference = sgqlc.types.Field(order_by, graphql_name='low_hp_preference')
    move_battle_style_id = sgqlc.types.Field(order_by, graphql_name='move_battle_style_id')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')


class pokemon_v2_naturebattlestylepreference_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id')
    high_hp_preference = sgqlc.types.Field(order_by, graphql_name='high_hp_preference')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    low_hp_preference = sgqlc.types.Field(order_by, graphql_name='low_hp_preference')
    move_battle_style_id = sgqlc.types.Field(order_by, graphql_name='move_battle_style_id')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')


class pokemon_v2_naturebattlestylepreference_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id')
    high_hp_preference = sgqlc.types.Field(order_by, graphql_name='high_hp_preference')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    low_hp_preference = sgqlc.types.Field(order_by, graphql_name='low_hp_preference')
    move_battle_style_id = sgqlc.types.Field(order_by, graphql_name='move_battle_style_id')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')


class pokemon_v2_naturebattlestylepreference_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id')
    high_hp_preference = sgqlc.types.Field(order_by, graphql_name='high_hp_preference')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    low_hp_preference = sgqlc.types.Field(order_by, graphql_name='low_hp_preference')
    move_battle_style_id = sgqlc.types.Field(order_by, graphql_name='move_battle_style_id')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')


class pokemon_v2_naturebattlestylepreference_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id')
    high_hp_preference = sgqlc.types.Field(order_by, graphql_name='high_hp_preference')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    low_hp_preference = sgqlc.types.Field(order_by, graphql_name='low_hp_preference')
    move_battle_style_id = sgqlc.types.Field(order_by, graphql_name='move_battle_style_id')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')


class pokemon_v2_naturebattlestylepreference_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id')
    high_hp_preference = sgqlc.types.Field(order_by, graphql_name='high_hp_preference')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    low_hp_preference = sgqlc.types.Field(order_by, graphql_name='low_hp_preference')
    move_battle_style_id = sgqlc.types.Field(order_by, graphql_name='move_battle_style_id')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')


class pokemon_v2_naturename_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_naturename_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_naturename_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_naturename_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_naturename_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_naturename_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_naturename_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_naturename_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_naturename_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_naturename_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_naturename_variance_order_by', graphql_name='variance')


class pokemon_v2_naturename_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'nature_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')


class pokemon_v2_naturename_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'language_id', 'name', 'nature_id', 'pokemon_v2_language', 'pokemon_v2_nature')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_naturename_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_naturename_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_naturename_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    nature_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='nature_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_nature = sgqlc.types.Field(pokemon_v2_nature_bool_exp, graphql_name='pokemon_v2_nature')


class pokemon_v2_naturename_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'nature_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')


class pokemon_v2_naturename_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'nature_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')


class pokemon_v2_naturename_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'nature_id', 'pokemon_v2_language', 'pokemon_v2_nature')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_nature = sgqlc.types.Field(pokemon_v2_nature_order_by, graphql_name='pokemon_v2_nature')


class pokemon_v2_naturename_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'nature_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')


class pokemon_v2_naturename_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'nature_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')


class pokemon_v2_naturename_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'nature_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')


class pokemon_v2_naturename_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'nature_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')


class pokemon_v2_naturename_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'nature_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')


class pokemon_v2_naturename_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'nature_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')


class pokemon_v2_naturename_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'nature_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')


class pokemon_v2_naturepokeathlonstat_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_variance_order_by', graphql_name='variance')


class pokemon_v2_naturepokeathlonstat_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'max_change', 'nature_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    max_change = sgqlc.types.Field(order_by, graphql_name='max_change')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')
    pokeathlon_stat_id = sgqlc.types.Field(order_by, graphql_name='pokeathlon_stat_id')


class pokemon_v2_naturepokeathlonstat_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'max_change', 'nature_id', 'pokeathlon_stat_id', 'pokemon_v2_nature', 'pokemon_v2_pokeathlonstat')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_naturepokeathlonstat_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_naturepokeathlonstat_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    max_change = sgqlc.types.Field(Int_comparison_exp, graphql_name='max_change')
    nature_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='nature_id')
    pokeathlon_stat_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokeathlon_stat_id')
    pokemon_v2_nature = sgqlc.types.Field(pokemon_v2_nature_bool_exp, graphql_name='pokemon_v2_nature')
    pokemon_v2_pokeathlonstat = sgqlc.types.Field('pokemon_v2_pokeathlonstat_bool_exp', graphql_name='pokemon_v2_pokeathlonstat')


class pokemon_v2_naturepokeathlonstat_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'max_change', 'nature_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    max_change = sgqlc.types.Field(order_by, graphql_name='max_change')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')
    pokeathlon_stat_id = sgqlc.types.Field(order_by, graphql_name='pokeathlon_stat_id')


class pokemon_v2_naturepokeathlonstat_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'max_change', 'nature_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    max_change = sgqlc.types.Field(order_by, graphql_name='max_change')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')
    pokeathlon_stat_id = sgqlc.types.Field(order_by, graphql_name='pokeathlon_stat_id')


class pokemon_v2_naturepokeathlonstat_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'max_change', 'nature_id', 'pokeathlon_stat_id', 'pokemon_v2_nature', 'pokemon_v2_pokeathlonstat')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    max_change = sgqlc.types.Field(order_by, graphql_name='max_change')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')
    pokeathlon_stat_id = sgqlc.types.Field(order_by, graphql_name='pokeathlon_stat_id')
    pokemon_v2_nature = sgqlc.types.Field(pokemon_v2_nature_order_by, graphql_name='pokemon_v2_nature')
    pokemon_v2_pokeathlonstat = sgqlc.types.Field('pokemon_v2_pokeathlonstat_order_by', graphql_name='pokemon_v2_pokeathlonstat')


class pokemon_v2_naturepokeathlonstat_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'max_change', 'nature_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    max_change = sgqlc.types.Field(order_by, graphql_name='max_change')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')
    pokeathlon_stat_id = sgqlc.types.Field(order_by, graphql_name='pokeathlon_stat_id')


class pokemon_v2_naturepokeathlonstat_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'max_change', 'nature_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    max_change = sgqlc.types.Field(order_by, graphql_name='max_change')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')
    pokeathlon_stat_id = sgqlc.types.Field(order_by, graphql_name='pokeathlon_stat_id')


class pokemon_v2_naturepokeathlonstat_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'max_change', 'nature_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    max_change = sgqlc.types.Field(order_by, graphql_name='max_change')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')
    pokeathlon_stat_id = sgqlc.types.Field(order_by, graphql_name='pokeathlon_stat_id')


class pokemon_v2_naturepokeathlonstat_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'max_change', 'nature_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    max_change = sgqlc.types.Field(order_by, graphql_name='max_change')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')
    pokeathlon_stat_id = sgqlc.types.Field(order_by, graphql_name='pokeathlon_stat_id')


class pokemon_v2_naturepokeathlonstat_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'max_change', 'nature_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    max_change = sgqlc.types.Field(order_by, graphql_name='max_change')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')
    pokeathlon_stat_id = sgqlc.types.Field(order_by, graphql_name='pokeathlon_stat_id')


class pokemon_v2_naturepokeathlonstat_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'max_change', 'nature_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    max_change = sgqlc.types.Field(order_by, graphql_name='max_change')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')
    pokeathlon_stat_id = sgqlc.types.Field(order_by, graphql_name='pokeathlon_stat_id')


class pokemon_v2_naturepokeathlonstat_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'max_change', 'nature_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    max_change = sgqlc.types.Field(order_by, graphql_name='max_change')
    nature_id = sgqlc.types.Field(order_by, graphql_name='nature_id')
    pokeathlon_stat_id = sgqlc.types.Field(order_by, graphql_name='pokeathlon_stat_id')


class pokemon_v2_palpark_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_palpark_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_palpark_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_palpark_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_palpark_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_palpark_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_palpark_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_palpark_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_palpark_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_palpark_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_palpark_variance_order_by', graphql_name='variance')


class pokemon_v2_palpark_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'rate')
    base_score = sgqlc.types.Field(order_by, graphql_name='base_score')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pal_park_area_id = sgqlc.types.Field(order_by, graphql_name='pal_park_area_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    rate = sgqlc.types.Field(order_by, graphql_name='rate')


class pokemon_v2_palpark_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'pokemon_v2_palparkarea', 'pokemon_v2_pokemonspecy', 'rate')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_palpark_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_palpark_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_palpark_bool_exp')), graphql_name='_or')
    base_score = sgqlc.types.Field(Int_comparison_exp, graphql_name='base_score')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pal_park_area_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pal_park_area_id')
    pokemon_species_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_species_id')
    pokemon_v2_palparkarea = sgqlc.types.Field('pokemon_v2_palparkarea_bool_exp', graphql_name='pokemon_v2_palparkarea')
    pokemon_v2_pokemonspecy = sgqlc.types.Field('pokemon_v2_pokemonspecies_bool_exp', graphql_name='pokemon_v2_pokemonspecy')
    rate = sgqlc.types.Field(Int_comparison_exp, graphql_name='rate')


class pokemon_v2_palpark_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'rate')
    base_score = sgqlc.types.Field(order_by, graphql_name='base_score')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pal_park_area_id = sgqlc.types.Field(order_by, graphql_name='pal_park_area_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    rate = sgqlc.types.Field(order_by, graphql_name='rate')


class pokemon_v2_palpark_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'rate')
    base_score = sgqlc.types.Field(order_by, graphql_name='base_score')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pal_park_area_id = sgqlc.types.Field(order_by, graphql_name='pal_park_area_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    rate = sgqlc.types.Field(order_by, graphql_name='rate')


class pokemon_v2_palpark_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'pokemon_v2_palparkarea', 'pokemon_v2_pokemonspecy', 'rate')
    base_score = sgqlc.types.Field(order_by, graphql_name='base_score')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pal_park_area_id = sgqlc.types.Field(order_by, graphql_name='pal_park_area_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    pokemon_v2_palparkarea = sgqlc.types.Field('pokemon_v2_palparkarea_order_by', graphql_name='pokemon_v2_palparkarea')
    pokemon_v2_pokemonspecy = sgqlc.types.Field('pokemon_v2_pokemonspecies_order_by', graphql_name='pokemon_v2_pokemonspecy')
    rate = sgqlc.types.Field(order_by, graphql_name='rate')


class pokemon_v2_palpark_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'rate')
    base_score = sgqlc.types.Field(order_by, graphql_name='base_score')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pal_park_area_id = sgqlc.types.Field(order_by, graphql_name='pal_park_area_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    rate = sgqlc.types.Field(order_by, graphql_name='rate')


class pokemon_v2_palpark_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'rate')
    base_score = sgqlc.types.Field(order_by, graphql_name='base_score')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pal_park_area_id = sgqlc.types.Field(order_by, graphql_name='pal_park_area_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    rate = sgqlc.types.Field(order_by, graphql_name='rate')


class pokemon_v2_palpark_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'rate')
    base_score = sgqlc.types.Field(order_by, graphql_name='base_score')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pal_park_area_id = sgqlc.types.Field(order_by, graphql_name='pal_park_area_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    rate = sgqlc.types.Field(order_by, graphql_name='rate')


class pokemon_v2_palpark_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'rate')
    base_score = sgqlc.types.Field(order_by, graphql_name='base_score')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pal_park_area_id = sgqlc.types.Field(order_by, graphql_name='pal_park_area_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    rate = sgqlc.types.Field(order_by, graphql_name='rate')


class pokemon_v2_palpark_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'rate')
    base_score = sgqlc.types.Field(order_by, graphql_name='base_score')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pal_park_area_id = sgqlc.types.Field(order_by, graphql_name='pal_park_area_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    rate = sgqlc.types.Field(order_by, graphql_name='rate')


class pokemon_v2_palpark_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'rate')
    base_score = sgqlc.types.Field(order_by, graphql_name='base_score')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pal_park_area_id = sgqlc.types.Field(order_by, graphql_name='pal_park_area_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    rate = sgqlc.types.Field(order_by, graphql_name='rate')


class pokemon_v2_palpark_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'rate')
    base_score = sgqlc.types.Field(order_by, graphql_name='base_score')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pal_park_area_id = sgqlc.types.Field(order_by, graphql_name='pal_park_area_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    rate = sgqlc.types.Field(order_by, graphql_name='rate')


class pokemon_v2_palparkarea_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_palparkareanames', 'pokemon_v2_palparks')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_palparkarea_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_palparkarea_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_palparkarea_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_palparkareanames = sgqlc.types.Field('pokemon_v2_palparkareaname_bool_exp', graphql_name='pokemon_v2_palparkareanames')
    pokemon_v2_palparks = sgqlc.types.Field(pokemon_v2_palpark_bool_exp, graphql_name='pokemon_v2_palparks')


class pokemon_v2_palparkarea_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_palparkareanames_aggregate', 'pokemon_v2_palparks_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_palparkareanames_aggregate = sgqlc.types.Field('pokemon_v2_palparkareaname_aggregate_order_by', graphql_name='pokemon_v2_palparkareanames_aggregate')
    pokemon_v2_palparks_aggregate = sgqlc.types.Field(pokemon_v2_palpark_aggregate_order_by, graphql_name='pokemon_v2_palparks_aggregate')


class pokemon_v2_palparkareaname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_palparkareaname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_palparkareaname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_palparkareaname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_palparkareaname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_palparkareaname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_palparkareaname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_palparkareaname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_palparkareaname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_palparkareaname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_palparkareaname_variance_order_by', graphql_name='variance')


class pokemon_v2_palparkareaname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pal_park_area_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pal_park_area_id = sgqlc.types.Field(order_by, graphql_name='pal_park_area_id')


class pokemon_v2_palparkareaname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'language_id', 'name', 'pal_park_area_id', 'pokemon_v2_language', 'pokemon_v2_palparkarea')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_palparkareaname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_palparkareaname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_palparkareaname_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pal_park_area_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pal_park_area_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_palparkarea = sgqlc.types.Field(pokemon_v2_palparkarea_bool_exp, graphql_name='pokemon_v2_palparkarea')


class pokemon_v2_palparkareaname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pal_park_area_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pal_park_area_id = sgqlc.types.Field(order_by, graphql_name='pal_park_area_id')


class pokemon_v2_palparkareaname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pal_park_area_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pal_park_area_id = sgqlc.types.Field(order_by, graphql_name='pal_park_area_id')


class pokemon_v2_palparkareaname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pal_park_area_id', 'pokemon_v2_language', 'pokemon_v2_palparkarea')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pal_park_area_id = sgqlc.types.Field(order_by, graphql_name='pal_park_area_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_palparkarea = sgqlc.types.Field(pokemon_v2_palparkarea_order_by, graphql_name='pokemon_v2_palparkarea')


class pokemon_v2_palparkareaname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pal_park_area_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pal_park_area_id = sgqlc.types.Field(order_by, graphql_name='pal_park_area_id')


class pokemon_v2_palparkareaname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pal_park_area_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pal_park_area_id = sgqlc.types.Field(order_by, graphql_name='pal_park_area_id')


class pokemon_v2_palparkareaname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pal_park_area_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pal_park_area_id = sgqlc.types.Field(order_by, graphql_name='pal_park_area_id')


class pokemon_v2_palparkareaname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pal_park_area_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pal_park_area_id = sgqlc.types.Field(order_by, graphql_name='pal_park_area_id')


class pokemon_v2_palparkareaname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pal_park_area_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pal_park_area_id = sgqlc.types.Field(order_by, graphql_name='pal_park_area_id')


class pokemon_v2_palparkareaname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pal_park_area_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pal_park_area_id = sgqlc.types.Field(order_by, graphql_name='pal_park_area_id')


class pokemon_v2_palparkareaname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pal_park_area_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pal_park_area_id = sgqlc.types.Field(order_by, graphql_name='pal_park_area_id')


class pokemon_v2_pokeathlonstat_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_naturepokeathlonstats', 'pokemon_v2_pokeathlonstatnames')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokeathlonstat_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokeathlonstat_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokeathlonstat_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_naturepokeathlonstats = sgqlc.types.Field(pokemon_v2_naturepokeathlonstat_bool_exp, graphql_name='pokemon_v2_naturepokeathlonstats')
    pokemon_v2_pokeathlonstatnames = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_bool_exp', graphql_name='pokemon_v2_pokeathlonstatnames')


class pokemon_v2_pokeathlonstat_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_naturepokeathlonstats_aggregate', 'pokemon_v2_pokeathlonstatnames_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_naturepokeathlonstats_aggregate = sgqlc.types.Field(pokemon_v2_naturepokeathlonstat_aggregate_order_by, graphql_name='pokemon_v2_naturepokeathlonstats_aggregate')
    pokemon_v2_pokeathlonstatnames_aggregate = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_aggregate_order_by', graphql_name='pokemon_v2_pokeathlonstatnames_aggregate')


class pokemon_v2_pokeathlonstatname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_variance_order_by', graphql_name='variance')


class pokemon_v2_pokeathlonstatname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokeathlon_stat_id = sgqlc.types.Field(order_by, graphql_name='pokeathlon_stat_id')


class pokemon_v2_pokeathlonstatname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'language_id', 'name', 'pokeathlon_stat_id', 'pokemon_v2_language', 'pokemon_v2_pokeathlonstat')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokeathlonstatname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokeathlonstatname_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokeathlon_stat_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokeathlon_stat_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_pokeathlonstat = sgqlc.types.Field(pokemon_v2_pokeathlonstat_bool_exp, graphql_name='pokemon_v2_pokeathlonstat')


class pokemon_v2_pokeathlonstatname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokeathlon_stat_id = sgqlc.types.Field(order_by, graphql_name='pokeathlon_stat_id')


class pokemon_v2_pokeathlonstatname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokeathlon_stat_id = sgqlc.types.Field(order_by, graphql_name='pokeathlon_stat_id')


class pokemon_v2_pokeathlonstatname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokeathlon_stat_id', 'pokemon_v2_language', 'pokemon_v2_pokeathlonstat')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokeathlon_stat_id = sgqlc.types.Field(order_by, graphql_name='pokeathlon_stat_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_pokeathlonstat = sgqlc.types.Field(pokemon_v2_pokeathlonstat_order_by, graphql_name='pokemon_v2_pokeathlonstat')


class pokemon_v2_pokeathlonstatname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokeathlon_stat_id = sgqlc.types.Field(order_by, graphql_name='pokeathlon_stat_id')


class pokemon_v2_pokeathlonstatname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokeathlon_stat_id = sgqlc.types.Field(order_by, graphql_name='pokeathlon_stat_id')


class pokemon_v2_pokeathlonstatname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokeathlon_stat_id = sgqlc.types.Field(order_by, graphql_name='pokeathlon_stat_id')


class pokemon_v2_pokeathlonstatname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokeathlon_stat_id = sgqlc.types.Field(order_by, graphql_name='pokeathlon_stat_id')


class pokemon_v2_pokeathlonstatname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokeathlon_stat_id = sgqlc.types.Field(order_by, graphql_name='pokeathlon_stat_id')


class pokemon_v2_pokeathlonstatname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokeathlon_stat_id = sgqlc.types.Field(order_by, graphql_name='pokeathlon_stat_id')


class pokemon_v2_pokeathlonstatname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokeathlon_stat_id = sgqlc.types.Field(order_by, graphql_name='pokeathlon_stat_id')


class pokemon_v2_pokedex_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokedex_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokedex_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokedex_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokedex_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokedex_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokedex_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokedex_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokedex_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokedex_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokedex_variance_order_by', graphql_name='variance')


class pokemon_v2_pokedex_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_pokedex_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'is_main_series', 'name', 'pokemon_v2_pokedexdescriptions', 'pokemon_v2_pokedexnames', 'pokemon_v2_pokedexversiongroups', 'pokemon_v2_pokemondexnumbers', 'pokemon_v2_region', 'region_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokedex_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokedex_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokedex_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    is_main_series = sgqlc.types.Field(Boolean_comparison_exp, graphql_name='is_main_series')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_pokedexdescriptions = sgqlc.types.Field('pokemon_v2_pokedexdescription_bool_exp', graphql_name='pokemon_v2_pokedexdescriptions')
    pokemon_v2_pokedexnames = sgqlc.types.Field('pokemon_v2_pokedexname_bool_exp', graphql_name='pokemon_v2_pokedexnames')
    pokemon_v2_pokedexversiongroups = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_bool_exp', graphql_name='pokemon_v2_pokedexversiongroups')
    pokemon_v2_pokemondexnumbers = sgqlc.types.Field('pokemon_v2_pokemondexnumber_bool_exp', graphql_name='pokemon_v2_pokemondexnumbers')
    pokemon_v2_region = sgqlc.types.Field('pokemon_v2_region_bool_exp', graphql_name='pokemon_v2_region')
    region_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='region_id')


class pokemon_v2_pokedex_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_pokedex_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_pokedex_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'is_main_series', 'name', 'pokemon_v2_pokedexdescriptions_aggregate', 'pokemon_v2_pokedexnames_aggregate', 'pokemon_v2_pokedexversiongroups_aggregate', 'pokemon_v2_pokemondexnumbers_aggregate', 'pokemon_v2_region', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    is_main_series = sgqlc.types.Field(order_by, graphql_name='is_main_series')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_pokedexdescriptions_aggregate = sgqlc.types.Field('pokemon_v2_pokedexdescription_aggregate_order_by', graphql_name='pokemon_v2_pokedexdescriptions_aggregate')
    pokemon_v2_pokedexnames_aggregate = sgqlc.types.Field('pokemon_v2_pokedexname_aggregate_order_by', graphql_name='pokemon_v2_pokedexnames_aggregate')
    pokemon_v2_pokedexversiongroups_aggregate = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_aggregate_order_by', graphql_name='pokemon_v2_pokedexversiongroups_aggregate')
    pokemon_v2_pokemondexnumbers_aggregate = sgqlc.types.Field('pokemon_v2_pokemondexnumber_aggregate_order_by', graphql_name='pokemon_v2_pokemondexnumbers_aggregate')
    pokemon_v2_region = sgqlc.types.Field('pokemon_v2_region_order_by', graphql_name='pokemon_v2_region')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_pokedex_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_pokedex_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_pokedex_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_pokedex_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_pokedex_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_pokedex_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_pokedex_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_pokedexdescription_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokedexdescription_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokedexdescription_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokedexdescription_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokedexdescription_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokedexdescription_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokedexdescription_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokedexdescription_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokedexdescription_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokedexdescription_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokedexdescription_variance_order_by', graphql_name='variance')


class pokemon_v2_pokedexdescription_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')


class pokemon_v2_pokedexdescription_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'description', 'id', 'language_id', 'pokedex_id', 'pokemon_v2_language', 'pokemon_v2_pokedex')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokedexdescription_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokedexdescription_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokedexdescription_bool_exp')), graphql_name='_or')
    description = sgqlc.types.Field(String_comparison_exp, graphql_name='description')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokedex_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_pokedex = sgqlc.types.Field(pokemon_v2_pokedex_bool_exp, graphql_name='pokemon_v2_pokedex')


class pokemon_v2_pokedexdescription_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'pokedex_id')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')


class pokemon_v2_pokedexdescription_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'pokedex_id')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')


class pokemon_v2_pokedexdescription_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'pokedex_id', 'pokemon_v2_language', 'pokemon_v2_pokedex')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_pokedex = sgqlc.types.Field(pokemon_v2_pokedex_order_by, graphql_name='pokemon_v2_pokedex')


class pokemon_v2_pokedexdescription_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')


class pokemon_v2_pokedexdescription_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')


class pokemon_v2_pokedexdescription_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')


class pokemon_v2_pokedexdescription_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')


class pokemon_v2_pokedexdescription_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')


class pokemon_v2_pokedexdescription_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')


class pokemon_v2_pokedexdescription_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')


class pokemon_v2_pokedexname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokedexname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokedexname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokedexname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokedexname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokedexname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokedexname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokedexname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokedexname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokedexname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokedexname_variance_order_by', graphql_name='variance')


class pokemon_v2_pokedexname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')


class pokemon_v2_pokedexname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'language_id', 'name', 'pokedex_id', 'pokemon_v2_language', 'pokemon_v2_pokedex')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokedexname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokedexname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokedexname_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokedex_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokedex_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_pokedex = sgqlc.types.Field(pokemon_v2_pokedex_bool_exp, graphql_name='pokemon_v2_pokedex')


class pokemon_v2_pokedexname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokedex_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')


class pokemon_v2_pokedexname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokedex_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')


class pokemon_v2_pokedexname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokedex_id', 'pokemon_v2_language', 'pokemon_v2_pokedex')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_pokedex = sgqlc.types.Field(pokemon_v2_pokedex_order_by, graphql_name='pokemon_v2_pokedex')


class pokemon_v2_pokedexname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')


class pokemon_v2_pokedexname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')


class pokemon_v2_pokedexname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')


class pokemon_v2_pokedexname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')


class pokemon_v2_pokedexname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')


class pokemon_v2_pokedexname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')


class pokemon_v2_pokedexname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')


class pokemon_v2_pokedexversiongroup_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_variance_order_by', graphql_name='variance')


class pokemon_v2_pokedexversiongroup_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokedexversiongroup_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'pokedex_id', 'pokemon_v2_pokedex', 'pokemon_v2_versiongroup', 'version_group_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokedexversiongroup_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokedexversiongroup_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokedex_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokedex_id')
    pokemon_v2_pokedex = sgqlc.types.Field(pokemon_v2_pokedex_bool_exp, graphql_name='pokemon_v2_pokedex')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_bool_exp', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='version_group_id')


class pokemon_v2_pokedexversiongroup_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokedexversiongroup_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokedexversiongroup_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokemon_v2_pokedex', 'pokemon_v2_versiongroup', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    pokemon_v2_pokedex = sgqlc.types.Field(pokemon_v2_pokedex_order_by, graphql_name='pokemon_v2_pokedex')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_order_by', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokedexversiongroup_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokedexversiongroup_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokedexversiongroup_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokedexversiongroup_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokedexversiongroup_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokedexversiongroup_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokedexversiongroup_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokemon_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemon_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemon_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemon_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemon_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemon_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemon_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemon_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemon_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemon_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemon_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemon_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_experience', 'height', 'id', 'order', 'pokemon_species_id', 'weight')
    base_experience = sgqlc.types.Field(order_by, graphql_name='base_experience')
    height = sgqlc.types.Field(order_by, graphql_name='height')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    weight = sgqlc.types.Field(order_by, graphql_name='weight')


class pokemon_v2_pokemon_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'base_experience', 'height', 'id', 'is_default', 'name', 'order', 'pokemon_species_id', 'pokemon_v2_encounters', 'pokemon_v2_pokemonabilities', 'pokemon_v2_pokemonforms', 'pokemon_v2_pokemongameindices', 'pokemon_v2_pokemonitems', 'pokemon_v2_pokemonmoves', 'pokemon_v2_pokemonspecy', 'pokemon_v2_pokemonsprites', 'pokemon_v2_pokemonstats', 'pokemon_v2_pokemontypepasts', 'pokemon_v2_pokemontypes', 'weight')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemon_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemon_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemon_bool_exp')), graphql_name='_or')
    base_experience = sgqlc.types.Field(Int_comparison_exp, graphql_name='base_experience')
    height = sgqlc.types.Field(Int_comparison_exp, graphql_name='height')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    is_default = sgqlc.types.Field(Boolean_comparison_exp, graphql_name='is_default')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    order = sgqlc.types.Field(Int_comparison_exp, graphql_name='order')
    pokemon_species_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_species_id')
    pokemon_v2_encounters = sgqlc.types.Field(pokemon_v2_encounter_bool_exp, graphql_name='pokemon_v2_encounters')
    pokemon_v2_pokemonabilities = sgqlc.types.Field('pokemon_v2_pokemonability_bool_exp', graphql_name='pokemon_v2_pokemonabilities')
    pokemon_v2_pokemonforms = sgqlc.types.Field('pokemon_v2_pokemonform_bool_exp', graphql_name='pokemon_v2_pokemonforms')
    pokemon_v2_pokemongameindices = sgqlc.types.Field('pokemon_v2_pokemongameindex_bool_exp', graphql_name='pokemon_v2_pokemongameindices')
    pokemon_v2_pokemonitems = sgqlc.types.Field('pokemon_v2_pokemonitem_bool_exp', graphql_name='pokemon_v2_pokemonitems')
    pokemon_v2_pokemonmoves = sgqlc.types.Field('pokemon_v2_pokemonmove_bool_exp', graphql_name='pokemon_v2_pokemonmoves')
    pokemon_v2_pokemonspecy = sgqlc.types.Field('pokemon_v2_pokemonspecies_bool_exp', graphql_name='pokemon_v2_pokemonspecy')
    pokemon_v2_pokemonsprites = sgqlc.types.Field('pokemon_v2_pokemonsprites_bool_exp', graphql_name='pokemon_v2_pokemonsprites')
    pokemon_v2_pokemonstats = sgqlc.types.Field('pokemon_v2_pokemonstat_bool_exp', graphql_name='pokemon_v2_pokemonstats')
    pokemon_v2_pokemontypepasts = sgqlc.types.Field('pokemon_v2_pokemontypepast_bool_exp', graphql_name='pokemon_v2_pokemontypepasts')
    pokemon_v2_pokemontypes = sgqlc.types.Field('pokemon_v2_pokemontype_bool_exp', graphql_name='pokemon_v2_pokemontypes')
    weight = sgqlc.types.Field(Int_comparison_exp, graphql_name='weight')


class pokemon_v2_pokemon_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_experience', 'height', 'id', 'name', 'order', 'pokemon_species_id', 'weight')
    base_experience = sgqlc.types.Field(order_by, graphql_name='base_experience')
    height = sgqlc.types.Field(order_by, graphql_name='height')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    weight = sgqlc.types.Field(order_by, graphql_name='weight')


class pokemon_v2_pokemon_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_experience', 'height', 'id', 'name', 'order', 'pokemon_species_id', 'weight')
    base_experience = sgqlc.types.Field(order_by, graphql_name='base_experience')
    height = sgqlc.types.Field(order_by, graphql_name='height')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    weight = sgqlc.types.Field(order_by, graphql_name='weight')


class pokemon_v2_pokemon_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_experience', 'height', 'id', 'is_default', 'name', 'order', 'pokemon_species_id', 'pokemon_v2_encounters_aggregate', 'pokemon_v2_pokemonabilities_aggregate', 'pokemon_v2_pokemonforms_aggregate', 'pokemon_v2_pokemongameindices_aggregate', 'pokemon_v2_pokemonitems_aggregate', 'pokemon_v2_pokemonmoves_aggregate', 'pokemon_v2_pokemonspecy', 'pokemon_v2_pokemonsprites_aggregate', 'pokemon_v2_pokemonstats_aggregate', 'pokemon_v2_pokemontypepasts_aggregate', 'pokemon_v2_pokemontypes_aggregate', 'weight')
    base_experience = sgqlc.types.Field(order_by, graphql_name='base_experience')
    height = sgqlc.types.Field(order_by, graphql_name='height')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    is_default = sgqlc.types.Field(order_by, graphql_name='is_default')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    pokemon_v2_encounters_aggregate = sgqlc.types.Field(pokemon_v2_encounter_aggregate_order_by, graphql_name='pokemon_v2_encounters_aggregate')
    pokemon_v2_pokemonabilities_aggregate = sgqlc.types.Field('pokemon_v2_pokemonability_aggregate_order_by', graphql_name='pokemon_v2_pokemonabilities_aggregate')
    pokemon_v2_pokemonforms_aggregate = sgqlc.types.Field('pokemon_v2_pokemonform_aggregate_order_by', graphql_name='pokemon_v2_pokemonforms_aggregate')
    pokemon_v2_pokemongameindices_aggregate = sgqlc.types.Field('pokemon_v2_pokemongameindex_aggregate_order_by', graphql_name='pokemon_v2_pokemongameindices_aggregate')
    pokemon_v2_pokemonitems_aggregate = sgqlc.types.Field('pokemon_v2_pokemonitem_aggregate_order_by', graphql_name='pokemon_v2_pokemonitems_aggregate')
    pokemon_v2_pokemonmoves_aggregate = sgqlc.types.Field('pokemon_v2_pokemonmove_aggregate_order_by', graphql_name='pokemon_v2_pokemonmoves_aggregate')
    pokemon_v2_pokemonspecy = sgqlc.types.Field('pokemon_v2_pokemonspecies_order_by', graphql_name='pokemon_v2_pokemonspecy')
    pokemon_v2_pokemonsprites_aggregate = sgqlc.types.Field('pokemon_v2_pokemonsprites_aggregate_order_by', graphql_name='pokemon_v2_pokemonsprites_aggregate')
    pokemon_v2_pokemonstats_aggregate = sgqlc.types.Field('pokemon_v2_pokemonstat_aggregate_order_by', graphql_name='pokemon_v2_pokemonstats_aggregate')
    pokemon_v2_pokemontypepasts_aggregate = sgqlc.types.Field('pokemon_v2_pokemontypepast_aggregate_order_by', graphql_name='pokemon_v2_pokemontypepasts_aggregate')
    pokemon_v2_pokemontypes_aggregate = sgqlc.types.Field('pokemon_v2_pokemontype_aggregate_order_by', graphql_name='pokemon_v2_pokemontypes_aggregate')
    weight = sgqlc.types.Field(order_by, graphql_name='weight')


class pokemon_v2_pokemon_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_experience', 'height', 'id', 'order', 'pokemon_species_id', 'weight')
    base_experience = sgqlc.types.Field(order_by, graphql_name='base_experience')
    height = sgqlc.types.Field(order_by, graphql_name='height')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    weight = sgqlc.types.Field(order_by, graphql_name='weight')


class pokemon_v2_pokemon_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_experience', 'height', 'id', 'order', 'pokemon_species_id', 'weight')
    base_experience = sgqlc.types.Field(order_by, graphql_name='base_experience')
    height = sgqlc.types.Field(order_by, graphql_name='height')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    weight = sgqlc.types.Field(order_by, graphql_name='weight')


class pokemon_v2_pokemon_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_experience', 'height', 'id', 'order', 'pokemon_species_id', 'weight')
    base_experience = sgqlc.types.Field(order_by, graphql_name='base_experience')
    height = sgqlc.types.Field(order_by, graphql_name='height')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    weight = sgqlc.types.Field(order_by, graphql_name='weight')


class pokemon_v2_pokemon_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_experience', 'height', 'id', 'order', 'pokemon_species_id', 'weight')
    base_experience = sgqlc.types.Field(order_by, graphql_name='base_experience')
    height = sgqlc.types.Field(order_by, graphql_name='height')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    weight = sgqlc.types.Field(order_by, graphql_name='weight')


class pokemon_v2_pokemon_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_experience', 'height', 'id', 'order', 'pokemon_species_id', 'weight')
    base_experience = sgqlc.types.Field(order_by, graphql_name='base_experience')
    height = sgqlc.types.Field(order_by, graphql_name='height')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    weight = sgqlc.types.Field(order_by, graphql_name='weight')


class pokemon_v2_pokemon_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_experience', 'height', 'id', 'order', 'pokemon_species_id', 'weight')
    base_experience = sgqlc.types.Field(order_by, graphql_name='base_experience')
    height = sgqlc.types.Field(order_by, graphql_name='height')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    weight = sgqlc.types.Field(order_by, graphql_name='weight')


class pokemon_v2_pokemon_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_experience', 'height', 'id', 'order', 'pokemon_species_id', 'weight')
    base_experience = sgqlc.types.Field(order_by, graphql_name='base_experience')
    height = sgqlc.types.Field(order_by, graphql_name='height')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    weight = sgqlc.types.Field(order_by, graphql_name='weight')


class pokemon_v2_pokemonability_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonability_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemonability_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonability_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonability_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonability_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonability_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonability_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonability_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonability_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonability_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemonability_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'pokemon_id', 'slot')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')


class pokemon_v2_pokemonability_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'ability_id', 'id', 'is_hidden', 'pokemon_id', 'pokemon_v2_ability', 'pokemon_v2_pokemon', 'slot')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonability_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemonability_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonability_bool_exp')), graphql_name='_or')
    ability_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='ability_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    is_hidden = sgqlc.types.Field(Boolean_comparison_exp, graphql_name='is_hidden')
    pokemon_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_id')
    pokemon_v2_ability = sgqlc.types.Field(pokemon_v2_ability_bool_exp, graphql_name='pokemon_v2_ability')
    pokemon_v2_pokemon = sgqlc.types.Field(pokemon_v2_pokemon_bool_exp, graphql_name='pokemon_v2_pokemon')
    slot = sgqlc.types.Field(Int_comparison_exp, graphql_name='slot')


class pokemon_v2_pokemonability_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'pokemon_id', 'slot')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')


class pokemon_v2_pokemonability_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'pokemon_id', 'slot')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')


class pokemon_v2_pokemonability_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'is_hidden', 'pokemon_id', 'pokemon_v2_ability', 'pokemon_v2_pokemon', 'slot')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    is_hidden = sgqlc.types.Field(order_by, graphql_name='is_hidden')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    pokemon_v2_ability = sgqlc.types.Field(pokemon_v2_ability_order_by, graphql_name='pokemon_v2_ability')
    pokemon_v2_pokemon = sgqlc.types.Field(pokemon_v2_pokemon_order_by, graphql_name='pokemon_v2_pokemon')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')


class pokemon_v2_pokemonability_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'pokemon_id', 'slot')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')


class pokemon_v2_pokemonability_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'pokemon_id', 'slot')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')


class pokemon_v2_pokemonability_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'pokemon_id', 'slot')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')


class pokemon_v2_pokemonability_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'pokemon_id', 'slot')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')


class pokemon_v2_pokemonability_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'pokemon_id', 'slot')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')


class pokemon_v2_pokemonability_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'pokemon_id', 'slot')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')


class pokemon_v2_pokemonability_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'pokemon_id', 'slot')
    ability_id = sgqlc.types.Field(order_by, graphql_name='ability_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')


class pokemon_v2_pokemoncolor_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_pokemoncolornames', 'pokemon_v2_pokemonspecies')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemoncolor_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemoncolor_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemoncolor_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_pokemoncolornames = sgqlc.types.Field('pokemon_v2_pokemoncolorname_bool_exp', graphql_name='pokemon_v2_pokemoncolornames')
    pokemon_v2_pokemonspecies = sgqlc.types.Field('pokemon_v2_pokemonspecies_bool_exp', graphql_name='pokemon_v2_pokemonspecies')


class pokemon_v2_pokemoncolor_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_pokemoncolornames_aggregate', 'pokemon_v2_pokemonspecies_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_pokemoncolornames_aggregate = sgqlc.types.Field('pokemon_v2_pokemoncolorname_aggregate_order_by', graphql_name='pokemon_v2_pokemoncolornames_aggregate')
    pokemon_v2_pokemonspecies_aggregate = sgqlc.types.Field('pokemon_v2_pokemonspecies_aggregate_order_by', graphql_name='pokemon_v2_pokemonspecies_aggregate')


class pokemon_v2_pokemoncolorname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemoncolorname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemoncolorname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemoncolorname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemoncolorname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemoncolorname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemoncolorname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemoncolorname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemoncolorname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemoncolorname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemoncolorname_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemoncolorname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_color_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_color_id = sgqlc.types.Field(order_by, graphql_name='pokemon_color_id')


class pokemon_v2_pokemoncolorname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'language_id', 'name', 'pokemon_color_id', 'pokemon_v2_language', 'pokemon_v2_pokemoncolor')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemoncolorname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemoncolorname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemoncolorname_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_color_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_color_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_pokemoncolor = sgqlc.types.Field(pokemon_v2_pokemoncolor_bool_exp, graphql_name='pokemon_v2_pokemoncolor')


class pokemon_v2_pokemoncolorname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_color_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_color_id = sgqlc.types.Field(order_by, graphql_name='pokemon_color_id')


class pokemon_v2_pokemoncolorname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_color_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_color_id = sgqlc.types.Field(order_by, graphql_name='pokemon_color_id')


class pokemon_v2_pokemoncolorname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_color_id', 'pokemon_v2_language', 'pokemon_v2_pokemoncolor')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_color_id = sgqlc.types.Field(order_by, graphql_name='pokemon_color_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_pokemoncolor = sgqlc.types.Field(pokemon_v2_pokemoncolor_order_by, graphql_name='pokemon_v2_pokemoncolor')


class pokemon_v2_pokemoncolorname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_color_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_color_id = sgqlc.types.Field(order_by, graphql_name='pokemon_color_id')


class pokemon_v2_pokemoncolorname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_color_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_color_id = sgqlc.types.Field(order_by, graphql_name='pokemon_color_id')


class pokemon_v2_pokemoncolorname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_color_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_color_id = sgqlc.types.Field(order_by, graphql_name='pokemon_color_id')


class pokemon_v2_pokemoncolorname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_color_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_color_id = sgqlc.types.Field(order_by, graphql_name='pokemon_color_id')


class pokemon_v2_pokemoncolorname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_color_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_color_id = sgqlc.types.Field(order_by, graphql_name='pokemon_color_id')


class pokemon_v2_pokemoncolorname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_color_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_color_id = sgqlc.types.Field(order_by, graphql_name='pokemon_color_id')


class pokemon_v2_pokemoncolorname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_color_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_color_id = sgqlc.types.Field(order_by, graphql_name='pokemon_color_id')


class pokemon_v2_pokemondexnumber_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemondexnumber_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemondexnumber_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemondexnumber_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemondexnumber_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemondexnumber_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemondexnumber_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemondexnumber_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemondexnumber_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemondexnumber_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemondexnumber_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemondexnumber_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    pokedex_number = sgqlc.types.Field(order_by, graphql_name='pokedex_number')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemondexnumber_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id', 'pokemon_v2_pokedex', 'pokemon_v2_pokemonspecy')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemondexnumber_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemondexnumber_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemondexnumber_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokedex_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokedex_id')
    pokedex_number = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokedex_number')
    pokemon_species_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_species_id')
    pokemon_v2_pokedex = sgqlc.types.Field(pokemon_v2_pokedex_bool_exp, graphql_name='pokemon_v2_pokedex')
    pokemon_v2_pokemonspecy = sgqlc.types.Field('pokemon_v2_pokemonspecies_bool_exp', graphql_name='pokemon_v2_pokemonspecy')


class pokemon_v2_pokemondexnumber_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    pokedex_number = sgqlc.types.Field(order_by, graphql_name='pokedex_number')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemondexnumber_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    pokedex_number = sgqlc.types.Field(order_by, graphql_name='pokedex_number')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemondexnumber_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id', 'pokemon_v2_pokedex', 'pokemon_v2_pokemonspecy')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    pokedex_number = sgqlc.types.Field(order_by, graphql_name='pokedex_number')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    pokemon_v2_pokedex = sgqlc.types.Field(pokemon_v2_pokedex_order_by, graphql_name='pokemon_v2_pokedex')
    pokemon_v2_pokemonspecy = sgqlc.types.Field('pokemon_v2_pokemonspecies_order_by', graphql_name='pokemon_v2_pokemonspecy')


class pokemon_v2_pokemondexnumber_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    pokedex_number = sgqlc.types.Field(order_by, graphql_name='pokedex_number')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemondexnumber_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    pokedex_number = sgqlc.types.Field(order_by, graphql_name='pokedex_number')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemondexnumber_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    pokedex_number = sgqlc.types.Field(order_by, graphql_name='pokedex_number')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemondexnumber_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    pokedex_number = sgqlc.types.Field(order_by, graphql_name='pokedex_number')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemondexnumber_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    pokedex_number = sgqlc.types.Field(order_by, graphql_name='pokedex_number')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemondexnumber_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    pokedex_number = sgqlc.types.Field(order_by, graphql_name='pokedex_number')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemondexnumber_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokedex_id = sgqlc.types.Field(order_by, graphql_name='pokedex_id')
    pokedex_number = sgqlc.types.Field(order_by, graphql_name='pokedex_number')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonegggroup_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonegggroup_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemonegggroup_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonegggroup_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonegggroup_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonegggroup_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonegggroup_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonegggroup_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonegggroup_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonegggroup_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonegggroup_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemonegggroup_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'pokemon_species_id')
    egg_group_id = sgqlc.types.Field(order_by, graphql_name='egg_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonegggroup_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'egg_group_id', 'id', 'pokemon_species_id', 'pokemon_v2_egggroup', 'pokemon_v2_pokemonspecy')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonegggroup_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemonegggroup_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonegggroup_bool_exp')), graphql_name='_or')
    egg_group_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='egg_group_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokemon_species_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_species_id')
    pokemon_v2_egggroup = sgqlc.types.Field(pokemon_v2_egggroup_bool_exp, graphql_name='pokemon_v2_egggroup')
    pokemon_v2_pokemonspecy = sgqlc.types.Field('pokemon_v2_pokemonspecies_bool_exp', graphql_name='pokemon_v2_pokemonspecy')


class pokemon_v2_pokemonegggroup_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'pokemon_species_id')
    egg_group_id = sgqlc.types.Field(order_by, graphql_name='egg_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonegggroup_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'pokemon_species_id')
    egg_group_id = sgqlc.types.Field(order_by, graphql_name='egg_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonegggroup_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'pokemon_species_id', 'pokemon_v2_egggroup', 'pokemon_v2_pokemonspecy')
    egg_group_id = sgqlc.types.Field(order_by, graphql_name='egg_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    pokemon_v2_egggroup = sgqlc.types.Field(pokemon_v2_egggroup_order_by, graphql_name='pokemon_v2_egggroup')
    pokemon_v2_pokemonspecy = sgqlc.types.Field('pokemon_v2_pokemonspecies_order_by', graphql_name='pokemon_v2_pokemonspecy')


class pokemon_v2_pokemonegggroup_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'pokemon_species_id')
    egg_group_id = sgqlc.types.Field(order_by, graphql_name='egg_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonegggroup_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'pokemon_species_id')
    egg_group_id = sgqlc.types.Field(order_by, graphql_name='egg_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonegggroup_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'pokemon_species_id')
    egg_group_id = sgqlc.types.Field(order_by, graphql_name='egg_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonegggroup_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'pokemon_species_id')
    egg_group_id = sgqlc.types.Field(order_by, graphql_name='egg_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonegggroup_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'pokemon_species_id')
    egg_group_id = sgqlc.types.Field(order_by, graphql_name='egg_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonegggroup_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'pokemon_species_id')
    egg_group_id = sgqlc.types.Field(order_by, graphql_name='egg_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonegggroup_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'pokemon_species_id')
    egg_group_id = sgqlc.types.Field(order_by, graphql_name='egg_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonevolution_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonevolution_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemonevolution_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonevolution_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonevolution_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonevolution_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonevolution_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonevolution_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonevolution_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonevolution_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonevolution_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemonevolution_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'party_species_id', 'party_type_id', 'relative_physical_stats', 'trade_species_id')
    evolution_item_id = sgqlc.types.Field(order_by, graphql_name='evolution_item_id')
    evolution_trigger_id = sgqlc.types.Field(order_by, graphql_name='evolution_trigger_id')
    evolved_species_id = sgqlc.types.Field(order_by, graphql_name='evolved_species_id')
    gender_id = sgqlc.types.Field(order_by, graphql_name='gender_id')
    held_item_id = sgqlc.types.Field(order_by, graphql_name='held_item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    known_move_id = sgqlc.types.Field(order_by, graphql_name='known_move_id')
    known_move_type_id = sgqlc.types.Field(order_by, graphql_name='known_move_type_id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')
    min_affection = sgqlc.types.Field(order_by, graphql_name='min_affection')
    min_beauty = sgqlc.types.Field(order_by, graphql_name='min_beauty')
    min_happiness = sgqlc.types.Field(order_by, graphql_name='min_happiness')
    min_level = sgqlc.types.Field(order_by, graphql_name='min_level')
    party_species_id = sgqlc.types.Field(order_by, graphql_name='party_species_id')
    party_type_id = sgqlc.types.Field(order_by, graphql_name='party_type_id')
    relative_physical_stats = sgqlc.types.Field(order_by, graphql_name='relative_physical_stats')
    trade_species_id = sgqlc.types.Field(order_by, graphql_name='trade_species_id')


class pokemon_v2_pokemonevolution_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'needs_overworld_rain', 'party_species_id', 'party_type_id', 'pokemon_v2_item_by_held_item_id', 'pokemon_v2_pokemonspecy_by_party_species_id', 'pokemon_v2_pokemonspecy_by_trade_species_id', 'pokemon_v2_type_by_party_type_id', 'pokemon_v2_evolutiontrigger', 'pokemon_v2_gender', 'pokemon_v2_item', 'pokemon_v2_location', 'pokemon_v2_move', 'pokemon_v2_pokemonspecy', 'pokemon_v2_type', 'relative_physical_stats', 'time_of_day', 'trade_species_id', 'turn_upside_down')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonevolution_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemonevolution_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonevolution_bool_exp')), graphql_name='_or')
    evolution_item_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='evolution_item_id')
    evolution_trigger_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='evolution_trigger_id')
    evolved_species_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='evolved_species_id')
    gender_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='gender_id')
    held_item_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='held_item_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    known_move_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='known_move_id')
    known_move_type_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='known_move_type_id')
    location_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='location_id')
    min_affection = sgqlc.types.Field(Int_comparison_exp, graphql_name='min_affection')
    min_beauty = sgqlc.types.Field(Int_comparison_exp, graphql_name='min_beauty')
    min_happiness = sgqlc.types.Field(Int_comparison_exp, graphql_name='min_happiness')
    min_level = sgqlc.types.Field(Int_comparison_exp, graphql_name='min_level')
    needs_overworld_rain = sgqlc.types.Field(Boolean_comparison_exp, graphql_name='needs_overworld_rain')
    party_species_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='party_species_id')
    party_type_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='party_type_id')
    pokemon_v2_item_by_held_item_id = sgqlc.types.Field(pokemon_v2_item_bool_exp, graphql_name='pokemonV2ItemByHeldItemId')
    pokemon_v2_pokemonspecy_by_party_species_id = sgqlc.types.Field('pokemon_v2_pokemonspecies_bool_exp', graphql_name='pokemonV2PokemonspecyByPartySpeciesId')
    pokemon_v2_pokemonspecy_by_trade_species_id = sgqlc.types.Field('pokemon_v2_pokemonspecies_bool_exp', graphql_name='pokemonV2PokemonspecyByTradeSpeciesId')
    pokemon_v2_type_by_party_type_id = sgqlc.types.Field('pokemon_v2_type_bool_exp', graphql_name='pokemonV2TypeByPartyTypeId')
    pokemon_v2_evolutiontrigger = sgqlc.types.Field(pokemon_v2_evolutiontrigger_bool_exp, graphql_name='pokemon_v2_evolutiontrigger')
    pokemon_v2_gender = sgqlc.types.Field(pokemon_v2_gender_bool_exp, graphql_name='pokemon_v2_gender')
    pokemon_v2_item = sgqlc.types.Field(pokemon_v2_item_bool_exp, graphql_name='pokemon_v2_item')
    pokemon_v2_location = sgqlc.types.Field(pokemon_v2_location_bool_exp, graphql_name='pokemon_v2_location')
    pokemon_v2_move = sgqlc.types.Field(pokemon_v2_move_bool_exp, graphql_name='pokemon_v2_move')
    pokemon_v2_pokemonspecy = sgqlc.types.Field('pokemon_v2_pokemonspecies_bool_exp', graphql_name='pokemon_v2_pokemonspecy')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type_bool_exp', graphql_name='pokemon_v2_type')
    relative_physical_stats = sgqlc.types.Field(Int_comparison_exp, graphql_name='relative_physical_stats')
    time_of_day = sgqlc.types.Field(String_comparison_exp, graphql_name='time_of_day')
    trade_species_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='trade_species_id')
    turn_upside_down = sgqlc.types.Field(Boolean_comparison_exp, graphql_name='turn_upside_down')


class pokemon_v2_pokemonevolution_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'party_species_id', 'party_type_id', 'relative_physical_stats', 'time_of_day', 'trade_species_id')
    evolution_item_id = sgqlc.types.Field(order_by, graphql_name='evolution_item_id')
    evolution_trigger_id = sgqlc.types.Field(order_by, graphql_name='evolution_trigger_id')
    evolved_species_id = sgqlc.types.Field(order_by, graphql_name='evolved_species_id')
    gender_id = sgqlc.types.Field(order_by, graphql_name='gender_id')
    held_item_id = sgqlc.types.Field(order_by, graphql_name='held_item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    known_move_id = sgqlc.types.Field(order_by, graphql_name='known_move_id')
    known_move_type_id = sgqlc.types.Field(order_by, graphql_name='known_move_type_id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')
    min_affection = sgqlc.types.Field(order_by, graphql_name='min_affection')
    min_beauty = sgqlc.types.Field(order_by, graphql_name='min_beauty')
    min_happiness = sgqlc.types.Field(order_by, graphql_name='min_happiness')
    min_level = sgqlc.types.Field(order_by, graphql_name='min_level')
    party_species_id = sgqlc.types.Field(order_by, graphql_name='party_species_id')
    party_type_id = sgqlc.types.Field(order_by, graphql_name='party_type_id')
    relative_physical_stats = sgqlc.types.Field(order_by, graphql_name='relative_physical_stats')
    time_of_day = sgqlc.types.Field(order_by, graphql_name='time_of_day')
    trade_species_id = sgqlc.types.Field(order_by, graphql_name='trade_species_id')


class pokemon_v2_pokemonevolution_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'party_species_id', 'party_type_id', 'relative_physical_stats', 'time_of_day', 'trade_species_id')
    evolution_item_id = sgqlc.types.Field(order_by, graphql_name='evolution_item_id')
    evolution_trigger_id = sgqlc.types.Field(order_by, graphql_name='evolution_trigger_id')
    evolved_species_id = sgqlc.types.Field(order_by, graphql_name='evolved_species_id')
    gender_id = sgqlc.types.Field(order_by, graphql_name='gender_id')
    held_item_id = sgqlc.types.Field(order_by, graphql_name='held_item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    known_move_id = sgqlc.types.Field(order_by, graphql_name='known_move_id')
    known_move_type_id = sgqlc.types.Field(order_by, graphql_name='known_move_type_id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')
    min_affection = sgqlc.types.Field(order_by, graphql_name='min_affection')
    min_beauty = sgqlc.types.Field(order_by, graphql_name='min_beauty')
    min_happiness = sgqlc.types.Field(order_by, graphql_name='min_happiness')
    min_level = sgqlc.types.Field(order_by, graphql_name='min_level')
    party_species_id = sgqlc.types.Field(order_by, graphql_name='party_species_id')
    party_type_id = sgqlc.types.Field(order_by, graphql_name='party_type_id')
    relative_physical_stats = sgqlc.types.Field(order_by, graphql_name='relative_physical_stats')
    time_of_day = sgqlc.types.Field(order_by, graphql_name='time_of_day')
    trade_species_id = sgqlc.types.Field(order_by, graphql_name='trade_species_id')


class pokemon_v2_pokemonevolution_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'needs_overworld_rain', 'party_species_id', 'party_type_id', 'pokemon_v2_item_by_held_item_id', 'pokemon_v2_pokemonspecy_by_party_species_id', 'pokemon_v2_pokemonspecy_by_trade_species_id', 'pokemon_v2_type_by_party_type_id', 'pokemon_v2_evolutiontrigger', 'pokemon_v2_gender', 'pokemon_v2_item', 'pokemon_v2_location', 'pokemon_v2_move', 'pokemon_v2_pokemonspecy', 'pokemon_v2_type', 'relative_physical_stats', 'time_of_day', 'trade_species_id', 'turn_upside_down')
    evolution_item_id = sgqlc.types.Field(order_by, graphql_name='evolution_item_id')
    evolution_trigger_id = sgqlc.types.Field(order_by, graphql_name='evolution_trigger_id')
    evolved_species_id = sgqlc.types.Field(order_by, graphql_name='evolved_species_id')
    gender_id = sgqlc.types.Field(order_by, graphql_name='gender_id')
    held_item_id = sgqlc.types.Field(order_by, graphql_name='held_item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    known_move_id = sgqlc.types.Field(order_by, graphql_name='known_move_id')
    known_move_type_id = sgqlc.types.Field(order_by, graphql_name='known_move_type_id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')
    min_affection = sgqlc.types.Field(order_by, graphql_name='min_affection')
    min_beauty = sgqlc.types.Field(order_by, graphql_name='min_beauty')
    min_happiness = sgqlc.types.Field(order_by, graphql_name='min_happiness')
    min_level = sgqlc.types.Field(order_by, graphql_name='min_level')
    needs_overworld_rain = sgqlc.types.Field(order_by, graphql_name='needs_overworld_rain')
    party_species_id = sgqlc.types.Field(order_by, graphql_name='party_species_id')
    party_type_id = sgqlc.types.Field(order_by, graphql_name='party_type_id')
    pokemon_v2_item_by_held_item_id = sgqlc.types.Field(pokemon_v2_item_order_by, graphql_name='pokemonV2ItemByHeldItemId')
    pokemon_v2_pokemonspecy_by_party_species_id = sgqlc.types.Field('pokemon_v2_pokemonspecies_order_by', graphql_name='pokemonV2PokemonspecyByPartySpeciesId')
    pokemon_v2_pokemonspecy_by_trade_species_id = sgqlc.types.Field('pokemon_v2_pokemonspecies_order_by', graphql_name='pokemonV2PokemonspecyByTradeSpeciesId')
    pokemon_v2_type_by_party_type_id = sgqlc.types.Field('pokemon_v2_type_order_by', graphql_name='pokemonV2TypeByPartyTypeId')
    pokemon_v2_evolutiontrigger = sgqlc.types.Field(pokemon_v2_evolutiontrigger_order_by, graphql_name='pokemon_v2_evolutiontrigger')
    pokemon_v2_gender = sgqlc.types.Field(pokemon_v2_gender_order_by, graphql_name='pokemon_v2_gender')
    pokemon_v2_item = sgqlc.types.Field(pokemon_v2_item_order_by, graphql_name='pokemon_v2_item')
    pokemon_v2_location = sgqlc.types.Field(pokemon_v2_location_order_by, graphql_name='pokemon_v2_location')
    pokemon_v2_move = sgqlc.types.Field(pokemon_v2_move_order_by, graphql_name='pokemon_v2_move')
    pokemon_v2_pokemonspecy = sgqlc.types.Field('pokemon_v2_pokemonspecies_order_by', graphql_name='pokemon_v2_pokemonspecy')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type_order_by', graphql_name='pokemon_v2_type')
    relative_physical_stats = sgqlc.types.Field(order_by, graphql_name='relative_physical_stats')
    time_of_day = sgqlc.types.Field(order_by, graphql_name='time_of_day')
    trade_species_id = sgqlc.types.Field(order_by, graphql_name='trade_species_id')
    turn_upside_down = sgqlc.types.Field(order_by, graphql_name='turn_upside_down')


class pokemon_v2_pokemonevolution_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'party_species_id', 'party_type_id', 'relative_physical_stats', 'trade_species_id')
    evolution_item_id = sgqlc.types.Field(order_by, graphql_name='evolution_item_id')
    evolution_trigger_id = sgqlc.types.Field(order_by, graphql_name='evolution_trigger_id')
    evolved_species_id = sgqlc.types.Field(order_by, graphql_name='evolved_species_id')
    gender_id = sgqlc.types.Field(order_by, graphql_name='gender_id')
    held_item_id = sgqlc.types.Field(order_by, graphql_name='held_item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    known_move_id = sgqlc.types.Field(order_by, graphql_name='known_move_id')
    known_move_type_id = sgqlc.types.Field(order_by, graphql_name='known_move_type_id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')
    min_affection = sgqlc.types.Field(order_by, graphql_name='min_affection')
    min_beauty = sgqlc.types.Field(order_by, graphql_name='min_beauty')
    min_happiness = sgqlc.types.Field(order_by, graphql_name='min_happiness')
    min_level = sgqlc.types.Field(order_by, graphql_name='min_level')
    party_species_id = sgqlc.types.Field(order_by, graphql_name='party_species_id')
    party_type_id = sgqlc.types.Field(order_by, graphql_name='party_type_id')
    relative_physical_stats = sgqlc.types.Field(order_by, graphql_name='relative_physical_stats')
    trade_species_id = sgqlc.types.Field(order_by, graphql_name='trade_species_id')


class pokemon_v2_pokemonevolution_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'party_species_id', 'party_type_id', 'relative_physical_stats', 'trade_species_id')
    evolution_item_id = sgqlc.types.Field(order_by, graphql_name='evolution_item_id')
    evolution_trigger_id = sgqlc.types.Field(order_by, graphql_name='evolution_trigger_id')
    evolved_species_id = sgqlc.types.Field(order_by, graphql_name='evolved_species_id')
    gender_id = sgqlc.types.Field(order_by, graphql_name='gender_id')
    held_item_id = sgqlc.types.Field(order_by, graphql_name='held_item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    known_move_id = sgqlc.types.Field(order_by, graphql_name='known_move_id')
    known_move_type_id = sgqlc.types.Field(order_by, graphql_name='known_move_type_id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')
    min_affection = sgqlc.types.Field(order_by, graphql_name='min_affection')
    min_beauty = sgqlc.types.Field(order_by, graphql_name='min_beauty')
    min_happiness = sgqlc.types.Field(order_by, graphql_name='min_happiness')
    min_level = sgqlc.types.Field(order_by, graphql_name='min_level')
    party_species_id = sgqlc.types.Field(order_by, graphql_name='party_species_id')
    party_type_id = sgqlc.types.Field(order_by, graphql_name='party_type_id')
    relative_physical_stats = sgqlc.types.Field(order_by, graphql_name='relative_physical_stats')
    trade_species_id = sgqlc.types.Field(order_by, graphql_name='trade_species_id')


class pokemon_v2_pokemonevolution_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'party_species_id', 'party_type_id', 'relative_physical_stats', 'trade_species_id')
    evolution_item_id = sgqlc.types.Field(order_by, graphql_name='evolution_item_id')
    evolution_trigger_id = sgqlc.types.Field(order_by, graphql_name='evolution_trigger_id')
    evolved_species_id = sgqlc.types.Field(order_by, graphql_name='evolved_species_id')
    gender_id = sgqlc.types.Field(order_by, graphql_name='gender_id')
    held_item_id = sgqlc.types.Field(order_by, graphql_name='held_item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    known_move_id = sgqlc.types.Field(order_by, graphql_name='known_move_id')
    known_move_type_id = sgqlc.types.Field(order_by, graphql_name='known_move_type_id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')
    min_affection = sgqlc.types.Field(order_by, graphql_name='min_affection')
    min_beauty = sgqlc.types.Field(order_by, graphql_name='min_beauty')
    min_happiness = sgqlc.types.Field(order_by, graphql_name='min_happiness')
    min_level = sgqlc.types.Field(order_by, graphql_name='min_level')
    party_species_id = sgqlc.types.Field(order_by, graphql_name='party_species_id')
    party_type_id = sgqlc.types.Field(order_by, graphql_name='party_type_id')
    relative_physical_stats = sgqlc.types.Field(order_by, graphql_name='relative_physical_stats')
    trade_species_id = sgqlc.types.Field(order_by, graphql_name='trade_species_id')


class pokemon_v2_pokemonevolution_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'party_species_id', 'party_type_id', 'relative_physical_stats', 'trade_species_id')
    evolution_item_id = sgqlc.types.Field(order_by, graphql_name='evolution_item_id')
    evolution_trigger_id = sgqlc.types.Field(order_by, graphql_name='evolution_trigger_id')
    evolved_species_id = sgqlc.types.Field(order_by, graphql_name='evolved_species_id')
    gender_id = sgqlc.types.Field(order_by, graphql_name='gender_id')
    held_item_id = sgqlc.types.Field(order_by, graphql_name='held_item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    known_move_id = sgqlc.types.Field(order_by, graphql_name='known_move_id')
    known_move_type_id = sgqlc.types.Field(order_by, graphql_name='known_move_type_id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')
    min_affection = sgqlc.types.Field(order_by, graphql_name='min_affection')
    min_beauty = sgqlc.types.Field(order_by, graphql_name='min_beauty')
    min_happiness = sgqlc.types.Field(order_by, graphql_name='min_happiness')
    min_level = sgqlc.types.Field(order_by, graphql_name='min_level')
    party_species_id = sgqlc.types.Field(order_by, graphql_name='party_species_id')
    party_type_id = sgqlc.types.Field(order_by, graphql_name='party_type_id')
    relative_physical_stats = sgqlc.types.Field(order_by, graphql_name='relative_physical_stats')
    trade_species_id = sgqlc.types.Field(order_by, graphql_name='trade_species_id')


class pokemon_v2_pokemonevolution_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'party_species_id', 'party_type_id', 'relative_physical_stats', 'trade_species_id')
    evolution_item_id = sgqlc.types.Field(order_by, graphql_name='evolution_item_id')
    evolution_trigger_id = sgqlc.types.Field(order_by, graphql_name='evolution_trigger_id')
    evolved_species_id = sgqlc.types.Field(order_by, graphql_name='evolved_species_id')
    gender_id = sgqlc.types.Field(order_by, graphql_name='gender_id')
    held_item_id = sgqlc.types.Field(order_by, graphql_name='held_item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    known_move_id = sgqlc.types.Field(order_by, graphql_name='known_move_id')
    known_move_type_id = sgqlc.types.Field(order_by, graphql_name='known_move_type_id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')
    min_affection = sgqlc.types.Field(order_by, graphql_name='min_affection')
    min_beauty = sgqlc.types.Field(order_by, graphql_name='min_beauty')
    min_happiness = sgqlc.types.Field(order_by, graphql_name='min_happiness')
    min_level = sgqlc.types.Field(order_by, graphql_name='min_level')
    party_species_id = sgqlc.types.Field(order_by, graphql_name='party_species_id')
    party_type_id = sgqlc.types.Field(order_by, graphql_name='party_type_id')
    relative_physical_stats = sgqlc.types.Field(order_by, graphql_name='relative_physical_stats')
    trade_species_id = sgqlc.types.Field(order_by, graphql_name='trade_species_id')


class pokemon_v2_pokemonevolution_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'party_species_id', 'party_type_id', 'relative_physical_stats', 'trade_species_id')
    evolution_item_id = sgqlc.types.Field(order_by, graphql_name='evolution_item_id')
    evolution_trigger_id = sgqlc.types.Field(order_by, graphql_name='evolution_trigger_id')
    evolved_species_id = sgqlc.types.Field(order_by, graphql_name='evolved_species_id')
    gender_id = sgqlc.types.Field(order_by, graphql_name='gender_id')
    held_item_id = sgqlc.types.Field(order_by, graphql_name='held_item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    known_move_id = sgqlc.types.Field(order_by, graphql_name='known_move_id')
    known_move_type_id = sgqlc.types.Field(order_by, graphql_name='known_move_type_id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')
    min_affection = sgqlc.types.Field(order_by, graphql_name='min_affection')
    min_beauty = sgqlc.types.Field(order_by, graphql_name='min_beauty')
    min_happiness = sgqlc.types.Field(order_by, graphql_name='min_happiness')
    min_level = sgqlc.types.Field(order_by, graphql_name='min_level')
    party_species_id = sgqlc.types.Field(order_by, graphql_name='party_species_id')
    party_type_id = sgqlc.types.Field(order_by, graphql_name='party_type_id')
    relative_physical_stats = sgqlc.types.Field(order_by, graphql_name='relative_physical_stats')
    trade_species_id = sgqlc.types.Field(order_by, graphql_name='trade_species_id')


class pokemon_v2_pokemonevolution_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'party_species_id', 'party_type_id', 'relative_physical_stats', 'trade_species_id')
    evolution_item_id = sgqlc.types.Field(order_by, graphql_name='evolution_item_id')
    evolution_trigger_id = sgqlc.types.Field(order_by, graphql_name='evolution_trigger_id')
    evolved_species_id = sgqlc.types.Field(order_by, graphql_name='evolved_species_id')
    gender_id = sgqlc.types.Field(order_by, graphql_name='gender_id')
    held_item_id = sgqlc.types.Field(order_by, graphql_name='held_item_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    known_move_id = sgqlc.types.Field(order_by, graphql_name='known_move_id')
    known_move_type_id = sgqlc.types.Field(order_by, graphql_name='known_move_type_id')
    location_id = sgqlc.types.Field(order_by, graphql_name='location_id')
    min_affection = sgqlc.types.Field(order_by, graphql_name='min_affection')
    min_beauty = sgqlc.types.Field(order_by, graphql_name='min_beauty')
    min_happiness = sgqlc.types.Field(order_by, graphql_name='min_happiness')
    min_level = sgqlc.types.Field(order_by, graphql_name='min_level')
    party_species_id = sgqlc.types.Field(order_by, graphql_name='party_species_id')
    party_type_id = sgqlc.types.Field(order_by, graphql_name='party_type_id')
    relative_physical_stats = sgqlc.types.Field(order_by, graphql_name='relative_physical_stats')
    trade_species_id = sgqlc.types.Field(order_by, graphql_name='trade_species_id')


class pokemon_v2_pokemonform_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonform_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemonform_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonform_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonform_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonform_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonform_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonform_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonform_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonform_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonform_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemonform_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('form_order', 'id', 'order', 'pokemon_id', 'version_group_id')
    form_order = sgqlc.types.Field(order_by, graphql_name='form_order')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokemonform_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'form_name', 'form_order', 'id', 'is_battle_only', 'is_default', 'is_mega', 'name', 'order', 'pokemon_id', 'pokemon_v2_pokemon', 'pokemon_v2_pokemonformgenerations', 'pokemon_v2_pokemonformnames', 'pokemon_v2_pokemonformsprites', 'pokemon_v2_pokemonformtypes', 'pokemon_v2_versiongroup', 'version_group_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonform_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemonform_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonform_bool_exp')), graphql_name='_or')
    form_name = sgqlc.types.Field(String_comparison_exp, graphql_name='form_name')
    form_order = sgqlc.types.Field(Int_comparison_exp, graphql_name='form_order')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    is_battle_only = sgqlc.types.Field(Boolean_comparison_exp, graphql_name='is_battle_only')
    is_default = sgqlc.types.Field(Boolean_comparison_exp, graphql_name='is_default')
    is_mega = sgqlc.types.Field(Boolean_comparison_exp, graphql_name='is_mega')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    order = sgqlc.types.Field(Int_comparison_exp, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_id')
    pokemon_v2_pokemon = sgqlc.types.Field(pokemon_v2_pokemon_bool_exp, graphql_name='pokemon_v2_pokemon')
    pokemon_v2_pokemonformgenerations = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_bool_exp', graphql_name='pokemon_v2_pokemonformgenerations')
    pokemon_v2_pokemonformnames = sgqlc.types.Field('pokemon_v2_pokemonformname_bool_exp', graphql_name='pokemon_v2_pokemonformnames')
    pokemon_v2_pokemonformsprites = sgqlc.types.Field('pokemon_v2_pokemonformsprites_bool_exp', graphql_name='pokemon_v2_pokemonformsprites')
    pokemon_v2_pokemonformtypes = sgqlc.types.Field('pokemon_v2_pokemonformtype_bool_exp', graphql_name='pokemon_v2_pokemonformtypes')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_bool_exp', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='version_group_id')


class pokemon_v2_pokemonform_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('form_name', 'form_order', 'id', 'name', 'order', 'pokemon_id', 'version_group_id')
    form_name = sgqlc.types.Field(order_by, graphql_name='form_name')
    form_order = sgqlc.types.Field(order_by, graphql_name='form_order')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokemonform_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('form_name', 'form_order', 'id', 'name', 'order', 'pokemon_id', 'version_group_id')
    form_name = sgqlc.types.Field(order_by, graphql_name='form_name')
    form_order = sgqlc.types.Field(order_by, graphql_name='form_order')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokemonform_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('form_name', 'form_order', 'id', 'is_battle_only', 'is_default', 'is_mega', 'name', 'order', 'pokemon_id', 'pokemon_v2_pokemon', 'pokemon_v2_pokemonformgenerations_aggregate', 'pokemon_v2_pokemonformnames_aggregate', 'pokemon_v2_pokemonformsprites_aggregate', 'pokemon_v2_pokemonformtypes_aggregate', 'pokemon_v2_versiongroup', 'version_group_id')
    form_name = sgqlc.types.Field(order_by, graphql_name='form_name')
    form_order = sgqlc.types.Field(order_by, graphql_name='form_order')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    is_battle_only = sgqlc.types.Field(order_by, graphql_name='is_battle_only')
    is_default = sgqlc.types.Field(order_by, graphql_name='is_default')
    is_mega = sgqlc.types.Field(order_by, graphql_name='is_mega')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    pokemon_v2_pokemon = sgqlc.types.Field(pokemon_v2_pokemon_order_by, graphql_name='pokemon_v2_pokemon')
    pokemon_v2_pokemonformgenerations_aggregate = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_aggregate_order_by', graphql_name='pokemon_v2_pokemonformgenerations_aggregate')
    pokemon_v2_pokemonformnames_aggregate = sgqlc.types.Field('pokemon_v2_pokemonformname_aggregate_order_by', graphql_name='pokemon_v2_pokemonformnames_aggregate')
    pokemon_v2_pokemonformsprites_aggregate = sgqlc.types.Field('pokemon_v2_pokemonformsprites_aggregate_order_by', graphql_name='pokemon_v2_pokemonformsprites_aggregate')
    pokemon_v2_pokemonformtypes_aggregate = sgqlc.types.Field('pokemon_v2_pokemonformtype_aggregate_order_by', graphql_name='pokemon_v2_pokemonformtypes_aggregate')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_order_by', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokemonform_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('form_order', 'id', 'order', 'pokemon_id', 'version_group_id')
    form_order = sgqlc.types.Field(order_by, graphql_name='form_order')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokemonform_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('form_order', 'id', 'order', 'pokemon_id', 'version_group_id')
    form_order = sgqlc.types.Field(order_by, graphql_name='form_order')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokemonform_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('form_order', 'id', 'order', 'pokemon_id', 'version_group_id')
    form_order = sgqlc.types.Field(order_by, graphql_name='form_order')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokemonform_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('form_order', 'id', 'order', 'pokemon_id', 'version_group_id')
    form_order = sgqlc.types.Field(order_by, graphql_name='form_order')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokemonform_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('form_order', 'id', 'order', 'pokemon_id', 'version_group_id')
    form_order = sgqlc.types.Field(order_by, graphql_name='form_order')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokemonform_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('form_order', 'id', 'order', 'pokemon_id', 'version_group_id')
    form_order = sgqlc.types.Field(order_by, graphql_name='form_order')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokemonform_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('form_order', 'id', 'order', 'pokemon_id', 'version_group_id')
    form_order = sgqlc.types.Field(order_by, graphql_name='form_order')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokemonformgeneration_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemonformgeneration_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_form_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformgeneration_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'game_index', 'generation_id', 'id', 'pokemon_form_id', 'pokemon_v2_generation', 'pokemon_v2_pokemonform')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonformgeneration_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonformgeneration_bool_exp')), graphql_name='_or')
    game_index = sgqlc.types.Field(Int_comparison_exp, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='generation_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_form_id')
    pokemon_v2_generation = sgqlc.types.Field(pokemon_v2_generation_bool_exp, graphql_name='pokemon_v2_generation')
    pokemon_v2_pokemonform = sgqlc.types.Field(pokemon_v2_pokemonform_bool_exp, graphql_name='pokemon_v2_pokemonform')


class pokemon_v2_pokemonformgeneration_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_form_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformgeneration_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_form_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformgeneration_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_form_id', 'pokemon_v2_generation', 'pokemon_v2_pokemonform')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')
    pokemon_v2_generation = sgqlc.types.Field(pokemon_v2_generation_order_by, graphql_name='pokemon_v2_generation')
    pokemon_v2_pokemonform = sgqlc.types.Field(pokemon_v2_pokemonform_order_by, graphql_name='pokemon_v2_pokemonform')


class pokemon_v2_pokemonformgeneration_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_form_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformgeneration_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_form_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformgeneration_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_form_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformgeneration_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_form_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformgeneration_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_form_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformgeneration_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_form_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformgeneration_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_form_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonformname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemonformname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonformname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonformname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonformname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonformname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonformname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonformname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonformname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonformname_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemonformname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_form_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'language_id', 'name', 'pokemon_form_id', 'pokemon_name', 'pokemon_v2_language', 'pokemon_v2_pokemonform')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonformname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemonformname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonformname_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_form_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_form_id')
    pokemon_name = sgqlc.types.Field(String_comparison_exp, graphql_name='pokemon_name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_pokemonform = sgqlc.types.Field(pokemon_v2_pokemonform_bool_exp, graphql_name='pokemon_v2_pokemonform')


class pokemon_v2_pokemonformname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_form_id', 'pokemon_name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')
    pokemon_name = sgqlc.types.Field(order_by, graphql_name='pokemon_name')


class pokemon_v2_pokemonformname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_form_id', 'pokemon_name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')
    pokemon_name = sgqlc.types.Field(order_by, graphql_name='pokemon_name')


class pokemon_v2_pokemonformname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_form_id', 'pokemon_name', 'pokemon_v2_language', 'pokemon_v2_pokemonform')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')
    pokemon_name = sgqlc.types.Field(order_by, graphql_name='pokemon_name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_pokemonform = sgqlc.types.Field(pokemon_v2_pokemonform_order_by, graphql_name='pokemon_v2_pokemonform')


class pokemon_v2_pokemonformname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_form_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_form_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_form_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_form_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_form_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_form_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_form_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformsprites_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonformsprites_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemonformsprites_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonformsprites_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonformsprites_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonformsprites_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonformsprites_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonformsprites_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonformsprites_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonformsprites_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonformsprites_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemonformsprites_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformsprites_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'pokemon_form_id', 'pokemon_v2_pokemonform', 'sprites')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonformsprites_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemonformsprites_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonformsprites_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_form_id')
    pokemon_v2_pokemonform = sgqlc.types.Field(pokemon_v2_pokemonform_bool_exp, graphql_name='pokemon_v2_pokemonform')
    sprites = sgqlc.types.Field(String_comparison_exp, graphql_name='sprites')


class pokemon_v2_pokemonformsprites_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'sprites')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')
    sprites = sgqlc.types.Field(order_by, graphql_name='sprites')


class pokemon_v2_pokemonformsprites_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'sprites')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')
    sprites = sgqlc.types.Field(order_by, graphql_name='sprites')


class pokemon_v2_pokemonformsprites_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'pokemon_v2_pokemonform', 'sprites')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')
    pokemon_v2_pokemonform = sgqlc.types.Field(pokemon_v2_pokemonform_order_by, graphql_name='pokemon_v2_pokemonform')
    sprites = sgqlc.types.Field(order_by, graphql_name='sprites')


class pokemon_v2_pokemonformsprites_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformsprites_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformsprites_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformsprites_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformsprites_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformsprites_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformsprites_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformtype_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonformtype_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemonformtype_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonformtype_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonformtype_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonformtype_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonformtype_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonformtype_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonformtype_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonformtype_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonformtype_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemonformtype_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'slot', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemonformtype_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'pokemon_form_id', 'pokemon_v2_pokemonform', 'pokemon_v2_type', 'slot', 'type_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonformtype_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemonformtype_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonformtype_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_form_id')
    pokemon_v2_pokemonform = sgqlc.types.Field(pokemon_v2_pokemonform_bool_exp, graphql_name='pokemon_v2_pokemonform')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type_bool_exp', graphql_name='pokemon_v2_type')
    slot = sgqlc.types.Field(Int_comparison_exp, graphql_name='slot')
    type_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='type_id')


class pokemon_v2_pokemonformtype_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'slot', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemonformtype_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'slot', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemonformtype_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'pokemon_v2_pokemonform', 'pokemon_v2_type', 'slot', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')
    pokemon_v2_pokemonform = sgqlc.types.Field(pokemon_v2_pokemonform_order_by, graphql_name='pokemon_v2_pokemonform')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type_order_by', graphql_name='pokemon_v2_type')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemonformtype_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'slot', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemonformtype_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'slot', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemonformtype_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'slot', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemonformtype_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'slot', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemonformtype_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'slot', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemonformtype_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'slot', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemonformtype_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'slot', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(order_by, graphql_name='pokemon_form_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemongameindex_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemongameindex_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemongameindex_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemongameindex_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemongameindex_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemongameindex_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemongameindex_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemongameindex_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemongameindex_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemongameindex_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemongameindex_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemongameindex_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'pokemon_id', 'version_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemongameindex_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'game_index', 'id', 'pokemon_id', 'pokemon_v2_pokemon', 'pokemon_v2_version', 'version_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemongameindex_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemongameindex_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemongameindex_bool_exp')), graphql_name='_or')
    game_index = sgqlc.types.Field(Int_comparison_exp, graphql_name='game_index')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_id')
    pokemon_v2_pokemon = sgqlc.types.Field(pokemon_v2_pokemon_bool_exp, graphql_name='pokemon_v2_pokemon')
    pokemon_v2_version = sgqlc.types.Field('pokemon_v2_version_bool_exp', graphql_name='pokemon_v2_version')
    version_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='version_id')


class pokemon_v2_pokemongameindex_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'pokemon_id', 'version_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemongameindex_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'pokemon_id', 'version_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemongameindex_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'pokemon_id', 'pokemon_v2_pokemon', 'pokemon_v2_version', 'version_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    pokemon_v2_pokemon = sgqlc.types.Field(pokemon_v2_pokemon_order_by, graphql_name='pokemon_v2_pokemon')
    pokemon_v2_version = sgqlc.types.Field('pokemon_v2_version_order_by', graphql_name='pokemon_v2_version')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemongameindex_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'pokemon_id', 'version_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemongameindex_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'pokemon_id', 'version_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemongameindex_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'pokemon_id', 'version_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemongameindex_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'pokemon_id', 'version_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemongameindex_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'pokemon_id', 'version_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemongameindex_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'pokemon_id', 'version_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemongameindex_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'pokemon_id', 'version_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemonhabitat_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_pokemonhabitatnames', 'pokemon_v2_pokemonspecies')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonhabitat_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemonhabitat_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonhabitat_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_pokemonhabitatnames = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_bool_exp', graphql_name='pokemon_v2_pokemonhabitatnames')
    pokemon_v2_pokemonspecies = sgqlc.types.Field('pokemon_v2_pokemonspecies_bool_exp', graphql_name='pokemon_v2_pokemonspecies')


class pokemon_v2_pokemonhabitat_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_pokemonhabitatnames_aggregate', 'pokemon_v2_pokemonspecies_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_pokemonhabitatnames_aggregate = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_aggregate_order_by', graphql_name='pokemon_v2_pokemonhabitatnames_aggregate')
    pokemon_v2_pokemonspecies_aggregate = sgqlc.types.Field('pokemon_v2_pokemonspecies_aggregate_order_by', graphql_name='pokemon_v2_pokemonspecies_aggregate')


class pokemon_v2_pokemonhabitatname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemonhabitatname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_habitat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_habitat_id = sgqlc.types.Field(order_by, graphql_name='pokemon_habitat_id')


class pokemon_v2_pokemonhabitatname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'language_id', 'name', 'pokemon_habitat_id', 'pokemon_v2_language', 'pokemon_v2_pokemonhabitat')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonhabitatname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonhabitatname_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_habitat_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_habitat_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_pokemonhabitat = sgqlc.types.Field(pokemon_v2_pokemonhabitat_bool_exp, graphql_name='pokemon_v2_pokemonhabitat')


class pokemon_v2_pokemonhabitatname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_habitat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_habitat_id = sgqlc.types.Field(order_by, graphql_name='pokemon_habitat_id')


class pokemon_v2_pokemonhabitatname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_habitat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_habitat_id = sgqlc.types.Field(order_by, graphql_name='pokemon_habitat_id')


class pokemon_v2_pokemonhabitatname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_habitat_id', 'pokemon_v2_language', 'pokemon_v2_pokemonhabitat')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_habitat_id = sgqlc.types.Field(order_by, graphql_name='pokemon_habitat_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_pokemonhabitat = sgqlc.types.Field(pokemon_v2_pokemonhabitat_order_by, graphql_name='pokemon_v2_pokemonhabitat')


class pokemon_v2_pokemonhabitatname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_habitat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_habitat_id = sgqlc.types.Field(order_by, graphql_name='pokemon_habitat_id')


class pokemon_v2_pokemonhabitatname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_habitat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_habitat_id = sgqlc.types.Field(order_by, graphql_name='pokemon_habitat_id')


class pokemon_v2_pokemonhabitatname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_habitat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_habitat_id = sgqlc.types.Field(order_by, graphql_name='pokemon_habitat_id')


class pokemon_v2_pokemonhabitatname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_habitat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_habitat_id = sgqlc.types.Field(order_by, graphql_name='pokemon_habitat_id')


class pokemon_v2_pokemonhabitatname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_habitat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_habitat_id = sgqlc.types.Field(order_by, graphql_name='pokemon_habitat_id')


class pokemon_v2_pokemonhabitatname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_habitat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_habitat_id = sgqlc.types.Field(order_by, graphql_name='pokemon_habitat_id')


class pokemon_v2_pokemonhabitatname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_habitat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_habitat_id = sgqlc.types.Field(order_by, graphql_name='pokemon_habitat_id')


class pokemon_v2_pokemonitem_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonitem_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemonitem_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonitem_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonitem_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonitem_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonitem_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonitem_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonitem_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonitem_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonitem_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemonitem_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_id', 'rarity', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    rarity = sgqlc.types.Field(order_by, graphql_name='rarity')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemonitem_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'item_id', 'pokemon_id', 'pokemon_v2_item', 'pokemon_v2_pokemon', 'pokemon_v2_version', 'rarity', 'version_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonitem_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemonitem_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonitem_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    item_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='item_id')
    pokemon_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_id')
    pokemon_v2_item = sgqlc.types.Field(pokemon_v2_item_bool_exp, graphql_name='pokemon_v2_item')
    pokemon_v2_pokemon = sgqlc.types.Field(pokemon_v2_pokemon_bool_exp, graphql_name='pokemon_v2_pokemon')
    pokemon_v2_version = sgqlc.types.Field('pokemon_v2_version_bool_exp', graphql_name='pokemon_v2_version')
    rarity = sgqlc.types.Field(Int_comparison_exp, graphql_name='rarity')
    version_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='version_id')


class pokemon_v2_pokemonitem_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_id', 'rarity', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    rarity = sgqlc.types.Field(order_by, graphql_name='rarity')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemonitem_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_id', 'rarity', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    rarity = sgqlc.types.Field(order_by, graphql_name='rarity')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemonitem_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_id', 'pokemon_v2_item', 'pokemon_v2_pokemon', 'pokemon_v2_version', 'rarity', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    pokemon_v2_item = sgqlc.types.Field(pokemon_v2_item_order_by, graphql_name='pokemon_v2_item')
    pokemon_v2_pokemon = sgqlc.types.Field(pokemon_v2_pokemon_order_by, graphql_name='pokemon_v2_pokemon')
    pokemon_v2_version = sgqlc.types.Field('pokemon_v2_version_order_by', graphql_name='pokemon_v2_version')
    rarity = sgqlc.types.Field(order_by, graphql_name='rarity')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemonitem_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_id', 'rarity', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    rarity = sgqlc.types.Field(order_by, graphql_name='rarity')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemonitem_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_id', 'rarity', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    rarity = sgqlc.types.Field(order_by, graphql_name='rarity')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemonitem_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_id', 'rarity', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    rarity = sgqlc.types.Field(order_by, graphql_name='rarity')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemonitem_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_id', 'rarity', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    rarity = sgqlc.types.Field(order_by, graphql_name='rarity')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemonitem_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_id', 'rarity', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    rarity = sgqlc.types.Field(order_by, graphql_name='rarity')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemonitem_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_id', 'rarity', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    rarity = sgqlc.types.Field(order_by, graphql_name='rarity')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemonitem_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_id', 'rarity', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    item_id = sgqlc.types.Field(order_by, graphql_name='item_id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    rarity = sgqlc.types.Field(order_by, graphql_name='rarity')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemonmove_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonmove_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemonmove_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonmove_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonmove_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonmove_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonmove_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonmove_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonmove_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonmove_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonmove_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemonmove_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    level = sgqlc.types.Field(order_by, graphql_name='level')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokemonmove_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'pokemon_v2_move', 'pokemon_v2_movelearnmethod', 'pokemon_v2_pokemon', 'pokemon_v2_versiongroup', 'version_group_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonmove_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemonmove_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonmove_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    level = sgqlc.types.Field(Int_comparison_exp, graphql_name='level')
    move_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_id')
    move_learn_method_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_learn_method_id')
    order = sgqlc.types.Field(Int_comparison_exp, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_id')
    pokemon_v2_move = sgqlc.types.Field(pokemon_v2_move_bool_exp, graphql_name='pokemon_v2_move')
    pokemon_v2_movelearnmethod = sgqlc.types.Field(pokemon_v2_movelearnmethod_bool_exp, graphql_name='pokemon_v2_movelearnmethod')
    pokemon_v2_pokemon = sgqlc.types.Field(pokemon_v2_pokemon_bool_exp, graphql_name='pokemon_v2_pokemon')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_bool_exp', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='version_group_id')


class pokemon_v2_pokemonmove_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    level = sgqlc.types.Field(order_by, graphql_name='level')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokemonmove_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    level = sgqlc.types.Field(order_by, graphql_name='level')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokemonmove_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'pokemon_v2_move', 'pokemon_v2_movelearnmethod', 'pokemon_v2_pokemon', 'pokemon_v2_versiongroup', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    level = sgqlc.types.Field(order_by, graphql_name='level')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    pokemon_v2_move = sgqlc.types.Field(pokemon_v2_move_order_by, graphql_name='pokemon_v2_move')
    pokemon_v2_movelearnmethod = sgqlc.types.Field(pokemon_v2_movelearnmethod_order_by, graphql_name='pokemon_v2_movelearnmethod')
    pokemon_v2_pokemon = sgqlc.types.Field(pokemon_v2_pokemon_order_by, graphql_name='pokemon_v2_pokemon')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_order_by', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokemonmove_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    level = sgqlc.types.Field(order_by, graphql_name='level')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokemonmove_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    level = sgqlc.types.Field(order_by, graphql_name='level')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokemonmove_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    level = sgqlc.types.Field(order_by, graphql_name='level')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokemonmove_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    level = sgqlc.types.Field(order_by, graphql_name='level')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokemonmove_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    level = sgqlc.types.Field(order_by, graphql_name='level')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokemonmove_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    level = sgqlc.types.Field(order_by, graphql_name='level')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokemonmove_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    level = sgqlc.types.Field(order_by, graphql_name='level')
    move_id = sgqlc.types.Field(order_by, graphql_name='move_id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_pokemonshape_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_pokemonshapenames', 'pokemon_v2_pokemonspecies')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonshape_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemonshape_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonshape_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_pokemonshapenames = sgqlc.types.Field('pokemon_v2_pokemonshapename_bool_exp', graphql_name='pokemon_v2_pokemonshapenames')
    pokemon_v2_pokemonspecies = sgqlc.types.Field('pokemon_v2_pokemonspecies_bool_exp', graphql_name='pokemon_v2_pokemonspecies')


class pokemon_v2_pokemonshape_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_pokemonshapenames_aggregate', 'pokemon_v2_pokemonspecies_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_pokemonshapenames_aggregate = sgqlc.types.Field('pokemon_v2_pokemonshapename_aggregate_order_by', graphql_name='pokemon_v2_pokemonshapenames_aggregate')
    pokemon_v2_pokemonspecies_aggregate = sgqlc.types.Field('pokemon_v2_pokemonspecies_aggregate_order_by', graphql_name='pokemon_v2_pokemonspecies_aggregate')


class pokemon_v2_pokemonshapename_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonshapename_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemonshapename_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonshapename_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonshapename_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonshapename_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonshapename_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonshapename_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonshapename_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonshapename_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonshapename_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemonshapename_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_shape_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_shape_id = sgqlc.types.Field(order_by, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonshapename_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'awesome_name', 'id', 'language_id', 'name', 'pokemon_shape_id', 'pokemon_v2_language', 'pokemon_v2_pokemonshape')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonshapename_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemonshapename_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonshapename_bool_exp')), graphql_name='_or')
    awesome_name = sgqlc.types.Field(String_comparison_exp, graphql_name='awesome_name')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_shape_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_shape_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_pokemonshape = sgqlc.types.Field(pokemon_v2_pokemonshape_bool_exp, graphql_name='pokemon_v2_pokemonshape')


class pokemon_v2_pokemonshapename_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('awesome_name', 'id', 'language_id', 'name', 'pokemon_shape_id')
    awesome_name = sgqlc.types.Field(order_by, graphql_name='awesome_name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_shape_id = sgqlc.types.Field(order_by, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonshapename_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('awesome_name', 'id', 'language_id', 'name', 'pokemon_shape_id')
    awesome_name = sgqlc.types.Field(order_by, graphql_name='awesome_name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_shape_id = sgqlc.types.Field(order_by, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonshapename_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('awesome_name', 'id', 'language_id', 'name', 'pokemon_shape_id', 'pokemon_v2_language', 'pokemon_v2_pokemonshape')
    awesome_name = sgqlc.types.Field(order_by, graphql_name='awesome_name')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_shape_id = sgqlc.types.Field(order_by, graphql_name='pokemon_shape_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_pokemonshape = sgqlc.types.Field(pokemon_v2_pokemonshape_order_by, graphql_name='pokemon_v2_pokemonshape')


class pokemon_v2_pokemonshapename_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_shape_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_shape_id = sgqlc.types.Field(order_by, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonshapename_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_shape_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_shape_id = sgqlc.types.Field(order_by, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonshapename_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_shape_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_shape_id = sgqlc.types.Field(order_by, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonshapename_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_shape_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_shape_id = sgqlc.types.Field(order_by, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonshapename_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_shape_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_shape_id = sgqlc.types.Field(order_by, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonshapename_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_shape_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_shape_id = sgqlc.types.Field(order_by, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonshapename_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_shape_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_shape_id = sgqlc.types.Field(order_by, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonspecies_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonspecies_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemonspecies_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonspecies_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonspecies_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonspecies_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonspecies_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonspecies_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonspecies_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonspecies_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonspecies_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemonspecies_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'gender_rate', 'generation_id', 'growth_rate_id', 'hatch_counter', 'id', 'order', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id')
    base_happiness = sgqlc.types.Field(order_by, graphql_name='base_happiness')
    capture_rate = sgqlc.types.Field(order_by, graphql_name='capture_rate')
    evolution_chain_id = sgqlc.types.Field(order_by, graphql_name='evolution_chain_id')
    evolves_from_species_id = sgqlc.types.Field(order_by, graphql_name='evolves_from_species_id')
    gender_rate = sgqlc.types.Field(order_by, graphql_name='gender_rate')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    hatch_counter = sgqlc.types.Field(order_by, graphql_name='hatch_counter')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_color_id = sgqlc.types.Field(order_by, graphql_name='pokemon_color_id')
    pokemon_habitat_id = sgqlc.types.Field(order_by, graphql_name='pokemon_habitat_id')
    pokemon_shape_id = sgqlc.types.Field(order_by, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonspecies_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'forms_switchable', 'gender_rate', 'generation_id', 'growth_rate_id', 'has_gender_differences', 'hatch_counter', 'id', 'is_baby', 'is_legendary', 'is_mythical', 'name', 'order', 'pokemon_v2_pokemonevolutions_by_party_species_id', 'pokemon_v2_pokemonevolutions_by_trade_species_id', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id', 'pokemon_v2_evolutionchain', 'pokemon_v2_generation', 'pokemon_v2_growthrate', 'pokemon_v2_palparks', 'pokemon_v2_pokemoncolor', 'pokemon_v2_pokemondexnumbers', 'pokemon_v2_pokemonegggroups', 'pokemon_v2_pokemonevolutions', 'pokemon_v2_pokemonhabitat', 'pokemon_v2_pokemons', 'pokemon_v2_pokemonshape', 'pokemon_v2_pokemonspecies', 'pokemon_v2_pokemonspeciesdescriptions', 'pokemon_v2_pokemonspeciesflavortexts', 'pokemon_v2_pokemonspeciesnames', 'pokemon_v2_pokemonspecy')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspecies_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemonspecies_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspecies_bool_exp')), graphql_name='_or')
    base_happiness = sgqlc.types.Field(Int_comparison_exp, graphql_name='base_happiness')
    capture_rate = sgqlc.types.Field(Int_comparison_exp, graphql_name='capture_rate')
    evolution_chain_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='evolution_chain_id')
    evolves_from_species_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='evolves_from_species_id')
    forms_switchable = sgqlc.types.Field(Boolean_comparison_exp, graphql_name='forms_switchable')
    gender_rate = sgqlc.types.Field(Int_comparison_exp, graphql_name='gender_rate')
    generation_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='generation_id')
    growth_rate_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='growth_rate_id')
    has_gender_differences = sgqlc.types.Field(Boolean_comparison_exp, graphql_name='has_gender_differences')
    hatch_counter = sgqlc.types.Field(Int_comparison_exp, graphql_name='hatch_counter')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    is_baby = sgqlc.types.Field(Boolean_comparison_exp, graphql_name='is_baby')
    is_legendary = sgqlc.types.Field(Boolean_comparison_exp, graphql_name='is_legendary')
    is_mythical = sgqlc.types.Field(Boolean_comparison_exp, graphql_name='is_mythical')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    order = sgqlc.types.Field(Int_comparison_exp, graphql_name='order')
    pokemon_v2_pokemonevolutions_by_party_species_id = sgqlc.types.Field(pokemon_v2_pokemonevolution_bool_exp, graphql_name='pokemonV2PokemonevolutionsByPartySpeciesId')
    pokemon_v2_pokemonevolutions_by_trade_species_id = sgqlc.types.Field(pokemon_v2_pokemonevolution_bool_exp, graphql_name='pokemonV2PokemonevolutionsByTradeSpeciesId')
    pokemon_color_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_color_id')
    pokemon_habitat_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_habitat_id')
    pokemon_shape_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_shape_id')
    pokemon_v2_evolutionchain = sgqlc.types.Field(pokemon_v2_evolutionchain_bool_exp, graphql_name='pokemon_v2_evolutionchain')
    pokemon_v2_generation = sgqlc.types.Field(pokemon_v2_generation_bool_exp, graphql_name='pokemon_v2_generation')
    pokemon_v2_growthrate = sgqlc.types.Field(pokemon_v2_growthrate_bool_exp, graphql_name='pokemon_v2_growthrate')
    pokemon_v2_palparks = sgqlc.types.Field(pokemon_v2_palpark_bool_exp, graphql_name='pokemon_v2_palparks')
    pokemon_v2_pokemoncolor = sgqlc.types.Field(pokemon_v2_pokemoncolor_bool_exp, graphql_name='pokemon_v2_pokemoncolor')
    pokemon_v2_pokemondexnumbers = sgqlc.types.Field(pokemon_v2_pokemondexnumber_bool_exp, graphql_name='pokemon_v2_pokemondexnumbers')
    pokemon_v2_pokemonegggroups = sgqlc.types.Field(pokemon_v2_pokemonegggroup_bool_exp, graphql_name='pokemon_v2_pokemonegggroups')
    pokemon_v2_pokemonevolutions = sgqlc.types.Field(pokemon_v2_pokemonevolution_bool_exp, graphql_name='pokemon_v2_pokemonevolutions')
    pokemon_v2_pokemonhabitat = sgqlc.types.Field(pokemon_v2_pokemonhabitat_bool_exp, graphql_name='pokemon_v2_pokemonhabitat')
    pokemon_v2_pokemons = sgqlc.types.Field(pokemon_v2_pokemon_bool_exp, graphql_name='pokemon_v2_pokemons')
    pokemon_v2_pokemonshape = sgqlc.types.Field(pokemon_v2_pokemonshape_bool_exp, graphql_name='pokemon_v2_pokemonshape')
    pokemon_v2_pokemonspecies = sgqlc.types.Field('pokemon_v2_pokemonspecies_bool_exp', graphql_name='pokemon_v2_pokemonspecies')
    pokemon_v2_pokemonspeciesdescriptions = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_bool_exp', graphql_name='pokemon_v2_pokemonspeciesdescriptions')
    pokemon_v2_pokemonspeciesflavortexts = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_bool_exp', graphql_name='pokemon_v2_pokemonspeciesflavortexts')
    pokemon_v2_pokemonspeciesnames = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_bool_exp', graphql_name='pokemon_v2_pokemonspeciesnames')
    pokemon_v2_pokemonspecy = sgqlc.types.Field('pokemon_v2_pokemonspecies_bool_exp', graphql_name='pokemon_v2_pokemonspecy')


class pokemon_v2_pokemonspecies_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'gender_rate', 'generation_id', 'growth_rate_id', 'hatch_counter', 'id', 'name', 'order', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id')
    base_happiness = sgqlc.types.Field(order_by, graphql_name='base_happiness')
    capture_rate = sgqlc.types.Field(order_by, graphql_name='capture_rate')
    evolution_chain_id = sgqlc.types.Field(order_by, graphql_name='evolution_chain_id')
    evolves_from_species_id = sgqlc.types.Field(order_by, graphql_name='evolves_from_species_id')
    gender_rate = sgqlc.types.Field(order_by, graphql_name='gender_rate')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    hatch_counter = sgqlc.types.Field(order_by, graphql_name='hatch_counter')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_color_id = sgqlc.types.Field(order_by, graphql_name='pokemon_color_id')
    pokemon_habitat_id = sgqlc.types.Field(order_by, graphql_name='pokemon_habitat_id')
    pokemon_shape_id = sgqlc.types.Field(order_by, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonspecies_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'gender_rate', 'generation_id', 'growth_rate_id', 'hatch_counter', 'id', 'name', 'order', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id')
    base_happiness = sgqlc.types.Field(order_by, graphql_name='base_happiness')
    capture_rate = sgqlc.types.Field(order_by, graphql_name='capture_rate')
    evolution_chain_id = sgqlc.types.Field(order_by, graphql_name='evolution_chain_id')
    evolves_from_species_id = sgqlc.types.Field(order_by, graphql_name='evolves_from_species_id')
    gender_rate = sgqlc.types.Field(order_by, graphql_name='gender_rate')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    hatch_counter = sgqlc.types.Field(order_by, graphql_name='hatch_counter')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_color_id = sgqlc.types.Field(order_by, graphql_name='pokemon_color_id')
    pokemon_habitat_id = sgqlc.types.Field(order_by, graphql_name='pokemon_habitat_id')
    pokemon_shape_id = sgqlc.types.Field(order_by, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonspecies_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'forms_switchable', 'gender_rate', 'generation_id', 'growth_rate_id', 'has_gender_differences', 'hatch_counter', 'id', 'is_baby', 'is_legendary', 'is_mythical', 'name', 'order', 'pokemon_v2_pokemonevolutions_by_party_species_id_aggregate', 'pokemon_v2_pokemonevolutions_by_trade_species_id_aggregate', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id', 'pokemon_v2_evolutionchain', 'pokemon_v2_generation', 'pokemon_v2_growthrate', 'pokemon_v2_palparks_aggregate', 'pokemon_v2_pokemoncolor', 'pokemon_v2_pokemondexnumbers_aggregate', 'pokemon_v2_pokemonegggroups_aggregate', 'pokemon_v2_pokemonevolutions_aggregate', 'pokemon_v2_pokemonhabitat', 'pokemon_v2_pokemons_aggregate', 'pokemon_v2_pokemonshape', 'pokemon_v2_pokemonspecies_aggregate', 'pokemon_v2_pokemonspeciesdescriptions_aggregate', 'pokemon_v2_pokemonspeciesflavortexts_aggregate', 'pokemon_v2_pokemonspeciesnames_aggregate', 'pokemon_v2_pokemonspecy')
    base_happiness = sgqlc.types.Field(order_by, graphql_name='base_happiness')
    capture_rate = sgqlc.types.Field(order_by, graphql_name='capture_rate')
    evolution_chain_id = sgqlc.types.Field(order_by, graphql_name='evolution_chain_id')
    evolves_from_species_id = sgqlc.types.Field(order_by, graphql_name='evolves_from_species_id')
    forms_switchable = sgqlc.types.Field(order_by, graphql_name='forms_switchable')
    gender_rate = sgqlc.types.Field(order_by, graphql_name='gender_rate')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    has_gender_differences = sgqlc.types.Field(order_by, graphql_name='has_gender_differences')
    hatch_counter = sgqlc.types.Field(order_by, graphql_name='hatch_counter')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    is_baby = sgqlc.types.Field(order_by, graphql_name='is_baby')
    is_legendary = sgqlc.types.Field(order_by, graphql_name='is_legendary')
    is_mythical = sgqlc.types.Field(order_by, graphql_name='is_mythical')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_v2_pokemonevolutions_by_party_species_id_aggregate = sgqlc.types.Field(pokemon_v2_pokemonevolution_aggregate_order_by, graphql_name='pokemonV2PokemonevolutionsByPartySpeciesId_aggregate')
    pokemon_v2_pokemonevolutions_by_trade_species_id_aggregate = sgqlc.types.Field(pokemon_v2_pokemonevolution_aggregate_order_by, graphql_name='pokemonV2PokemonevolutionsByTradeSpeciesId_aggregate')
    pokemon_color_id = sgqlc.types.Field(order_by, graphql_name='pokemon_color_id')
    pokemon_habitat_id = sgqlc.types.Field(order_by, graphql_name='pokemon_habitat_id')
    pokemon_shape_id = sgqlc.types.Field(order_by, graphql_name='pokemon_shape_id')
    pokemon_v2_evolutionchain = sgqlc.types.Field(pokemon_v2_evolutionchain_order_by, graphql_name='pokemon_v2_evolutionchain')
    pokemon_v2_generation = sgqlc.types.Field(pokemon_v2_generation_order_by, graphql_name='pokemon_v2_generation')
    pokemon_v2_growthrate = sgqlc.types.Field(pokemon_v2_growthrate_order_by, graphql_name='pokemon_v2_growthrate')
    pokemon_v2_palparks_aggregate = sgqlc.types.Field(pokemon_v2_palpark_aggregate_order_by, graphql_name='pokemon_v2_palparks_aggregate')
    pokemon_v2_pokemoncolor = sgqlc.types.Field(pokemon_v2_pokemoncolor_order_by, graphql_name='pokemon_v2_pokemoncolor')
    pokemon_v2_pokemondexnumbers_aggregate = sgqlc.types.Field(pokemon_v2_pokemondexnumber_aggregate_order_by, graphql_name='pokemon_v2_pokemondexnumbers_aggregate')
    pokemon_v2_pokemonegggroups_aggregate = sgqlc.types.Field(pokemon_v2_pokemonegggroup_aggregate_order_by, graphql_name='pokemon_v2_pokemonegggroups_aggregate')
    pokemon_v2_pokemonevolutions_aggregate = sgqlc.types.Field(pokemon_v2_pokemonevolution_aggregate_order_by, graphql_name='pokemon_v2_pokemonevolutions_aggregate')
    pokemon_v2_pokemonhabitat = sgqlc.types.Field(pokemon_v2_pokemonhabitat_order_by, graphql_name='pokemon_v2_pokemonhabitat')
    pokemon_v2_pokemons_aggregate = sgqlc.types.Field(pokemon_v2_pokemon_aggregate_order_by, graphql_name='pokemon_v2_pokemons_aggregate')
    pokemon_v2_pokemonshape = sgqlc.types.Field(pokemon_v2_pokemonshape_order_by, graphql_name='pokemon_v2_pokemonshape')
    pokemon_v2_pokemonspecies_aggregate = sgqlc.types.Field(pokemon_v2_pokemonspecies_aggregate_order_by, graphql_name='pokemon_v2_pokemonspecies_aggregate')
    pokemon_v2_pokemonspeciesdescriptions_aggregate = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_aggregate_order_by', graphql_name='pokemon_v2_pokemonspeciesdescriptions_aggregate')
    pokemon_v2_pokemonspeciesflavortexts_aggregate = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_aggregate_order_by', graphql_name='pokemon_v2_pokemonspeciesflavortexts_aggregate')
    pokemon_v2_pokemonspeciesnames_aggregate = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_aggregate_order_by', graphql_name='pokemon_v2_pokemonspeciesnames_aggregate')
    pokemon_v2_pokemonspecy = sgqlc.types.Field('pokemon_v2_pokemonspecies_order_by', graphql_name='pokemon_v2_pokemonspecy')


class pokemon_v2_pokemonspecies_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'gender_rate', 'generation_id', 'growth_rate_id', 'hatch_counter', 'id', 'order', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id')
    base_happiness = sgqlc.types.Field(order_by, graphql_name='base_happiness')
    capture_rate = sgqlc.types.Field(order_by, graphql_name='capture_rate')
    evolution_chain_id = sgqlc.types.Field(order_by, graphql_name='evolution_chain_id')
    evolves_from_species_id = sgqlc.types.Field(order_by, graphql_name='evolves_from_species_id')
    gender_rate = sgqlc.types.Field(order_by, graphql_name='gender_rate')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    hatch_counter = sgqlc.types.Field(order_by, graphql_name='hatch_counter')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_color_id = sgqlc.types.Field(order_by, graphql_name='pokemon_color_id')
    pokemon_habitat_id = sgqlc.types.Field(order_by, graphql_name='pokemon_habitat_id')
    pokemon_shape_id = sgqlc.types.Field(order_by, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonspecies_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'gender_rate', 'generation_id', 'growth_rate_id', 'hatch_counter', 'id', 'order', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id')
    base_happiness = sgqlc.types.Field(order_by, graphql_name='base_happiness')
    capture_rate = sgqlc.types.Field(order_by, graphql_name='capture_rate')
    evolution_chain_id = sgqlc.types.Field(order_by, graphql_name='evolution_chain_id')
    evolves_from_species_id = sgqlc.types.Field(order_by, graphql_name='evolves_from_species_id')
    gender_rate = sgqlc.types.Field(order_by, graphql_name='gender_rate')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    hatch_counter = sgqlc.types.Field(order_by, graphql_name='hatch_counter')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_color_id = sgqlc.types.Field(order_by, graphql_name='pokemon_color_id')
    pokemon_habitat_id = sgqlc.types.Field(order_by, graphql_name='pokemon_habitat_id')
    pokemon_shape_id = sgqlc.types.Field(order_by, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonspecies_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'gender_rate', 'generation_id', 'growth_rate_id', 'hatch_counter', 'id', 'order', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id')
    base_happiness = sgqlc.types.Field(order_by, graphql_name='base_happiness')
    capture_rate = sgqlc.types.Field(order_by, graphql_name='capture_rate')
    evolution_chain_id = sgqlc.types.Field(order_by, graphql_name='evolution_chain_id')
    evolves_from_species_id = sgqlc.types.Field(order_by, graphql_name='evolves_from_species_id')
    gender_rate = sgqlc.types.Field(order_by, graphql_name='gender_rate')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    hatch_counter = sgqlc.types.Field(order_by, graphql_name='hatch_counter')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_color_id = sgqlc.types.Field(order_by, graphql_name='pokemon_color_id')
    pokemon_habitat_id = sgqlc.types.Field(order_by, graphql_name='pokemon_habitat_id')
    pokemon_shape_id = sgqlc.types.Field(order_by, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonspecies_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'gender_rate', 'generation_id', 'growth_rate_id', 'hatch_counter', 'id', 'order', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id')
    base_happiness = sgqlc.types.Field(order_by, graphql_name='base_happiness')
    capture_rate = sgqlc.types.Field(order_by, graphql_name='capture_rate')
    evolution_chain_id = sgqlc.types.Field(order_by, graphql_name='evolution_chain_id')
    evolves_from_species_id = sgqlc.types.Field(order_by, graphql_name='evolves_from_species_id')
    gender_rate = sgqlc.types.Field(order_by, graphql_name='gender_rate')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    hatch_counter = sgqlc.types.Field(order_by, graphql_name='hatch_counter')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_color_id = sgqlc.types.Field(order_by, graphql_name='pokemon_color_id')
    pokemon_habitat_id = sgqlc.types.Field(order_by, graphql_name='pokemon_habitat_id')
    pokemon_shape_id = sgqlc.types.Field(order_by, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonspecies_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'gender_rate', 'generation_id', 'growth_rate_id', 'hatch_counter', 'id', 'order', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id')
    base_happiness = sgqlc.types.Field(order_by, graphql_name='base_happiness')
    capture_rate = sgqlc.types.Field(order_by, graphql_name='capture_rate')
    evolution_chain_id = sgqlc.types.Field(order_by, graphql_name='evolution_chain_id')
    evolves_from_species_id = sgqlc.types.Field(order_by, graphql_name='evolves_from_species_id')
    gender_rate = sgqlc.types.Field(order_by, graphql_name='gender_rate')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    hatch_counter = sgqlc.types.Field(order_by, graphql_name='hatch_counter')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_color_id = sgqlc.types.Field(order_by, graphql_name='pokemon_color_id')
    pokemon_habitat_id = sgqlc.types.Field(order_by, graphql_name='pokemon_habitat_id')
    pokemon_shape_id = sgqlc.types.Field(order_by, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonspecies_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'gender_rate', 'generation_id', 'growth_rate_id', 'hatch_counter', 'id', 'order', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id')
    base_happiness = sgqlc.types.Field(order_by, graphql_name='base_happiness')
    capture_rate = sgqlc.types.Field(order_by, graphql_name='capture_rate')
    evolution_chain_id = sgqlc.types.Field(order_by, graphql_name='evolution_chain_id')
    evolves_from_species_id = sgqlc.types.Field(order_by, graphql_name='evolves_from_species_id')
    gender_rate = sgqlc.types.Field(order_by, graphql_name='gender_rate')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    hatch_counter = sgqlc.types.Field(order_by, graphql_name='hatch_counter')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_color_id = sgqlc.types.Field(order_by, graphql_name='pokemon_color_id')
    pokemon_habitat_id = sgqlc.types.Field(order_by, graphql_name='pokemon_habitat_id')
    pokemon_shape_id = sgqlc.types.Field(order_by, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonspecies_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'gender_rate', 'generation_id', 'growth_rate_id', 'hatch_counter', 'id', 'order', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id')
    base_happiness = sgqlc.types.Field(order_by, graphql_name='base_happiness')
    capture_rate = sgqlc.types.Field(order_by, graphql_name='capture_rate')
    evolution_chain_id = sgqlc.types.Field(order_by, graphql_name='evolution_chain_id')
    evolves_from_species_id = sgqlc.types.Field(order_by, graphql_name='evolves_from_species_id')
    gender_rate = sgqlc.types.Field(order_by, graphql_name='gender_rate')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    growth_rate_id = sgqlc.types.Field(order_by, graphql_name='growth_rate_id')
    hatch_counter = sgqlc.types.Field(order_by, graphql_name='hatch_counter')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_color_id = sgqlc.types.Field(order_by, graphql_name='pokemon_color_id')
    pokemon_habitat_id = sgqlc.types.Field(order_by, graphql_name='pokemon_habitat_id')
    pokemon_shape_id = sgqlc.types.Field(order_by, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonspeciesdescription_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemonspeciesdescription_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesdescription_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'description', 'id', 'language_id', 'pokemon_species_id', 'pokemon_v2_language', 'pokemon_v2_pokemonspecy')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspeciesdescription_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspeciesdescription_bool_exp')), graphql_name='_or')
    description = sgqlc.types.Field(String_comparison_exp, graphql_name='description')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_species_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_pokemonspecy = sgqlc.types.Field(pokemon_v2_pokemonspecies_bool_exp, graphql_name='pokemon_v2_pokemonspecy')


class pokemon_v2_pokemonspeciesdescription_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'pokemon_species_id')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesdescription_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'pokemon_species_id')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesdescription_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'pokemon_species_id', 'pokemon_v2_language', 'pokemon_v2_pokemonspecy')
    description = sgqlc.types.Field(order_by, graphql_name='description')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_pokemonspecy = sgqlc.types.Field(pokemon_v2_pokemonspecies_order_by, graphql_name='pokemon_v2_pokemonspecy')


class pokemon_v2_pokemonspeciesdescription_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesdescription_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesdescription_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesdescription_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesdescription_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesdescription_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesdescription_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesflavortext_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemonspeciesflavortext_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemonspeciesflavortext_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'flavor_text', 'id', 'language_id', 'pokemon_species_id', 'pokemon_v2_language', 'pokemon_v2_pokemonspecy', 'pokemon_v2_version', 'version_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspeciesflavortext_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspeciesflavortext_bool_exp')), graphql_name='_or')
    flavor_text = sgqlc.types.Field(String_comparison_exp, graphql_name='flavor_text')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_species_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_pokemonspecy = sgqlc.types.Field(pokemon_v2_pokemonspecies_bool_exp, graphql_name='pokemon_v2_pokemonspecy')
    pokemon_v2_version = sgqlc.types.Field('pokemon_v2_version_bool_exp', graphql_name='pokemon_v2_version')
    version_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='version_id')


class pokemon_v2_pokemonspeciesflavortext_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'language_id', 'pokemon_species_id', 'version_id')
    flavor_text = sgqlc.types.Field(order_by, graphql_name='flavor_text')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemonspeciesflavortext_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'language_id', 'pokemon_species_id', 'version_id')
    flavor_text = sgqlc.types.Field(order_by, graphql_name='flavor_text')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemonspeciesflavortext_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'language_id', 'pokemon_species_id', 'pokemon_v2_language', 'pokemon_v2_pokemonspecy', 'pokemon_v2_version', 'version_id')
    flavor_text = sgqlc.types.Field(order_by, graphql_name='flavor_text')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_pokemonspecy = sgqlc.types.Field(pokemon_v2_pokemonspecies_order_by, graphql_name='pokemon_v2_pokemonspecy')
    pokemon_v2_version = sgqlc.types.Field('pokemon_v2_version_order_by', graphql_name='pokemon_v2_version')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemonspeciesflavortext_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemonspeciesflavortext_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemonspeciesflavortext_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemonspeciesflavortext_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemonspeciesflavortext_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemonspeciesflavortext_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemonspeciesflavortext_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_pokemonspeciesname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemonspeciesname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'genus', 'id', 'language_id', 'name', 'pokemon_species_id', 'pokemon_v2_language', 'pokemon_v2_pokemonspecy')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspeciesname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspeciesname_bool_exp')), graphql_name='_or')
    genus = sgqlc.types.Field(String_comparison_exp, graphql_name='genus')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_species_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_species_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_pokemonspecy = sgqlc.types.Field(pokemon_v2_pokemonspecies_bool_exp, graphql_name='pokemon_v2_pokemonspecy')


class pokemon_v2_pokemonspeciesname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('genus', 'id', 'language_id', 'name', 'pokemon_species_id')
    genus = sgqlc.types.Field(order_by, graphql_name='genus')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('genus', 'id', 'language_id', 'name', 'pokemon_species_id')
    genus = sgqlc.types.Field(order_by, graphql_name='genus')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('genus', 'id', 'language_id', 'name', 'pokemon_species_id', 'pokemon_v2_language', 'pokemon_v2_pokemonspecy')
    genus = sgqlc.types.Field(order_by, graphql_name='genus')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_pokemonspecy = sgqlc.types.Field(pokemon_v2_pokemonspecies_order_by, graphql_name='pokemon_v2_pokemonspecy')


class pokemon_v2_pokemonspeciesname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(order_by, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonsprites_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonsprites_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemonsprites_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonsprites_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonsprites_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonsprites_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonsprites_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonsprites_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonsprites_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonsprites_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonsprites_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemonsprites_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')


class pokemon_v2_pokemonsprites_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'pokemon_id', 'pokemon_v2_pokemon', 'sprites')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonsprites_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemonsprites_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonsprites_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_id')
    pokemon_v2_pokemon = sgqlc.types.Field(pokemon_v2_pokemon_bool_exp, graphql_name='pokemon_v2_pokemon')
    sprites = sgqlc.types.Field(String_comparison_exp, graphql_name='sprites')


class pokemon_v2_pokemonsprites_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'sprites')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    sprites = sgqlc.types.Field(order_by, graphql_name='sprites')


class pokemon_v2_pokemonsprites_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'sprites')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    sprites = sgqlc.types.Field(order_by, graphql_name='sprites')


class pokemon_v2_pokemonsprites_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'pokemon_v2_pokemon', 'sprites')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    pokemon_v2_pokemon = sgqlc.types.Field(pokemon_v2_pokemon_order_by, graphql_name='pokemon_v2_pokemon')
    sprites = sgqlc.types.Field(order_by, graphql_name='sprites')


class pokemon_v2_pokemonsprites_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')


class pokemon_v2_pokemonsprites_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')


class pokemon_v2_pokemonsprites_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')


class pokemon_v2_pokemonsprites_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')


class pokemon_v2_pokemonsprites_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')


class pokemon_v2_pokemonsprites_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')


class pokemon_v2_pokemonsprites_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')


class pokemon_v2_pokemonstat_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonstat_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemonstat_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonstat_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonstat_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonstat_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonstat_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonstat_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonstat_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonstat_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonstat_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemonstat_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_stat', 'effort', 'id', 'pokemon_id', 'stat_id')
    base_stat = sgqlc.types.Field(order_by, graphql_name='base_stat')
    effort = sgqlc.types.Field(order_by, graphql_name='effort')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_pokemonstat_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'base_stat', 'effort', 'id', 'pokemon_id', 'pokemon_v2_pokemon', 'pokemon_v2_stat', 'stat_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonstat_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemonstat_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonstat_bool_exp')), graphql_name='_or')
    base_stat = sgqlc.types.Field(Int_comparison_exp, graphql_name='base_stat')
    effort = sgqlc.types.Field(Int_comparison_exp, graphql_name='effort')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_id')
    pokemon_v2_pokemon = sgqlc.types.Field(pokemon_v2_pokemon_bool_exp, graphql_name='pokemon_v2_pokemon')
    pokemon_v2_stat = sgqlc.types.Field('pokemon_v2_stat_bool_exp', graphql_name='pokemon_v2_stat')
    stat_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='stat_id')


class pokemon_v2_pokemonstat_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_stat', 'effort', 'id', 'pokemon_id', 'stat_id')
    base_stat = sgqlc.types.Field(order_by, graphql_name='base_stat')
    effort = sgqlc.types.Field(order_by, graphql_name='effort')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_pokemonstat_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_stat', 'effort', 'id', 'pokemon_id', 'stat_id')
    base_stat = sgqlc.types.Field(order_by, graphql_name='base_stat')
    effort = sgqlc.types.Field(order_by, graphql_name='effort')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_pokemonstat_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_stat', 'effort', 'id', 'pokemon_id', 'pokemon_v2_pokemon', 'pokemon_v2_stat', 'stat_id')
    base_stat = sgqlc.types.Field(order_by, graphql_name='base_stat')
    effort = sgqlc.types.Field(order_by, graphql_name='effort')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    pokemon_v2_pokemon = sgqlc.types.Field(pokemon_v2_pokemon_order_by, graphql_name='pokemon_v2_pokemon')
    pokemon_v2_stat = sgqlc.types.Field('pokemon_v2_stat_order_by', graphql_name='pokemon_v2_stat')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_pokemonstat_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_stat', 'effort', 'id', 'pokemon_id', 'stat_id')
    base_stat = sgqlc.types.Field(order_by, graphql_name='base_stat')
    effort = sgqlc.types.Field(order_by, graphql_name='effort')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_pokemonstat_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_stat', 'effort', 'id', 'pokemon_id', 'stat_id')
    base_stat = sgqlc.types.Field(order_by, graphql_name='base_stat')
    effort = sgqlc.types.Field(order_by, graphql_name='effort')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_pokemonstat_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_stat', 'effort', 'id', 'pokemon_id', 'stat_id')
    base_stat = sgqlc.types.Field(order_by, graphql_name='base_stat')
    effort = sgqlc.types.Field(order_by, graphql_name='effort')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_pokemonstat_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_stat', 'effort', 'id', 'pokemon_id', 'stat_id')
    base_stat = sgqlc.types.Field(order_by, graphql_name='base_stat')
    effort = sgqlc.types.Field(order_by, graphql_name='effort')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_pokemonstat_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_stat', 'effort', 'id', 'pokemon_id', 'stat_id')
    base_stat = sgqlc.types.Field(order_by, graphql_name='base_stat')
    effort = sgqlc.types.Field(order_by, graphql_name='effort')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_pokemonstat_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_stat', 'effort', 'id', 'pokemon_id', 'stat_id')
    base_stat = sgqlc.types.Field(order_by, graphql_name='base_stat')
    effort = sgqlc.types.Field(order_by, graphql_name='effort')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_pokemonstat_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_stat', 'effort', 'id', 'pokemon_id', 'stat_id')
    base_stat = sgqlc.types.Field(order_by, graphql_name='base_stat')
    effort = sgqlc.types.Field(order_by, graphql_name='effort')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_pokemontype_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemontype_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemontype_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemontype_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemontype_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemontype_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemontype_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemontype_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemontype_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemontype_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemontype_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemontype_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'slot', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemontype_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'pokemon_id', 'pokemon_v2_pokemon', 'pokemon_v2_type', 'slot', 'type_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemontype_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemontype_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemontype_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_id')
    pokemon_v2_pokemon = sgqlc.types.Field(pokemon_v2_pokemon_bool_exp, graphql_name='pokemon_v2_pokemon')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type_bool_exp', graphql_name='pokemon_v2_type')
    slot = sgqlc.types.Field(Int_comparison_exp, graphql_name='slot')
    type_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='type_id')


class pokemon_v2_pokemontype_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'slot', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemontype_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'slot', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemontype_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'pokemon_v2_pokemon', 'pokemon_v2_type', 'slot', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    pokemon_v2_pokemon = sgqlc.types.Field(pokemon_v2_pokemon_order_by, graphql_name='pokemon_v2_pokemon')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type_order_by', graphql_name='pokemon_v2_type')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemontype_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'slot', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemontype_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'slot', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemontype_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'slot', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemontype_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'slot', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemontype_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'slot', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemontype_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'slot', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemontype_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'slot', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemontypepast_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemontypepast_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_pokemontypepast_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemontypepast_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemontypepast_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemontypepast_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemontypepast_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemontypepast_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemontypepast_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemontypepast_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemontypepast_variance_order_by', graphql_name='variance')


class pokemon_v2_pokemontypepast_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'pokemon_id', 'slot', 'type_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemontypepast_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'generation_id', 'id', 'pokemon_id', 'pokemon_v2_generation', 'pokemon_v2_pokemon', 'pokemon_v2_type', 'slot', 'type_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemontypepast_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_pokemontypepast_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemontypepast_bool_exp')), graphql_name='_or')
    generation_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='generation_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='pokemon_id')
    pokemon_v2_generation = sgqlc.types.Field(pokemon_v2_generation_bool_exp, graphql_name='pokemon_v2_generation')
    pokemon_v2_pokemon = sgqlc.types.Field(pokemon_v2_pokemon_bool_exp, graphql_name='pokemon_v2_pokemon')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type_bool_exp', graphql_name='pokemon_v2_type')
    slot = sgqlc.types.Field(Int_comparison_exp, graphql_name='slot')
    type_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='type_id')


class pokemon_v2_pokemontypepast_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'pokemon_id', 'slot', 'type_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemontypepast_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'pokemon_id', 'slot', 'type_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemontypepast_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'pokemon_id', 'pokemon_v2_generation', 'pokemon_v2_pokemon', 'pokemon_v2_type', 'slot', 'type_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    pokemon_v2_generation = sgqlc.types.Field(pokemon_v2_generation_order_by, graphql_name='pokemon_v2_generation')
    pokemon_v2_pokemon = sgqlc.types.Field(pokemon_v2_pokemon_order_by, graphql_name='pokemon_v2_pokemon')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type_order_by', graphql_name='pokemon_v2_type')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemontypepast_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'pokemon_id', 'slot', 'type_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemontypepast_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'pokemon_id', 'slot', 'type_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemontypepast_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'pokemon_id', 'slot', 'type_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemontypepast_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'pokemon_id', 'slot', 'type_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemontypepast_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'pokemon_id', 'slot', 'type_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemontypepast_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'pokemon_id', 'slot', 'type_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_pokemontypepast_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'pokemon_id', 'slot', 'type_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_id = sgqlc.types.Field(order_by, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(order_by, graphql_name='slot')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_region_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_generations', 'pokemon_v2_locations', 'pokemon_v2_pokedexes', 'pokemon_v2_regionnames', 'pokemon_v2_versiongroupregions')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_region_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_region_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_region_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_generations = sgqlc.types.Field(pokemon_v2_generation_bool_exp, graphql_name='pokemon_v2_generations')
    pokemon_v2_locations = sgqlc.types.Field(pokemon_v2_location_bool_exp, graphql_name='pokemon_v2_locations')
    pokemon_v2_pokedexes = sgqlc.types.Field(pokemon_v2_pokedex_bool_exp, graphql_name='pokemon_v2_pokedexes')
    pokemon_v2_regionnames = sgqlc.types.Field('pokemon_v2_regionname_bool_exp', graphql_name='pokemon_v2_regionnames')
    pokemon_v2_versiongroupregions = sgqlc.types.Field('pokemon_v2_versiongroupregion_bool_exp', graphql_name='pokemon_v2_versiongroupregions')


class pokemon_v2_region_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_generations_aggregate', 'pokemon_v2_locations_aggregate', 'pokemon_v2_pokedexes_aggregate', 'pokemon_v2_regionnames_aggregate', 'pokemon_v2_versiongroupregions_aggregate')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_generations_aggregate = sgqlc.types.Field(pokemon_v2_generation_aggregate_order_by, graphql_name='pokemon_v2_generations_aggregate')
    pokemon_v2_locations_aggregate = sgqlc.types.Field(pokemon_v2_location_aggregate_order_by, graphql_name='pokemon_v2_locations_aggregate')
    pokemon_v2_pokedexes_aggregate = sgqlc.types.Field(pokemon_v2_pokedex_aggregate_order_by, graphql_name='pokemon_v2_pokedexes_aggregate')
    pokemon_v2_regionnames_aggregate = sgqlc.types.Field('pokemon_v2_regionname_aggregate_order_by', graphql_name='pokemon_v2_regionnames_aggregate')
    pokemon_v2_versiongroupregions_aggregate = sgqlc.types.Field('pokemon_v2_versiongroupregion_aggregate_order_by', graphql_name='pokemon_v2_versiongroupregions_aggregate')


class pokemon_v2_regionname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_regionname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_regionname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_regionname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_regionname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_regionname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_regionname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_regionname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_regionname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_regionname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_regionname_variance_order_by', graphql_name='variance')


class pokemon_v2_regionname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_regionname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'language_id', 'name', 'pokemon_v2_language', 'pokemon_v2_region', 'region_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_regionname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_regionname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_regionname_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_region = sgqlc.types.Field(pokemon_v2_region_bool_exp, graphql_name='pokemon_v2_region')
    region_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='region_id')


class pokemon_v2_regionname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_regionname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_regionname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_v2_language', 'pokemon_v2_region', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_region = sgqlc.types.Field(pokemon_v2_region_order_by, graphql_name='pokemon_v2_region')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_regionname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_regionname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_regionname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_regionname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_regionname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_regionname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_regionname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'region_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')


class pokemon_v2_stat_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_stat_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_stat_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_stat_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_stat_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_stat_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_stat_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_stat_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_stat_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_stat_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_stat_variance_order_by', graphql_name='variance')


class pokemon_v2_stat_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'move_damage_class_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_stat_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'game_index', 'id', 'is_battle_only', 'move_damage_class_id', 'name', 'pokemon_v2_natures_by_increased_stat_id', 'pokemon_v2_characteristics', 'pokemon_v2_movedamageclass', 'pokemon_v2_movemetastatchanges', 'pokemon_v2_natures', 'pokemon_v2_pokemonstats', 'pokemon_v2_statnames')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_stat_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_stat_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_stat_bool_exp')), graphql_name='_or')
    game_index = sgqlc.types.Field(Int_comparison_exp, graphql_name='game_index')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    is_battle_only = sgqlc.types.Field(Boolean_comparison_exp, graphql_name='is_battle_only')
    move_damage_class_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_damage_class_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_natures_by_increased_stat_id = sgqlc.types.Field(pokemon_v2_nature_bool_exp, graphql_name='pokemonV2NaturesByIncreasedStatId')
    pokemon_v2_characteristics = sgqlc.types.Field(pokemon_v2_characteristic_bool_exp, graphql_name='pokemon_v2_characteristics')
    pokemon_v2_movedamageclass = sgqlc.types.Field(pokemon_v2_movedamageclass_bool_exp, graphql_name='pokemon_v2_movedamageclass')
    pokemon_v2_movemetastatchanges = sgqlc.types.Field(pokemon_v2_movemetastatchange_bool_exp, graphql_name='pokemon_v2_movemetastatchanges')
    pokemon_v2_natures = sgqlc.types.Field(pokemon_v2_nature_bool_exp, graphql_name='pokemon_v2_natures')
    pokemon_v2_pokemonstats = sgqlc.types.Field(pokemon_v2_pokemonstat_bool_exp, graphql_name='pokemon_v2_pokemonstats')
    pokemon_v2_statnames = sgqlc.types.Field('pokemon_v2_statname_bool_exp', graphql_name='pokemon_v2_statnames')


class pokemon_v2_stat_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'move_damage_class_id', 'name')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_stat_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'move_damage_class_id', 'name')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_stat_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'is_battle_only', 'move_damage_class_id', 'name', 'pokemon_v2_natures_by_increased_stat_id_aggregate', 'pokemon_v2_characteristics_aggregate', 'pokemon_v2_movedamageclass', 'pokemon_v2_movemetastatchanges_aggregate', 'pokemon_v2_natures_aggregate', 'pokemon_v2_pokemonstats_aggregate', 'pokemon_v2_statnames_aggregate')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    is_battle_only = sgqlc.types.Field(order_by, graphql_name='is_battle_only')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_natures_by_increased_stat_id_aggregate = sgqlc.types.Field(pokemon_v2_nature_aggregate_order_by, graphql_name='pokemonV2NaturesByIncreasedStatId_aggregate')
    pokemon_v2_characteristics_aggregate = sgqlc.types.Field(pokemon_v2_characteristic_aggregate_order_by, graphql_name='pokemon_v2_characteristics_aggregate')
    pokemon_v2_movedamageclass = sgqlc.types.Field(pokemon_v2_movedamageclass_order_by, graphql_name='pokemon_v2_movedamageclass')
    pokemon_v2_movemetastatchanges_aggregate = sgqlc.types.Field(pokemon_v2_movemetastatchange_aggregate_order_by, graphql_name='pokemon_v2_movemetastatchanges_aggregate')
    pokemon_v2_natures_aggregate = sgqlc.types.Field(pokemon_v2_nature_aggregate_order_by, graphql_name='pokemon_v2_natures_aggregate')
    pokemon_v2_pokemonstats_aggregate = sgqlc.types.Field(pokemon_v2_pokemonstat_aggregate_order_by, graphql_name='pokemon_v2_pokemonstats_aggregate')
    pokemon_v2_statnames_aggregate = sgqlc.types.Field('pokemon_v2_statname_aggregate_order_by', graphql_name='pokemon_v2_statnames_aggregate')


class pokemon_v2_stat_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'move_damage_class_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_stat_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'move_damage_class_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_stat_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'move_damage_class_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_stat_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'move_damage_class_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_stat_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'move_damage_class_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_stat_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'move_damage_class_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_stat_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'move_damage_class_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_statname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_statname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_statname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_statname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_statname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_statname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_statname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_statname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_statname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_statname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_statname_variance_order_by', graphql_name='variance')


class pokemon_v2_statname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_statname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'language_id', 'name', 'pokemon_v2_language', 'pokemon_v2_stat', 'stat_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_statname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_statname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_statname_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_stat = sgqlc.types.Field(pokemon_v2_stat_bool_exp, graphql_name='pokemon_v2_stat')
    stat_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='stat_id')


class pokemon_v2_statname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_statname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_statname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_v2_language', 'pokemon_v2_stat', 'stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_stat = sgqlc.types.Field(pokemon_v2_stat_order_by, graphql_name='pokemon_v2_stat')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_statname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_statname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_statname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_statname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_statname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_statname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_statname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'stat_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    stat_id = sgqlc.types.Field(order_by, graphql_name='stat_id')


class pokemon_v2_supercontestcombo_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_supercontestcombo_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_supercontestcombo_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_supercontestcombo_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_supercontestcombo_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_supercontestcombo_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_supercontestcombo_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_supercontestcombo_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_supercontestcombo_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_supercontestcombo_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_supercontestcombo_variance_order_by', graphql_name='variance')


class pokemon_v2_supercontestcombo_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(order_by, graphql_name='first_move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    second_move_id = sgqlc.types.Field(order_by, graphql_name='second_move_id')


class pokemon_v2_supercontestcombo_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'first_move_id', 'id', 'pokemon_v2_move_by_second_move_id', 'pokemon_v2_move', 'second_move_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_supercontestcombo_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_supercontestcombo_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_supercontestcombo_bool_exp')), graphql_name='_or')
    first_move_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='first_move_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokemon_v2_move_by_second_move_id = sgqlc.types.Field(pokemon_v2_move_bool_exp, graphql_name='pokemonV2MoveBySecondMoveId')
    pokemon_v2_move = sgqlc.types.Field(pokemon_v2_move_bool_exp, graphql_name='pokemon_v2_move')
    second_move_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='second_move_id')


class pokemon_v2_supercontestcombo_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(order_by, graphql_name='first_move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    second_move_id = sgqlc.types.Field(order_by, graphql_name='second_move_id')


class pokemon_v2_supercontestcombo_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(order_by, graphql_name='first_move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    second_move_id = sgqlc.types.Field(order_by, graphql_name='second_move_id')


class pokemon_v2_supercontestcombo_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'pokemon_v2_move_by_second_move_id', 'pokemon_v2_move', 'second_move_id')
    first_move_id = sgqlc.types.Field(order_by, graphql_name='first_move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_v2_move_by_second_move_id = sgqlc.types.Field(pokemon_v2_move_order_by, graphql_name='pokemonV2MoveBySecondMoveId')
    pokemon_v2_move = sgqlc.types.Field(pokemon_v2_move_order_by, graphql_name='pokemon_v2_move')
    second_move_id = sgqlc.types.Field(order_by, graphql_name='second_move_id')


class pokemon_v2_supercontestcombo_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(order_by, graphql_name='first_move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    second_move_id = sgqlc.types.Field(order_by, graphql_name='second_move_id')


class pokemon_v2_supercontestcombo_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(order_by, graphql_name='first_move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    second_move_id = sgqlc.types.Field(order_by, graphql_name='second_move_id')


class pokemon_v2_supercontestcombo_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(order_by, graphql_name='first_move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    second_move_id = sgqlc.types.Field(order_by, graphql_name='second_move_id')


class pokemon_v2_supercontestcombo_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(order_by, graphql_name='first_move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    second_move_id = sgqlc.types.Field(order_by, graphql_name='second_move_id')


class pokemon_v2_supercontestcombo_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(order_by, graphql_name='first_move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    second_move_id = sgqlc.types.Field(order_by, graphql_name='second_move_id')


class pokemon_v2_supercontestcombo_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(order_by, graphql_name='first_move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    second_move_id = sgqlc.types.Field(order_by, graphql_name='second_move_id')


class pokemon_v2_supercontestcombo_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(order_by, graphql_name='first_move_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    second_move_id = sgqlc.types.Field(order_by, graphql_name='second_move_id')


class pokemon_v2_supercontesteffect_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'appeal', 'id', 'pokemon_v2_moves', 'pokemon_v2_supercontesteffectflavortexts')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_supercontesteffect_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_supercontesteffect_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_supercontesteffect_bool_exp')), graphql_name='_or')
    appeal = sgqlc.types.Field(Int_comparison_exp, graphql_name='appeal')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokemon_v2_moves = sgqlc.types.Field(pokemon_v2_move_bool_exp, graphql_name='pokemon_v2_moves')
    pokemon_v2_supercontesteffectflavortexts = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_bool_exp', graphql_name='pokemon_v2_supercontesteffectflavortexts')


class pokemon_v2_supercontesteffect_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id', 'pokemon_v2_moves_aggregate', 'pokemon_v2_supercontesteffectflavortexts_aggregate')
    appeal = sgqlc.types.Field(order_by, graphql_name='appeal')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_v2_moves_aggregate = sgqlc.types.Field(pokemon_v2_move_aggregate_order_by, graphql_name='pokemon_v2_moves_aggregate')
    pokemon_v2_supercontesteffectflavortexts_aggregate = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_aggregate_order_by', graphql_name='pokemon_v2_supercontesteffectflavortexts_aggregate')


class pokemon_v2_supercontesteffectflavortext_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_variance_order_by', graphql_name='variance')


class pokemon_v2_supercontesteffectflavortext_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'super_contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    super_contest_effect_id = sgqlc.types.Field(order_by, graphql_name='super_contest_effect_id')


class pokemon_v2_supercontesteffectflavortext_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'flavor_text', 'id', 'language_id', 'pokemon_v2_language', 'pokemon_v2_supercontesteffect', 'super_contest_effect_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_supercontesteffectflavortext_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_supercontesteffectflavortext_bool_exp')), graphql_name='_or')
    flavor_text = sgqlc.types.Field(String_comparison_exp, graphql_name='flavor_text')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_supercontesteffect = sgqlc.types.Field(pokemon_v2_supercontesteffect_bool_exp, graphql_name='pokemon_v2_supercontesteffect')
    super_contest_effect_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='super_contest_effect_id')


class pokemon_v2_supercontesteffectflavortext_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'language_id', 'super_contest_effect_id')
    flavor_text = sgqlc.types.Field(order_by, graphql_name='flavor_text')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    super_contest_effect_id = sgqlc.types.Field(order_by, graphql_name='super_contest_effect_id')


class pokemon_v2_supercontesteffectflavortext_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'language_id', 'super_contest_effect_id')
    flavor_text = sgqlc.types.Field(order_by, graphql_name='flavor_text')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    super_contest_effect_id = sgqlc.types.Field(order_by, graphql_name='super_contest_effect_id')


class pokemon_v2_supercontesteffectflavortext_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'language_id', 'pokemon_v2_language', 'pokemon_v2_supercontesteffect', 'super_contest_effect_id')
    flavor_text = sgqlc.types.Field(order_by, graphql_name='flavor_text')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_supercontesteffect = sgqlc.types.Field(pokemon_v2_supercontesteffect_order_by, graphql_name='pokemon_v2_supercontesteffect')
    super_contest_effect_id = sgqlc.types.Field(order_by, graphql_name='super_contest_effect_id')


class pokemon_v2_supercontesteffectflavortext_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'super_contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    super_contest_effect_id = sgqlc.types.Field(order_by, graphql_name='super_contest_effect_id')


class pokemon_v2_supercontesteffectflavortext_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'super_contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    super_contest_effect_id = sgqlc.types.Field(order_by, graphql_name='super_contest_effect_id')


class pokemon_v2_supercontesteffectflavortext_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'super_contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    super_contest_effect_id = sgqlc.types.Field(order_by, graphql_name='super_contest_effect_id')


class pokemon_v2_supercontesteffectflavortext_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'super_contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    super_contest_effect_id = sgqlc.types.Field(order_by, graphql_name='super_contest_effect_id')


class pokemon_v2_supercontesteffectflavortext_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'super_contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    super_contest_effect_id = sgqlc.types.Field(order_by, graphql_name='super_contest_effect_id')


class pokemon_v2_supercontesteffectflavortext_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'super_contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    super_contest_effect_id = sgqlc.types.Field(order_by, graphql_name='super_contest_effect_id')


class pokemon_v2_supercontesteffectflavortext_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'super_contest_effect_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    super_contest_effect_id = sgqlc.types.Field(order_by, graphql_name='super_contest_effect_id')


class pokemon_v2_type_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_type_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_type_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_type_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_type_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_type_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_type_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_type_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_type_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_type_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_type_variance_order_by', graphql_name='variance')


class pokemon_v2_type_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'move_damage_class_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_type_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'generation_id', 'id', 'move_damage_class_id', 'name', 'pokemon_v2_pokemonevolutions_by_party_type_id', 'pokemon_v2_typeefficacies_by_target_type_id', 'pokemon_v2_berries', 'pokemon_v2_generation', 'pokemon_v2_movechanges', 'pokemon_v2_movedamageclass', 'pokemon_v2_moves', 'pokemon_v2_pokemonevolutions', 'pokemon_v2_pokemonformtypes', 'pokemon_v2_pokemontypepasts', 'pokemon_v2_pokemontypes', 'pokemon_v2_typeefficacies', 'pokemon_v2_typegameindices', 'pokemon_v2_typenames')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_type_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_type_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_type_bool_exp')), graphql_name='_or')
    generation_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='generation_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_damage_class_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_pokemonevolutions_by_party_type_id = sgqlc.types.Field(pokemon_v2_pokemonevolution_bool_exp, graphql_name='pokemonV2PokemonevolutionsByPartyTypeId')
    pokemon_v2_typeefficacies_by_target_type_id = sgqlc.types.Field('pokemon_v2_typeefficacy_bool_exp', graphql_name='pokemonV2TypeefficaciesByTargetTypeId')
    pokemon_v2_berries = sgqlc.types.Field(pokemon_v2_berry_bool_exp, graphql_name='pokemon_v2_berries')
    pokemon_v2_generation = sgqlc.types.Field(pokemon_v2_generation_bool_exp, graphql_name='pokemon_v2_generation')
    pokemon_v2_movechanges = sgqlc.types.Field(pokemon_v2_movechange_bool_exp, graphql_name='pokemon_v2_movechanges')
    pokemon_v2_movedamageclass = sgqlc.types.Field(pokemon_v2_movedamageclass_bool_exp, graphql_name='pokemon_v2_movedamageclass')
    pokemon_v2_moves = sgqlc.types.Field(pokemon_v2_move_bool_exp, graphql_name='pokemon_v2_moves')
    pokemon_v2_pokemonevolutions = sgqlc.types.Field(pokemon_v2_pokemonevolution_bool_exp, graphql_name='pokemon_v2_pokemonevolutions')
    pokemon_v2_pokemonformtypes = sgqlc.types.Field(pokemon_v2_pokemonformtype_bool_exp, graphql_name='pokemon_v2_pokemonformtypes')
    pokemon_v2_pokemontypepasts = sgqlc.types.Field(pokemon_v2_pokemontypepast_bool_exp, graphql_name='pokemon_v2_pokemontypepasts')
    pokemon_v2_pokemontypes = sgqlc.types.Field(pokemon_v2_pokemontype_bool_exp, graphql_name='pokemon_v2_pokemontypes')
    pokemon_v2_typeefficacies = sgqlc.types.Field('pokemon_v2_typeefficacy_bool_exp', graphql_name='pokemon_v2_typeefficacies')
    pokemon_v2_typegameindices = sgqlc.types.Field('pokemon_v2_typegameindex_bool_exp', graphql_name='pokemon_v2_typegameindices')
    pokemon_v2_typenames = sgqlc.types.Field('pokemon_v2_typename_bool_exp', graphql_name='pokemon_v2_typenames')


class pokemon_v2_type_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'move_damage_class_id', 'name')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_type_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'move_damage_class_id', 'name')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')


class pokemon_v2_type_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'move_damage_class_id', 'name', 'pokemon_v2_pokemonevolutions_by_party_type_id_aggregate', 'pokemon_v2_typeefficacies_by_target_type_id_aggregate', 'pokemon_v2_berries_aggregate', 'pokemon_v2_generation', 'pokemon_v2_movechanges_aggregate', 'pokemon_v2_movedamageclass', 'pokemon_v2_moves_aggregate', 'pokemon_v2_pokemonevolutions_aggregate', 'pokemon_v2_pokemonformtypes_aggregate', 'pokemon_v2_pokemontypepasts_aggregate', 'pokemon_v2_pokemontypes_aggregate', 'pokemon_v2_typeefficacies_aggregate', 'pokemon_v2_typegameindices_aggregate', 'pokemon_v2_typenames_aggregate')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_pokemonevolutions_by_party_type_id_aggregate = sgqlc.types.Field(pokemon_v2_pokemonevolution_aggregate_order_by, graphql_name='pokemonV2PokemonevolutionsByPartyTypeId_aggregate')
    pokemon_v2_typeefficacies_by_target_type_id_aggregate = sgqlc.types.Field('pokemon_v2_typeefficacy_aggregate_order_by', graphql_name='pokemonV2TypeefficaciesByTargetTypeId_aggregate')
    pokemon_v2_berries_aggregate = sgqlc.types.Field(pokemon_v2_berry_aggregate_order_by, graphql_name='pokemon_v2_berries_aggregate')
    pokemon_v2_generation = sgqlc.types.Field(pokemon_v2_generation_order_by, graphql_name='pokemon_v2_generation')
    pokemon_v2_movechanges_aggregate = sgqlc.types.Field(pokemon_v2_movechange_aggregate_order_by, graphql_name='pokemon_v2_movechanges_aggregate')
    pokemon_v2_movedamageclass = sgqlc.types.Field(pokemon_v2_movedamageclass_order_by, graphql_name='pokemon_v2_movedamageclass')
    pokemon_v2_moves_aggregate = sgqlc.types.Field(pokemon_v2_move_aggregate_order_by, graphql_name='pokemon_v2_moves_aggregate')
    pokemon_v2_pokemonevolutions_aggregate = sgqlc.types.Field(pokemon_v2_pokemonevolution_aggregate_order_by, graphql_name='pokemon_v2_pokemonevolutions_aggregate')
    pokemon_v2_pokemonformtypes_aggregate = sgqlc.types.Field(pokemon_v2_pokemonformtype_aggregate_order_by, graphql_name='pokemon_v2_pokemonformtypes_aggregate')
    pokemon_v2_pokemontypepasts_aggregate = sgqlc.types.Field(pokemon_v2_pokemontypepast_aggregate_order_by, graphql_name='pokemon_v2_pokemontypepasts_aggregate')
    pokemon_v2_pokemontypes_aggregate = sgqlc.types.Field(pokemon_v2_pokemontype_aggregate_order_by, graphql_name='pokemon_v2_pokemontypes_aggregate')
    pokemon_v2_typeefficacies_aggregate = sgqlc.types.Field('pokemon_v2_typeefficacy_aggregate_order_by', graphql_name='pokemon_v2_typeefficacies_aggregate')
    pokemon_v2_typegameindices_aggregate = sgqlc.types.Field('pokemon_v2_typegameindex_aggregate_order_by', graphql_name='pokemon_v2_typegameindices_aggregate')
    pokemon_v2_typenames_aggregate = sgqlc.types.Field('pokemon_v2_typename_aggregate_order_by', graphql_name='pokemon_v2_typenames_aggregate')


class pokemon_v2_type_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'move_damage_class_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_type_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'move_damage_class_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_type_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'move_damage_class_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_type_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'move_damage_class_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_type_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'move_damage_class_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_type_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'move_damage_class_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_type_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'move_damage_class_id')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(order_by, graphql_name='move_damage_class_id')


class pokemon_v2_typeefficacy_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_typeefficacy_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_typeefficacy_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_typeefficacy_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_typeefficacy_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_typeefficacy_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_typeefficacy_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_typeefficacy_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_typeefficacy_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_typeefficacy_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_typeefficacy_variance_order_by', graphql_name='variance')


class pokemon_v2_typeefficacy_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('damage_factor', 'damage_type_id', 'id', 'target_type_id')
    damage_factor = sgqlc.types.Field(order_by, graphql_name='damage_factor')
    damage_type_id = sgqlc.types.Field(order_by, graphql_name='damage_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    target_type_id = sgqlc.types.Field(order_by, graphql_name='target_type_id')


class pokemon_v2_typeefficacy_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'damage_factor', 'damage_type_id', 'id', 'pokemon_v2_type_by_target_type_id', 'pokemon_v2_type', 'target_type_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_typeefficacy_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_typeefficacy_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_typeefficacy_bool_exp')), graphql_name='_or')
    damage_factor = sgqlc.types.Field(Int_comparison_exp, graphql_name='damage_factor')
    damage_type_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='damage_type_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokemon_v2_type_by_target_type_id = sgqlc.types.Field(pokemon_v2_type_bool_exp, graphql_name='pokemonV2TypeByTargetTypeId')
    pokemon_v2_type = sgqlc.types.Field(pokemon_v2_type_bool_exp, graphql_name='pokemon_v2_type')
    target_type_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='target_type_id')


class pokemon_v2_typeefficacy_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('damage_factor', 'damage_type_id', 'id', 'target_type_id')
    damage_factor = sgqlc.types.Field(order_by, graphql_name='damage_factor')
    damage_type_id = sgqlc.types.Field(order_by, graphql_name='damage_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    target_type_id = sgqlc.types.Field(order_by, graphql_name='target_type_id')


class pokemon_v2_typeefficacy_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('damage_factor', 'damage_type_id', 'id', 'target_type_id')
    damage_factor = sgqlc.types.Field(order_by, graphql_name='damage_factor')
    damage_type_id = sgqlc.types.Field(order_by, graphql_name='damage_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    target_type_id = sgqlc.types.Field(order_by, graphql_name='target_type_id')


class pokemon_v2_typeefficacy_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('damage_factor', 'damage_type_id', 'id', 'pokemon_v2_type_by_target_type_id', 'pokemon_v2_type', 'target_type_id')
    damage_factor = sgqlc.types.Field(order_by, graphql_name='damage_factor')
    damage_type_id = sgqlc.types.Field(order_by, graphql_name='damage_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_v2_type_by_target_type_id = sgqlc.types.Field(pokemon_v2_type_order_by, graphql_name='pokemonV2TypeByTargetTypeId')
    pokemon_v2_type = sgqlc.types.Field(pokemon_v2_type_order_by, graphql_name='pokemon_v2_type')
    target_type_id = sgqlc.types.Field(order_by, graphql_name='target_type_id')


class pokemon_v2_typeefficacy_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('damage_factor', 'damage_type_id', 'id', 'target_type_id')
    damage_factor = sgqlc.types.Field(order_by, graphql_name='damage_factor')
    damage_type_id = sgqlc.types.Field(order_by, graphql_name='damage_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    target_type_id = sgqlc.types.Field(order_by, graphql_name='target_type_id')


class pokemon_v2_typeefficacy_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('damage_factor', 'damage_type_id', 'id', 'target_type_id')
    damage_factor = sgqlc.types.Field(order_by, graphql_name='damage_factor')
    damage_type_id = sgqlc.types.Field(order_by, graphql_name='damage_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    target_type_id = sgqlc.types.Field(order_by, graphql_name='target_type_id')


class pokemon_v2_typeefficacy_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('damage_factor', 'damage_type_id', 'id', 'target_type_id')
    damage_factor = sgqlc.types.Field(order_by, graphql_name='damage_factor')
    damage_type_id = sgqlc.types.Field(order_by, graphql_name='damage_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    target_type_id = sgqlc.types.Field(order_by, graphql_name='target_type_id')


class pokemon_v2_typeefficacy_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('damage_factor', 'damage_type_id', 'id', 'target_type_id')
    damage_factor = sgqlc.types.Field(order_by, graphql_name='damage_factor')
    damage_type_id = sgqlc.types.Field(order_by, graphql_name='damage_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    target_type_id = sgqlc.types.Field(order_by, graphql_name='target_type_id')


class pokemon_v2_typeefficacy_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('damage_factor', 'damage_type_id', 'id', 'target_type_id')
    damage_factor = sgqlc.types.Field(order_by, graphql_name='damage_factor')
    damage_type_id = sgqlc.types.Field(order_by, graphql_name='damage_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    target_type_id = sgqlc.types.Field(order_by, graphql_name='target_type_id')


class pokemon_v2_typeefficacy_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('damage_factor', 'damage_type_id', 'id', 'target_type_id')
    damage_factor = sgqlc.types.Field(order_by, graphql_name='damage_factor')
    damage_type_id = sgqlc.types.Field(order_by, graphql_name='damage_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    target_type_id = sgqlc.types.Field(order_by, graphql_name='target_type_id')


class pokemon_v2_typeefficacy_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('damage_factor', 'damage_type_id', 'id', 'target_type_id')
    damage_factor = sgqlc.types.Field(order_by, graphql_name='damage_factor')
    damage_type_id = sgqlc.types.Field(order_by, graphql_name='damage_type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    target_type_id = sgqlc.types.Field(order_by, graphql_name='target_type_id')


class pokemon_v2_typegameindex_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_typegameindex_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_typegameindex_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_typegameindex_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_typegameindex_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_typegameindex_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_typegameindex_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_typegameindex_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_typegameindex_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_typegameindex_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_typegameindex_variance_order_by', graphql_name='variance')


class pokemon_v2_typegameindex_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'type_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_typegameindex_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'game_index', 'generation_id', 'id', 'pokemon_v2_generation', 'pokemon_v2_type', 'type_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_typegameindex_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_typegameindex_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_typegameindex_bool_exp')), graphql_name='_or')
    game_index = sgqlc.types.Field(Int_comparison_exp, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='generation_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokemon_v2_generation = sgqlc.types.Field(pokemon_v2_generation_bool_exp, graphql_name='pokemon_v2_generation')
    pokemon_v2_type = sgqlc.types.Field(pokemon_v2_type_bool_exp, graphql_name='pokemon_v2_type')
    type_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='type_id')


class pokemon_v2_typegameindex_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'type_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_typegameindex_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'type_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_typegameindex_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_v2_generation', 'pokemon_v2_type', 'type_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_v2_generation = sgqlc.types.Field(pokemon_v2_generation_order_by, graphql_name='pokemon_v2_generation')
    pokemon_v2_type = sgqlc.types.Field(pokemon_v2_type_order_by, graphql_name='pokemon_v2_type')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_typegameindex_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'type_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_typegameindex_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'type_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_typegameindex_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'type_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_typegameindex_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'type_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_typegameindex_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'type_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_typegameindex_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'type_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_typegameindex_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'type_id')
    game_index = sgqlc.types.Field(order_by, graphql_name='game_index')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_typename_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_typename_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_typename_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_typename_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_typename_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_typename_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_typename_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_typename_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_typename_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_typename_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_typename_variance_order_by', graphql_name='variance')


class pokemon_v2_typename_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_typename_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'language_id', 'name', 'pokemon_v2_language', 'pokemon_v2_type', 'type_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_typename_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_typename_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_typename_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_type = sgqlc.types.Field(pokemon_v2_type_bool_exp, graphql_name='pokemon_v2_type')
    type_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='type_id')


class pokemon_v2_typename_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_typename_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_typename_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_v2_language', 'pokemon_v2_type', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_type = sgqlc.types.Field(pokemon_v2_type_order_by, graphql_name='pokemon_v2_type')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_typename_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_typename_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_typename_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_typename_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_typename_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_typename_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_typename_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'type_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    type_id = sgqlc.types.Field(order_by, graphql_name='type_id')


class pokemon_v2_version_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_version_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_version_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_version_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_version_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_version_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_version_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_version_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_version_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_version_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_version_variance_order_by', graphql_name='variance')


class pokemon_v2_version_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_version_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'name', 'pokemon_v2_encounters', 'pokemon_v2_locationareaencounterrates', 'pokemon_v2_pokemongameindices', 'pokemon_v2_pokemonitems', 'pokemon_v2_pokemonspeciesflavortexts', 'pokemon_v2_versiongroup', 'pokemon_v2_versionnames', 'version_group_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_version_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_version_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_version_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_encounters = sgqlc.types.Field(pokemon_v2_encounter_bool_exp, graphql_name='pokemon_v2_encounters')
    pokemon_v2_locationareaencounterrates = sgqlc.types.Field(pokemon_v2_locationareaencounterrate_bool_exp, graphql_name='pokemon_v2_locationareaencounterrates')
    pokemon_v2_pokemongameindices = sgqlc.types.Field(pokemon_v2_pokemongameindex_bool_exp, graphql_name='pokemon_v2_pokemongameindices')
    pokemon_v2_pokemonitems = sgqlc.types.Field(pokemon_v2_pokemonitem_bool_exp, graphql_name='pokemon_v2_pokemonitems')
    pokemon_v2_pokemonspeciesflavortexts = sgqlc.types.Field(pokemon_v2_pokemonspeciesflavortext_bool_exp, graphql_name='pokemon_v2_pokemonspeciesflavortexts')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_bool_exp', graphql_name='pokemon_v2_versiongroup')
    pokemon_v2_versionnames = sgqlc.types.Field('pokemon_v2_versionname_bool_exp', graphql_name='pokemon_v2_versionnames')
    version_group_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='version_group_id')


class pokemon_v2_version_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_version_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_version_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_encounters_aggregate', 'pokemon_v2_locationareaencounterrates_aggregate', 'pokemon_v2_pokemongameindices_aggregate', 'pokemon_v2_pokemonitems_aggregate', 'pokemon_v2_pokemonspeciesflavortexts_aggregate', 'pokemon_v2_versiongroup', 'pokemon_v2_versionnames_aggregate', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_encounters_aggregate = sgqlc.types.Field(pokemon_v2_encounter_aggregate_order_by, graphql_name='pokemon_v2_encounters_aggregate')
    pokemon_v2_locationareaencounterrates_aggregate = sgqlc.types.Field(pokemon_v2_locationareaencounterrate_aggregate_order_by, graphql_name='pokemon_v2_locationareaencounterrates_aggregate')
    pokemon_v2_pokemongameindices_aggregate = sgqlc.types.Field(pokemon_v2_pokemongameindex_aggregate_order_by, graphql_name='pokemon_v2_pokemongameindices_aggregate')
    pokemon_v2_pokemonitems_aggregate = sgqlc.types.Field(pokemon_v2_pokemonitem_aggregate_order_by, graphql_name='pokemon_v2_pokemonitems_aggregate')
    pokemon_v2_pokemonspeciesflavortexts_aggregate = sgqlc.types.Field(pokemon_v2_pokemonspeciesflavortext_aggregate_order_by, graphql_name='pokemon_v2_pokemonspeciesflavortexts_aggregate')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup_order_by', graphql_name='pokemon_v2_versiongroup')
    pokemon_v2_versionnames_aggregate = sgqlc.types.Field('pokemon_v2_versionname_aggregate_order_by', graphql_name='pokemon_v2_versionnames_aggregate')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_version_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_version_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_version_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_version_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_version_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_version_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_version_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_versiongroup_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_versiongroup_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_versiongroup_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_versiongroup_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_versiongroup_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_versiongroup_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_versiongroup_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_versiongroup_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_versiongroup_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_versiongroup_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_versiongroup_variance_order_by', graphql_name='variance')


class pokemon_v2_versiongroup_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'order')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')


class pokemon_v2_versiongroup_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'generation_id', 'id', 'name', 'order', 'pokemon_v2_abilitychanges', 'pokemon_v2_abilityflavortexts', 'pokemon_v2_encounterslots', 'pokemon_v2_generation', 'pokemon_v2_itemflavortexts', 'pokemon_v2_machines', 'pokemon_v2_movechanges', 'pokemon_v2_moveeffectchanges', 'pokemon_v2_moveflavortexts', 'pokemon_v2_pokedexversiongroups', 'pokemon_v2_pokemonforms', 'pokemon_v2_pokemonmoves', 'pokemon_v2_versiongroupmovelearnmethods', 'pokemon_v2_versiongroupregions', 'pokemon_v2_versions')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_versiongroup_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_versiongroup_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_versiongroup_bool_exp')), graphql_name='_or')
    generation_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='generation_id')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    order = sgqlc.types.Field(Int_comparison_exp, graphql_name='order')
    pokemon_v2_abilitychanges = sgqlc.types.Field(pokemon_v2_abilitychange_bool_exp, graphql_name='pokemon_v2_abilitychanges')
    pokemon_v2_abilityflavortexts = sgqlc.types.Field(pokemon_v2_abilityflavortext_bool_exp, graphql_name='pokemon_v2_abilityflavortexts')
    pokemon_v2_encounterslots = sgqlc.types.Field(pokemon_v2_encounterslot_bool_exp, graphql_name='pokemon_v2_encounterslots')
    pokemon_v2_generation = sgqlc.types.Field(pokemon_v2_generation_bool_exp, graphql_name='pokemon_v2_generation')
    pokemon_v2_itemflavortexts = sgqlc.types.Field(pokemon_v2_itemflavortext_bool_exp, graphql_name='pokemon_v2_itemflavortexts')
    pokemon_v2_machines = sgqlc.types.Field(pokemon_v2_machine_bool_exp, graphql_name='pokemon_v2_machines')
    pokemon_v2_movechanges = sgqlc.types.Field(pokemon_v2_movechange_bool_exp, graphql_name='pokemon_v2_movechanges')
    pokemon_v2_moveeffectchanges = sgqlc.types.Field(pokemon_v2_moveeffectchange_bool_exp, graphql_name='pokemon_v2_moveeffectchanges')
    pokemon_v2_moveflavortexts = sgqlc.types.Field(pokemon_v2_moveflavortext_bool_exp, graphql_name='pokemon_v2_moveflavortexts')
    pokemon_v2_pokedexversiongroups = sgqlc.types.Field(pokemon_v2_pokedexversiongroup_bool_exp, graphql_name='pokemon_v2_pokedexversiongroups')
    pokemon_v2_pokemonforms = sgqlc.types.Field(pokemon_v2_pokemonform_bool_exp, graphql_name='pokemon_v2_pokemonforms')
    pokemon_v2_pokemonmoves = sgqlc.types.Field(pokemon_v2_pokemonmove_bool_exp, graphql_name='pokemon_v2_pokemonmoves')
    pokemon_v2_versiongroupmovelearnmethods = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_bool_exp', graphql_name='pokemon_v2_versiongroupmovelearnmethods')
    pokemon_v2_versiongroupregions = sgqlc.types.Field('pokemon_v2_versiongroupregion_bool_exp', graphql_name='pokemon_v2_versiongroupregions')
    pokemon_v2_versions = sgqlc.types.Field(pokemon_v2_version_bool_exp, graphql_name='pokemon_v2_versions')


class pokemon_v2_versiongroup_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'name', 'order')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    order = sgqlc.types.Field(order_by, graphql_name='order')


class pokemon_v2_versiongroup_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'name', 'order')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    order = sgqlc.types.Field(order_by, graphql_name='order')


class pokemon_v2_versiongroup_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'name', 'order', 'pokemon_v2_abilitychanges_aggregate', 'pokemon_v2_abilityflavortexts_aggregate', 'pokemon_v2_encounterslots_aggregate', 'pokemon_v2_generation', 'pokemon_v2_itemflavortexts_aggregate', 'pokemon_v2_machines_aggregate', 'pokemon_v2_movechanges_aggregate', 'pokemon_v2_moveeffectchanges_aggregate', 'pokemon_v2_moveflavortexts_aggregate', 'pokemon_v2_pokedexversiongroups_aggregate', 'pokemon_v2_pokemonforms_aggregate', 'pokemon_v2_pokemonmoves_aggregate', 'pokemon_v2_versiongroupmovelearnmethods_aggregate', 'pokemon_v2_versiongroupregions_aggregate', 'pokemon_v2_versions_aggregate')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    order = sgqlc.types.Field(order_by, graphql_name='order')
    pokemon_v2_abilitychanges_aggregate = sgqlc.types.Field(pokemon_v2_abilitychange_aggregate_order_by, graphql_name='pokemon_v2_abilitychanges_aggregate')
    pokemon_v2_abilityflavortexts_aggregate = sgqlc.types.Field(pokemon_v2_abilityflavortext_aggregate_order_by, graphql_name='pokemon_v2_abilityflavortexts_aggregate')
    pokemon_v2_encounterslots_aggregate = sgqlc.types.Field(pokemon_v2_encounterslot_aggregate_order_by, graphql_name='pokemon_v2_encounterslots_aggregate')
    pokemon_v2_generation = sgqlc.types.Field(pokemon_v2_generation_order_by, graphql_name='pokemon_v2_generation')
    pokemon_v2_itemflavortexts_aggregate = sgqlc.types.Field(pokemon_v2_itemflavortext_aggregate_order_by, graphql_name='pokemon_v2_itemflavortexts_aggregate')
    pokemon_v2_machines_aggregate = sgqlc.types.Field(pokemon_v2_machine_aggregate_order_by, graphql_name='pokemon_v2_machines_aggregate')
    pokemon_v2_movechanges_aggregate = sgqlc.types.Field(pokemon_v2_movechange_aggregate_order_by, graphql_name='pokemon_v2_movechanges_aggregate')
    pokemon_v2_moveeffectchanges_aggregate = sgqlc.types.Field(pokemon_v2_moveeffectchange_aggregate_order_by, graphql_name='pokemon_v2_moveeffectchanges_aggregate')
    pokemon_v2_moveflavortexts_aggregate = sgqlc.types.Field(pokemon_v2_moveflavortext_aggregate_order_by, graphql_name='pokemon_v2_moveflavortexts_aggregate')
    pokemon_v2_pokedexversiongroups_aggregate = sgqlc.types.Field(pokemon_v2_pokedexversiongroup_aggregate_order_by, graphql_name='pokemon_v2_pokedexversiongroups_aggregate')
    pokemon_v2_pokemonforms_aggregate = sgqlc.types.Field(pokemon_v2_pokemonform_aggregate_order_by, graphql_name='pokemon_v2_pokemonforms_aggregate')
    pokemon_v2_pokemonmoves_aggregate = sgqlc.types.Field(pokemon_v2_pokemonmove_aggregate_order_by, graphql_name='pokemon_v2_pokemonmoves_aggregate')
    pokemon_v2_versiongroupmovelearnmethods_aggregate = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_aggregate_order_by', graphql_name='pokemon_v2_versiongroupmovelearnmethods_aggregate')
    pokemon_v2_versiongroupregions_aggregate = sgqlc.types.Field('pokemon_v2_versiongroupregion_aggregate_order_by', graphql_name='pokemon_v2_versiongroupregions_aggregate')
    pokemon_v2_versions_aggregate = sgqlc.types.Field(pokemon_v2_version_aggregate_order_by, graphql_name='pokemon_v2_versions_aggregate')


class pokemon_v2_versiongroup_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'order')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')


class pokemon_v2_versiongroup_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'order')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')


class pokemon_v2_versiongroup_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'order')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')


class pokemon_v2_versiongroup_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'order')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')


class pokemon_v2_versiongroup_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'order')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')


class pokemon_v2_versiongroup_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'order')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')


class pokemon_v2_versiongroup_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'order')
    generation_id = sgqlc.types.Field(order_by, graphql_name='generation_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    order = sgqlc.types.Field(order_by, graphql_name='order')


class pokemon_v2_versiongroupmovelearnmethod_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_variance_order_by', graphql_name='variance')


class pokemon_v2_versiongroupmovelearnmethod_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_learn_method_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_versiongroupmovelearnmethod_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'move_learn_method_id', 'pokemon_v2_movelearnmethod', 'pokemon_v2_versiongroup', 'version_group_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_versiongroupmovelearnmethod_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_versiongroupmovelearnmethod_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    move_learn_method_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='move_learn_method_id')
    pokemon_v2_movelearnmethod = sgqlc.types.Field(pokemon_v2_movelearnmethod_bool_exp, graphql_name='pokemon_v2_movelearnmethod')
    pokemon_v2_versiongroup = sgqlc.types.Field(pokemon_v2_versiongroup_bool_exp, graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='version_group_id')


class pokemon_v2_versiongroupmovelearnmethod_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_learn_method_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_versiongroupmovelearnmethod_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_learn_method_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_versiongroupmovelearnmethod_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_learn_method_id', 'pokemon_v2_movelearnmethod', 'pokemon_v2_versiongroup', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    pokemon_v2_movelearnmethod = sgqlc.types.Field(pokemon_v2_movelearnmethod_order_by, graphql_name='pokemon_v2_movelearnmethod')
    pokemon_v2_versiongroup = sgqlc.types.Field(pokemon_v2_versiongroup_order_by, graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_versiongroupmovelearnmethod_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_learn_method_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_versiongroupmovelearnmethod_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_learn_method_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_versiongroupmovelearnmethod_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_learn_method_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_versiongroupmovelearnmethod_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_learn_method_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_versiongroupmovelearnmethod_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_learn_method_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_versiongroupmovelearnmethod_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_learn_method_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_versiongroupmovelearnmethod_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_learn_method_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    move_learn_method_id = sgqlc.types.Field(order_by, graphql_name='move_learn_method_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_versiongroupregion_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_versiongroupregion_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_versiongroupregion_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_versiongroupregion_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_versiongroupregion_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_versiongroupregion_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_versiongroupregion_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_versiongroupregion_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_versiongroupregion_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_versiongroupregion_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_versiongroupregion_variance_order_by', graphql_name='variance')


class pokemon_v2_versiongroupregion_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_versiongroupregion_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'pokemon_v2_region', 'pokemon_v2_versiongroup', 'region_id', 'version_group_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_versiongroupregion_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_versiongroupregion_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_versiongroupregion_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    pokemon_v2_region = sgqlc.types.Field(pokemon_v2_region_bool_exp, graphql_name='pokemon_v2_region')
    pokemon_v2_versiongroup = sgqlc.types.Field(pokemon_v2_versiongroup_bool_exp, graphql_name='pokemon_v2_versiongroup')
    region_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='region_id')
    version_group_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='version_group_id')


class pokemon_v2_versiongroupregion_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_versiongroupregion_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_versiongroupregion_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_v2_region', 'pokemon_v2_versiongroup', 'region_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    pokemon_v2_region = sgqlc.types.Field(pokemon_v2_region_order_by, graphql_name='pokemon_v2_region')
    pokemon_v2_versiongroup = sgqlc.types.Field(pokemon_v2_versiongroup_order_by, graphql_name='pokemon_v2_versiongroup')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_versiongroupregion_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_versiongroupregion_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_versiongroupregion_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_versiongroupregion_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_versiongroupregion_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_versiongroupregion_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_versiongroupregion_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id', 'version_group_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    region_id = sgqlc.types.Field(order_by, graphql_name='region_id')
    version_group_id = sgqlc.types.Field(order_by, graphql_name='version_group_id')


class pokemon_v2_versionname_aggregate_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_versionname_avg_order_by', graphql_name='avg')
    count = sgqlc.types.Field(order_by, graphql_name='count')
    max = sgqlc.types.Field('pokemon_v2_versionname_max_order_by', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_versionname_min_order_by', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_versionname_stddev_order_by', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_versionname_stddev_pop_order_by', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_versionname_stddev_samp_order_by', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_versionname_sum_order_by', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_versionname_var_pop_order_by', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_versionname_var_samp_order_by', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_versionname_variance_order_by', graphql_name='variance')


class pokemon_v2_versionname_avg_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_versionname_bool_exp(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('_and', '_not', '_or', 'id', 'language_id', 'name', 'pokemon_v2_language', 'pokemon_v2_version', 'version_id')
    _and = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_versionname_bool_exp')), graphql_name='_and')
    _not = sgqlc.types.Field('pokemon_v2_versionname_bool_exp', graphql_name='_not')
    _or = sgqlc.types.Field(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_versionname_bool_exp')), graphql_name='_or')
    id = sgqlc.types.Field(Int_comparison_exp, graphql_name='id')
    language_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='language_id')
    name = sgqlc.types.Field(String_comparison_exp, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_bool_exp, graphql_name='pokemon_v2_language')
    pokemon_v2_version = sgqlc.types.Field(pokemon_v2_version_bool_exp, graphql_name='pokemon_v2_version')
    version_id = sgqlc.types.Field(Int_comparison_exp, graphql_name='version_id')


class pokemon_v2_versionname_max_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_versionname_min_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_versionname_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_v2_language', 'pokemon_v2_version', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    name = sgqlc.types.Field(order_by, graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field(pokemon_v2_language_order_by, graphql_name='pokemon_v2_language')
    pokemon_v2_version = sgqlc.types.Field(pokemon_v2_version_order_by, graphql_name='pokemon_v2_version')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_versionname_stddev_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_versionname_stddev_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_versionname_stddev_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_versionname_sum_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_versionname_var_pop_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_versionname_var_samp_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')


class pokemon_v2_versionname_variance_order_by(sgqlc.types.Input):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'version_id')
    id = sgqlc.types.Field(order_by, graphql_name='id')
    language_id = sgqlc.types.Field(order_by, graphql_name='language_id')
    version_id = sgqlc.types.Field(order_by, graphql_name='version_id')



########################################################################
# Output Objects and Interfaces
########################################################################
class pokemon_v2_ability(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'is_main_series', 'name', 'pokemon_v2_abilitychanges', 'pokemon_v2_abilitychanges_aggregate', 'pokemon_v2_abilityeffecttexts', 'pokemon_v2_abilityeffecttexts_aggregate', 'pokemon_v2_abilityflavortexts', 'pokemon_v2_abilityflavortexts_aggregate', 'pokemon_v2_abilitynames', 'pokemon_v2_abilitynames_aggregate', 'pokemon_v2_generation', 'pokemon_v2_pokemonabilities', 'pokemon_v2_pokemonabilities_aggregate')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    is_main_series = sgqlc.types.Field(sgqlc.types.non_null(Boolean), graphql_name='is_main_series')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_abilitychanges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilitychange'))), graphql_name='pokemon_v2_abilitychanges', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilitychange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilitychanges_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_abilitychange_aggregate'), graphql_name='pokemon_v2_abilitychanges_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilitychange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilityeffecttexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilityeffecttext'))), graphql_name='pokemon_v2_abilityeffecttexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilityeffecttexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_abilityeffecttext_aggregate'), graphql_name='pokemon_v2_abilityeffecttexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilityflavortexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilityflavortext'))), graphql_name='pokemon_v2_abilityflavortexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilityflavortexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_abilityflavortext_aggregate'), graphql_name='pokemon_v2_abilityflavortexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilitynames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilityname'))), graphql_name='pokemon_v2_abilitynames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilitynames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_abilityname_aggregate'), graphql_name='pokemon_v2_abilitynames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_generation = sgqlc.types.Field('pokemon_v2_generation', graphql_name='pokemon_v2_generation')
    pokemon_v2_pokemonabilities = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonability'))), graphql_name='pokemon_v2_pokemonabilities', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonability_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonability_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonability_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonabilities_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonability_aggregate'), graphql_name='pokemon_v2_pokemonabilities_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonability_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonability_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonability_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_ability_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_ability_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_ability))), graphql_name='nodes')


class pokemon_v2_ability_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_ability_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_ability_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_ability_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_ability_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_ability_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_ability_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_ability_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_ability_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_ability_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_ability_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_ability_variance_fields', graphql_name='variance')


class pokemon_v2_ability_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_ability_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'name')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_ability_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'name')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_ability_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_ability_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_ability_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_ability_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_ability_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_ability_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_ability_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_abilitychange(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'pokemon_v2_ability', 'pokemon_v2_abilitychangeeffecttexts', 'pokemon_v2_abilitychangeeffecttexts_aggregate', 'pokemon_v2_versiongroup', 'version_group_id')
    ability_id = sgqlc.types.Field(Int, graphql_name='ability_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokemon_v2_ability = sgqlc.types.Field('pokemon_v2_ability', graphql_name='pokemon_v2_ability')
    pokemon_v2_abilitychangeeffecttexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilitychangeeffecttext'))), graphql_name='pokemon_v2_abilitychangeeffecttexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychangeeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychangeeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilitychangeeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilitychangeeffecttexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_abilitychangeeffecttext_aggregate'), graphql_name='pokemon_v2_abilitychangeeffecttexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychangeeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychangeeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilitychangeeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_abilitychange_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_abilitychange_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychange))), graphql_name='nodes')


class pokemon_v2_abilitychange_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_abilitychange_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychange_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_abilitychange_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_abilitychange_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_abilitychange_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_abilitychange_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_abilitychange_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_abilitychange_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_abilitychange_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_abilitychange_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_abilitychange_variance_fields', graphql_name='variance')


class pokemon_v2_abilitychange_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'version_group_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_abilitychange_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'version_group_id')
    ability_id = sgqlc.types.Field(Int, graphql_name='ability_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_abilitychange_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'version_group_id')
    ability_id = sgqlc.types.Field(Int, graphql_name='ability_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_abilitychange_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'version_group_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_abilitychange_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'version_group_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_abilitychange_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'version_group_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_abilitychange_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'version_group_id')
    ability_id = sgqlc.types.Field(Int, graphql_name='ability_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_abilitychange_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'version_group_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_abilitychange_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'version_group_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_abilitychange_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'version_group_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_abilitychangeeffecttext(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_change_id', 'effect', 'id', 'language_id', 'pokemon_v2_abilitychange', 'pokemon_v2_language')
    ability_change_id = sgqlc.types.Field(Int, graphql_name='ability_change_id')
    effect = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='effect')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_v2_abilitychange = sgqlc.types.Field('pokemon_v2_abilitychange', graphql_name='pokemon_v2_abilitychange')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')


class pokemon_v2_abilitychangeeffecttext_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychangeeffecttext))), graphql_name='nodes')


class pokemon_v2_abilitychangeeffecttext_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychangeeffecttext_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext_variance_fields', graphql_name='variance')


class pokemon_v2_abilitychangeeffecttext_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_change_id', 'id', 'language_id')
    ability_change_id = sgqlc.types.Field(Float, graphql_name='ability_change_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_abilitychangeeffecttext_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_change_id', 'effect', 'id', 'language_id')
    ability_change_id = sgqlc.types.Field(Int, graphql_name='ability_change_id')
    effect = sgqlc.types.Field(String, graphql_name='effect')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_abilitychangeeffecttext_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_change_id', 'effect', 'id', 'language_id')
    ability_change_id = sgqlc.types.Field(Int, graphql_name='ability_change_id')
    effect = sgqlc.types.Field(String, graphql_name='effect')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_abilitychangeeffecttext_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_change_id', 'id', 'language_id')
    ability_change_id = sgqlc.types.Field(Float, graphql_name='ability_change_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_abilitychangeeffecttext_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_change_id', 'id', 'language_id')
    ability_change_id = sgqlc.types.Field(Float, graphql_name='ability_change_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_abilitychangeeffecttext_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_change_id', 'id', 'language_id')
    ability_change_id = sgqlc.types.Field(Float, graphql_name='ability_change_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_abilitychangeeffecttext_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_change_id', 'id', 'language_id')
    ability_change_id = sgqlc.types.Field(Int, graphql_name='ability_change_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_abilitychangeeffecttext_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_change_id', 'id', 'language_id')
    ability_change_id = sgqlc.types.Field(Float, graphql_name='ability_change_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_abilitychangeeffecttext_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_change_id', 'id', 'language_id')
    ability_change_id = sgqlc.types.Field(Float, graphql_name='ability_change_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_abilitychangeeffecttext_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_change_id', 'id', 'language_id')
    ability_change_id = sgqlc.types.Field(Float, graphql_name='ability_change_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_abilityeffecttext(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'effect', 'id', 'language_id', 'pokemon_v2_ability', 'pokemon_v2_language', 'short_effect')
    ability_id = sgqlc.types.Field(Int, graphql_name='ability_id')
    effect = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='effect')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_v2_ability = sgqlc.types.Field('pokemon_v2_ability', graphql_name='pokemon_v2_ability')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    short_effect = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='short_effect')


class pokemon_v2_abilityeffecttext_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_abilityeffecttext_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityeffecttext))), graphql_name='nodes')


class pokemon_v2_abilityeffecttext_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_abilityeffecttext_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityeffecttext_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_abilityeffecttext_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_abilityeffecttext_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_abilityeffecttext_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_abilityeffecttext_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_abilityeffecttext_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_abilityeffecttext_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_abilityeffecttext_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_abilityeffecttext_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_abilityeffecttext_variance_fields', graphql_name='variance')


class pokemon_v2_abilityeffecttext_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_abilityeffecttext_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'effect', 'id', 'language_id', 'short_effect')
    ability_id = sgqlc.types.Field(Int, graphql_name='ability_id')
    effect = sgqlc.types.Field(String, graphql_name='effect')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    short_effect = sgqlc.types.Field(String, graphql_name='short_effect')


class pokemon_v2_abilityeffecttext_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'effect', 'id', 'language_id', 'short_effect')
    ability_id = sgqlc.types.Field(Int, graphql_name='ability_id')
    effect = sgqlc.types.Field(String, graphql_name='effect')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    short_effect = sgqlc.types.Field(String, graphql_name='short_effect')


class pokemon_v2_abilityeffecttext_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_abilityeffecttext_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_abilityeffecttext_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_abilityeffecttext_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(Int, graphql_name='ability_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_abilityeffecttext_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_abilityeffecttext_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_abilityeffecttext_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_abilityflavortext(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'flavor_text', 'id', 'language_id', 'pokemon_v2_ability', 'pokemon_v2_language', 'pokemon_v2_versiongroup', 'version_group_id')
    ability_id = sgqlc.types.Field(Int, graphql_name='ability_id')
    flavor_text = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='flavor_text')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_v2_ability = sgqlc.types.Field('pokemon_v2_ability', graphql_name='pokemon_v2_ability')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_abilityflavortext_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_abilityflavortext_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext))), graphql_name='nodes')


class pokemon_v2_abilityflavortext_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_abilityflavortext_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_abilityflavortext_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_abilityflavortext_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_abilityflavortext_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_abilityflavortext_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_abilityflavortext_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_abilityflavortext_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_abilityflavortext_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_abilityflavortext_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_abilityflavortext_variance_fields', graphql_name='variance')


class pokemon_v2_abilityflavortext_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id', 'version_group_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_abilityflavortext_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'flavor_text', 'id', 'language_id', 'version_group_id')
    ability_id = sgqlc.types.Field(Int, graphql_name='ability_id')
    flavor_text = sgqlc.types.Field(String, graphql_name='flavor_text')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_abilityflavortext_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'flavor_text', 'id', 'language_id', 'version_group_id')
    ability_id = sgqlc.types.Field(Int, graphql_name='ability_id')
    flavor_text = sgqlc.types.Field(String, graphql_name='flavor_text')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_abilityflavortext_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id', 'version_group_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_abilityflavortext_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id', 'version_group_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_abilityflavortext_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id', 'version_group_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_abilityflavortext_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id', 'version_group_id')
    ability_id = sgqlc.types.Field(Int, graphql_name='ability_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_abilityflavortext_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id', 'version_group_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_abilityflavortext_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id', 'version_group_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_abilityflavortext_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id', 'version_group_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_abilityname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id', 'name', 'pokemon_v2_ability', 'pokemon_v2_language')
    ability_id = sgqlc.types.Field(Int, graphql_name='ability_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_ability = sgqlc.types.Field('pokemon_v2_ability', graphql_name='pokemon_v2_ability')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')


class pokemon_v2_abilityname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_abilityname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityname))), graphql_name='nodes')


class pokemon_v2_abilityname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_abilityname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_abilityname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_abilityname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_abilityname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_abilityname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_abilityname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_abilityname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_abilityname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_abilityname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_abilityname_variance_fields', graphql_name='variance')


class pokemon_v2_abilityname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_abilityname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id', 'name')
    ability_id = sgqlc.types.Field(Int, graphql_name='ability_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_abilityname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id', 'name')
    ability_id = sgqlc.types.Field(Int, graphql_name='ability_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_abilityname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_abilityname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_abilityname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_abilityname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(Int, graphql_name='ability_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_abilityname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_abilityname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_abilityname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'language_id')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_berry(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'name', 'natural_gift_power', 'natural_gift_type_id', 'pokemon_v2_berryfirmness', 'pokemon_v2_berryflavormaps', 'pokemon_v2_berryflavormaps_aggregate', 'pokemon_v2_item', 'pokemon_v2_type', 'size', 'smoothness', 'soil_dryness')
    berry_firmness_id = sgqlc.types.Field(Int, graphql_name='berry_firmness_id')
    growth_time = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='growth_time')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    max_harvest = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='max_harvest')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    natural_gift_power = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='natural_gift_power')
    natural_gift_type_id = sgqlc.types.Field(Int, graphql_name='natural_gift_type_id')
    pokemon_v2_berryfirmness = sgqlc.types.Field('pokemon_v2_berryfirmness', graphql_name='pokemon_v2_berryfirmness')
    pokemon_v2_berryflavormaps = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryflavormap'))), graphql_name='pokemon_v2_berryflavormaps', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavormap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavormap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryflavormap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryflavormaps_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_berryflavormap_aggregate'), graphql_name='pokemon_v2_berryflavormaps_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavormap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavormap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryflavormap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_item = sgqlc.types.Field('pokemon_v2_item', graphql_name='pokemon_v2_item')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type', graphql_name='pokemon_v2_type')
    size = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='size')
    smoothness = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='smoothness')
    soil_dryness = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='soil_dryness')


class pokemon_v2_berry_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_berry_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry))), graphql_name='nodes')


class pokemon_v2_berry_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_berry_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_berry_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_berry_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_berry_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_berry_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_berry_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_berry_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_berry_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_berry_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_berry_variance_fields', graphql_name='variance')


class pokemon_v2_berry_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'natural_gift_power', 'natural_gift_type_id', 'size', 'smoothness', 'soil_dryness')
    berry_firmness_id = sgqlc.types.Field(Float, graphql_name='berry_firmness_id')
    growth_time = sgqlc.types.Field(Float, graphql_name='growth_time')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    max_harvest = sgqlc.types.Field(Float, graphql_name='max_harvest')
    natural_gift_power = sgqlc.types.Field(Float, graphql_name='natural_gift_power')
    natural_gift_type_id = sgqlc.types.Field(Float, graphql_name='natural_gift_type_id')
    size = sgqlc.types.Field(Float, graphql_name='size')
    smoothness = sgqlc.types.Field(Float, graphql_name='smoothness')
    soil_dryness = sgqlc.types.Field(Float, graphql_name='soil_dryness')


class pokemon_v2_berry_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'name', 'natural_gift_power', 'natural_gift_type_id', 'size', 'smoothness', 'soil_dryness')
    berry_firmness_id = sgqlc.types.Field(Int, graphql_name='berry_firmness_id')
    growth_time = sgqlc.types.Field(Int, graphql_name='growth_time')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    max_harvest = sgqlc.types.Field(Int, graphql_name='max_harvest')
    name = sgqlc.types.Field(String, graphql_name='name')
    natural_gift_power = sgqlc.types.Field(Int, graphql_name='natural_gift_power')
    natural_gift_type_id = sgqlc.types.Field(Int, graphql_name='natural_gift_type_id')
    size = sgqlc.types.Field(Int, graphql_name='size')
    smoothness = sgqlc.types.Field(Int, graphql_name='smoothness')
    soil_dryness = sgqlc.types.Field(Int, graphql_name='soil_dryness')


class pokemon_v2_berry_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'name', 'natural_gift_power', 'natural_gift_type_id', 'size', 'smoothness', 'soil_dryness')
    berry_firmness_id = sgqlc.types.Field(Int, graphql_name='berry_firmness_id')
    growth_time = sgqlc.types.Field(Int, graphql_name='growth_time')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    max_harvest = sgqlc.types.Field(Int, graphql_name='max_harvest')
    name = sgqlc.types.Field(String, graphql_name='name')
    natural_gift_power = sgqlc.types.Field(Int, graphql_name='natural_gift_power')
    natural_gift_type_id = sgqlc.types.Field(Int, graphql_name='natural_gift_type_id')
    size = sgqlc.types.Field(Int, graphql_name='size')
    smoothness = sgqlc.types.Field(Int, graphql_name='smoothness')
    soil_dryness = sgqlc.types.Field(Int, graphql_name='soil_dryness')


class pokemon_v2_berry_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'natural_gift_power', 'natural_gift_type_id', 'size', 'smoothness', 'soil_dryness')
    berry_firmness_id = sgqlc.types.Field(Float, graphql_name='berry_firmness_id')
    growth_time = sgqlc.types.Field(Float, graphql_name='growth_time')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    max_harvest = sgqlc.types.Field(Float, graphql_name='max_harvest')
    natural_gift_power = sgqlc.types.Field(Float, graphql_name='natural_gift_power')
    natural_gift_type_id = sgqlc.types.Field(Float, graphql_name='natural_gift_type_id')
    size = sgqlc.types.Field(Float, graphql_name='size')
    smoothness = sgqlc.types.Field(Float, graphql_name='smoothness')
    soil_dryness = sgqlc.types.Field(Float, graphql_name='soil_dryness')


class pokemon_v2_berry_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'natural_gift_power', 'natural_gift_type_id', 'size', 'smoothness', 'soil_dryness')
    berry_firmness_id = sgqlc.types.Field(Float, graphql_name='berry_firmness_id')
    growth_time = sgqlc.types.Field(Float, graphql_name='growth_time')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    max_harvest = sgqlc.types.Field(Float, graphql_name='max_harvest')
    natural_gift_power = sgqlc.types.Field(Float, graphql_name='natural_gift_power')
    natural_gift_type_id = sgqlc.types.Field(Float, graphql_name='natural_gift_type_id')
    size = sgqlc.types.Field(Float, graphql_name='size')
    smoothness = sgqlc.types.Field(Float, graphql_name='smoothness')
    soil_dryness = sgqlc.types.Field(Float, graphql_name='soil_dryness')


class pokemon_v2_berry_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'natural_gift_power', 'natural_gift_type_id', 'size', 'smoothness', 'soil_dryness')
    berry_firmness_id = sgqlc.types.Field(Float, graphql_name='berry_firmness_id')
    growth_time = sgqlc.types.Field(Float, graphql_name='growth_time')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    max_harvest = sgqlc.types.Field(Float, graphql_name='max_harvest')
    natural_gift_power = sgqlc.types.Field(Float, graphql_name='natural_gift_power')
    natural_gift_type_id = sgqlc.types.Field(Float, graphql_name='natural_gift_type_id')
    size = sgqlc.types.Field(Float, graphql_name='size')
    smoothness = sgqlc.types.Field(Float, graphql_name='smoothness')
    soil_dryness = sgqlc.types.Field(Float, graphql_name='soil_dryness')


class pokemon_v2_berry_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'natural_gift_power', 'natural_gift_type_id', 'size', 'smoothness', 'soil_dryness')
    berry_firmness_id = sgqlc.types.Field(Int, graphql_name='berry_firmness_id')
    growth_time = sgqlc.types.Field(Int, graphql_name='growth_time')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    max_harvest = sgqlc.types.Field(Int, graphql_name='max_harvest')
    natural_gift_power = sgqlc.types.Field(Int, graphql_name='natural_gift_power')
    natural_gift_type_id = sgqlc.types.Field(Int, graphql_name='natural_gift_type_id')
    size = sgqlc.types.Field(Int, graphql_name='size')
    smoothness = sgqlc.types.Field(Int, graphql_name='smoothness')
    soil_dryness = sgqlc.types.Field(Int, graphql_name='soil_dryness')


class pokemon_v2_berry_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'natural_gift_power', 'natural_gift_type_id', 'size', 'smoothness', 'soil_dryness')
    berry_firmness_id = sgqlc.types.Field(Float, graphql_name='berry_firmness_id')
    growth_time = sgqlc.types.Field(Float, graphql_name='growth_time')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    max_harvest = sgqlc.types.Field(Float, graphql_name='max_harvest')
    natural_gift_power = sgqlc.types.Field(Float, graphql_name='natural_gift_power')
    natural_gift_type_id = sgqlc.types.Field(Float, graphql_name='natural_gift_type_id')
    size = sgqlc.types.Field(Float, graphql_name='size')
    smoothness = sgqlc.types.Field(Float, graphql_name='smoothness')
    soil_dryness = sgqlc.types.Field(Float, graphql_name='soil_dryness')


class pokemon_v2_berry_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'natural_gift_power', 'natural_gift_type_id', 'size', 'smoothness', 'soil_dryness')
    berry_firmness_id = sgqlc.types.Field(Float, graphql_name='berry_firmness_id')
    growth_time = sgqlc.types.Field(Float, graphql_name='growth_time')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    max_harvest = sgqlc.types.Field(Float, graphql_name='max_harvest')
    natural_gift_power = sgqlc.types.Field(Float, graphql_name='natural_gift_power')
    natural_gift_type_id = sgqlc.types.Field(Float, graphql_name='natural_gift_type_id')
    size = sgqlc.types.Field(Float, graphql_name='size')
    smoothness = sgqlc.types.Field(Float, graphql_name='smoothness')
    soil_dryness = sgqlc.types.Field(Float, graphql_name='soil_dryness')


class pokemon_v2_berry_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'growth_time', 'id', 'item_id', 'max_harvest', 'natural_gift_power', 'natural_gift_type_id', 'size', 'smoothness', 'soil_dryness')
    berry_firmness_id = sgqlc.types.Field(Float, graphql_name='berry_firmness_id')
    growth_time = sgqlc.types.Field(Float, graphql_name='growth_time')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    max_harvest = sgqlc.types.Field(Float, graphql_name='max_harvest')
    natural_gift_power = sgqlc.types.Field(Float, graphql_name='natural_gift_power')
    natural_gift_type_id = sgqlc.types.Field(Float, graphql_name='natural_gift_type_id')
    size = sgqlc.types.Field(Float, graphql_name='size')
    smoothness = sgqlc.types.Field(Float, graphql_name='smoothness')
    soil_dryness = sgqlc.types.Field(Float, graphql_name='soil_dryness')


class pokemon_v2_berryfirmness(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_berries', 'pokemon_v2_berries_aggregate', 'pokemon_v2_berryfirmnessnames', 'pokemon_v2_berryfirmnessnames_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_berries = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry))), graphql_name='pokemon_v2_berries', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berry_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berries_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_berry_aggregate), graphql_name='pokemon_v2_berries_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berry_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryfirmnessnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryfirmnessname'))), graphql_name='pokemon_v2_berryfirmnessnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmnessname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmnessname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryfirmnessname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryfirmnessnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_berryfirmnessname_aggregate'), graphql_name='pokemon_v2_berryfirmnessnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmnessname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmnessname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryfirmnessname_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_berryfirmness_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_berryfirmness_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmness))), graphql_name='nodes')


class pokemon_v2_berryfirmness_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_berryfirmness_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmness_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_berryfirmness_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_berryfirmness_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_berryfirmness_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_berryfirmness_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_berryfirmness_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_berryfirmness_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_berryfirmness_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_berryfirmness_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_berryfirmness_variance_fields', graphql_name='variance')


class pokemon_v2_berryfirmness_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_berryfirmness_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_berryfirmness_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_berryfirmness_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_berryfirmness_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_berryfirmness_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_berryfirmness_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_berryfirmness_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_berryfirmness_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_berryfirmness_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_berryfirmnessname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'id', 'language_id', 'name', 'pokemon_v2_berryfirmness', 'pokemon_v2_language')
    berry_firmness_id = sgqlc.types.Field(Int, graphql_name='berry_firmness_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_berryfirmness = sgqlc.types.Field('pokemon_v2_berryfirmness', graphql_name='pokemon_v2_berryfirmness')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')


class pokemon_v2_berryfirmnessname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_berryfirmnessname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmnessname))), graphql_name='nodes')


class pokemon_v2_berryfirmnessname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_berryfirmnessname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmnessname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_berryfirmnessname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_berryfirmnessname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_berryfirmnessname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_berryfirmnessname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_berryfirmnessname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_berryfirmnessname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_berryfirmnessname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_berryfirmnessname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_berryfirmnessname_variance_fields', graphql_name='variance')


class pokemon_v2_berryfirmnessname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'id', 'language_id')
    berry_firmness_id = sgqlc.types.Field(Float, graphql_name='berry_firmness_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_berryfirmnessname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'id', 'language_id', 'name')
    berry_firmness_id = sgqlc.types.Field(Int, graphql_name='berry_firmness_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_berryfirmnessname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'id', 'language_id', 'name')
    berry_firmness_id = sgqlc.types.Field(Int, graphql_name='berry_firmness_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_berryfirmnessname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'id', 'language_id')
    berry_firmness_id = sgqlc.types.Field(Float, graphql_name='berry_firmness_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_berryfirmnessname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'id', 'language_id')
    berry_firmness_id = sgqlc.types.Field(Float, graphql_name='berry_firmness_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_berryfirmnessname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'id', 'language_id')
    berry_firmness_id = sgqlc.types.Field(Float, graphql_name='berry_firmness_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_berryfirmnessname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'id', 'language_id')
    berry_firmness_id = sgqlc.types.Field(Int, graphql_name='berry_firmness_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_berryfirmnessname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'id', 'language_id')
    berry_firmness_id = sgqlc.types.Field(Float, graphql_name='berry_firmness_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_berryfirmnessname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'id', 'language_id')
    berry_firmness_id = sgqlc.types.Field(Float, graphql_name='berry_firmness_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_berryfirmnessname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_firmness_id', 'id', 'language_id')
    berry_firmness_id = sgqlc.types.Field(Float, graphql_name='berry_firmness_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_berryflavor(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id', 'name', 'pokemon_v2_natures_by_likes_flavor_id', 'pokemon_v2_natures_by_likes_flavor_id_aggregate', 'pokemon_v2_berryflavormaps', 'pokemon_v2_berryflavormaps_aggregate', 'pokemon_v2_berryflavornames', 'pokemon_v2_berryflavornames_aggregate', 'pokemon_v2_contesttype', 'pokemon_v2_natures', 'pokemon_v2_natures_aggregate')
    contest_type_id = sgqlc.types.Field(Int, graphql_name='contest_type_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_natures_by_likes_flavor_id = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_nature'))), graphql_name='pokemonV2NaturesByLikesFlavorId', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_nature_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_natures_by_likes_flavor_id_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_nature_aggregate'), graphql_name='pokemonV2NaturesByLikesFlavorId_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_nature_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryflavormaps = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryflavormap'))), graphql_name='pokemon_v2_berryflavormaps', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavormap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavormap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryflavormap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryflavormaps_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_berryflavormap_aggregate'), graphql_name='pokemon_v2_berryflavormaps_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavormap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavormap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryflavormap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryflavornames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryflavorname'))), graphql_name='pokemon_v2_berryflavornames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavorname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavorname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryflavorname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryflavornames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_berryflavorname_aggregate'), graphql_name='pokemon_v2_berryflavornames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavorname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavorname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryflavorname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesttype = sgqlc.types.Field('pokemon_v2_contesttype', graphql_name='pokemon_v2_contesttype')
    pokemon_v2_natures = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_nature'))), graphql_name='pokemon_v2_natures', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_nature_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_natures_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_nature_aggregate'), graphql_name='pokemon_v2_natures_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_nature_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_berryflavor_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_berryflavor_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavor))), graphql_name='nodes')


class pokemon_v2_berryflavor_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_berryflavor_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavor_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_berryflavor_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_berryflavor_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_berryflavor_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_berryflavor_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_berryflavor_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_berryflavor_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_berryflavor_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_berryflavor_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_berryflavor_variance_fields', graphql_name='variance')


class pokemon_v2_berryflavor_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id')
    contest_type_id = sgqlc.types.Field(Float, graphql_name='contest_type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_berryflavor_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id', 'name')
    contest_type_id = sgqlc.types.Field(Int, graphql_name='contest_type_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_berryflavor_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id', 'name')
    contest_type_id = sgqlc.types.Field(Int, graphql_name='contest_type_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_berryflavor_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id')
    contest_type_id = sgqlc.types.Field(Float, graphql_name='contest_type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_berryflavor_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id')
    contest_type_id = sgqlc.types.Field(Float, graphql_name='contest_type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_berryflavor_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id')
    contest_type_id = sgqlc.types.Field(Float, graphql_name='contest_type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_berryflavor_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id')
    contest_type_id = sgqlc.types.Field(Int, graphql_name='contest_type_id')
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_berryflavor_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id')
    contest_type_id = sgqlc.types.Field(Float, graphql_name='contest_type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_berryflavor_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id')
    contest_type_id = sgqlc.types.Field(Float, graphql_name='contest_type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_berryflavor_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id')
    contest_type_id = sgqlc.types.Field(Float, graphql_name='contest_type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_berryflavormap(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'berry_id', 'id', 'pokemon_v2_berry', 'pokemon_v2_berryflavor', 'potency')
    berry_flavor_id = sgqlc.types.Field(Int, graphql_name='berry_flavor_id')
    berry_id = sgqlc.types.Field(Int, graphql_name='berry_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokemon_v2_berry = sgqlc.types.Field('pokemon_v2_berry', graphql_name='pokemon_v2_berry')
    pokemon_v2_berryflavor = sgqlc.types.Field('pokemon_v2_berryflavor', graphql_name='pokemon_v2_berryflavor')
    potency = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='potency')


class pokemon_v2_berryflavormap_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_berryflavormap_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavormap))), graphql_name='nodes')


class pokemon_v2_berryflavormap_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_berryflavormap_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavormap_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_berryflavormap_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_berryflavormap_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_berryflavormap_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_berryflavormap_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_berryflavormap_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_berryflavormap_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_berryflavormap_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_berryflavormap_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_berryflavormap_variance_fields', graphql_name='variance')


class pokemon_v2_berryflavormap_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'berry_id', 'id', 'potency')
    berry_flavor_id = sgqlc.types.Field(Float, graphql_name='berry_flavor_id')
    berry_id = sgqlc.types.Field(Float, graphql_name='berry_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    potency = sgqlc.types.Field(Float, graphql_name='potency')


class pokemon_v2_berryflavormap_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'berry_id', 'id', 'potency')
    berry_flavor_id = sgqlc.types.Field(Int, graphql_name='berry_flavor_id')
    berry_id = sgqlc.types.Field(Int, graphql_name='berry_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    potency = sgqlc.types.Field(Int, graphql_name='potency')


class pokemon_v2_berryflavormap_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'berry_id', 'id', 'potency')
    berry_flavor_id = sgqlc.types.Field(Int, graphql_name='berry_flavor_id')
    berry_id = sgqlc.types.Field(Int, graphql_name='berry_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    potency = sgqlc.types.Field(Int, graphql_name='potency')


class pokemon_v2_berryflavormap_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'berry_id', 'id', 'potency')
    berry_flavor_id = sgqlc.types.Field(Float, graphql_name='berry_flavor_id')
    berry_id = sgqlc.types.Field(Float, graphql_name='berry_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    potency = sgqlc.types.Field(Float, graphql_name='potency')


class pokemon_v2_berryflavormap_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'berry_id', 'id', 'potency')
    berry_flavor_id = sgqlc.types.Field(Float, graphql_name='berry_flavor_id')
    berry_id = sgqlc.types.Field(Float, graphql_name='berry_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    potency = sgqlc.types.Field(Float, graphql_name='potency')


class pokemon_v2_berryflavormap_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'berry_id', 'id', 'potency')
    berry_flavor_id = sgqlc.types.Field(Float, graphql_name='berry_flavor_id')
    berry_id = sgqlc.types.Field(Float, graphql_name='berry_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    potency = sgqlc.types.Field(Float, graphql_name='potency')


class pokemon_v2_berryflavormap_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'berry_id', 'id', 'potency')
    berry_flavor_id = sgqlc.types.Field(Int, graphql_name='berry_flavor_id')
    berry_id = sgqlc.types.Field(Int, graphql_name='berry_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    potency = sgqlc.types.Field(Int, graphql_name='potency')


class pokemon_v2_berryflavormap_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'berry_id', 'id', 'potency')
    berry_flavor_id = sgqlc.types.Field(Float, graphql_name='berry_flavor_id')
    berry_id = sgqlc.types.Field(Float, graphql_name='berry_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    potency = sgqlc.types.Field(Float, graphql_name='potency')


class pokemon_v2_berryflavormap_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'berry_id', 'id', 'potency')
    berry_flavor_id = sgqlc.types.Field(Float, graphql_name='berry_flavor_id')
    berry_id = sgqlc.types.Field(Float, graphql_name='berry_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    potency = sgqlc.types.Field(Float, graphql_name='potency')


class pokemon_v2_berryflavormap_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'berry_id', 'id', 'potency')
    berry_flavor_id = sgqlc.types.Field(Float, graphql_name='berry_flavor_id')
    berry_id = sgqlc.types.Field(Float, graphql_name='berry_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    potency = sgqlc.types.Field(Float, graphql_name='potency')


class pokemon_v2_berryflavorname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'id', 'language_id', 'name', 'pokemon_v2_berryflavor', 'pokemon_v2_language')
    berry_flavor_id = sgqlc.types.Field(Int, graphql_name='berry_flavor_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_berryflavor = sgqlc.types.Field('pokemon_v2_berryflavor', graphql_name='pokemon_v2_berryflavor')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')


class pokemon_v2_berryflavorname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_berryflavorname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavorname))), graphql_name='nodes')


class pokemon_v2_berryflavorname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_berryflavorname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavorname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_berryflavorname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_berryflavorname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_berryflavorname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_berryflavorname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_berryflavorname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_berryflavorname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_berryflavorname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_berryflavorname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_berryflavorname_variance_fields', graphql_name='variance')


class pokemon_v2_berryflavorname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'id', 'language_id')
    berry_flavor_id = sgqlc.types.Field(Float, graphql_name='berry_flavor_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_berryflavorname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'id', 'language_id', 'name')
    berry_flavor_id = sgqlc.types.Field(Int, graphql_name='berry_flavor_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_berryflavorname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'id', 'language_id', 'name')
    berry_flavor_id = sgqlc.types.Field(Int, graphql_name='berry_flavor_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_berryflavorname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'id', 'language_id')
    berry_flavor_id = sgqlc.types.Field(Float, graphql_name='berry_flavor_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_berryflavorname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'id', 'language_id')
    berry_flavor_id = sgqlc.types.Field(Float, graphql_name='berry_flavor_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_berryflavorname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'id', 'language_id')
    berry_flavor_id = sgqlc.types.Field(Float, graphql_name='berry_flavor_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_berryflavorname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'id', 'language_id')
    berry_flavor_id = sgqlc.types.Field(Int, graphql_name='berry_flavor_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_berryflavorname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'id', 'language_id')
    berry_flavor_id = sgqlc.types.Field(Float, graphql_name='berry_flavor_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_berryflavorname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'id', 'language_id')
    berry_flavor_id = sgqlc.types.Field(Float, graphql_name='berry_flavor_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_berryflavorname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('berry_flavor_id', 'id', 'language_id')
    berry_flavor_id = sgqlc.types.Field(Float, graphql_name='berry_flavor_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_characteristic(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('gene_mod_5', 'id', 'pokemon_v2_characteristicdescriptions', 'pokemon_v2_characteristicdescriptions_aggregate', 'pokemon_v2_stat', 'stat_id')
    gene_mod_5 = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='gene_mod_5')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokemon_v2_characteristicdescriptions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_characteristicdescription'))), graphql_name='pokemon_v2_characteristicdescriptions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristicdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristicdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_characteristicdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_characteristicdescriptions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_characteristicdescription_aggregate'), graphql_name='pokemon_v2_characteristicdescriptions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristicdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristicdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_characteristicdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_stat = sgqlc.types.Field('pokemon_v2_stat', graphql_name='pokemon_v2_stat')
    stat_id = sgqlc.types.Field(Int, graphql_name='stat_id')


class pokemon_v2_characteristic_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_characteristic_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristic))), graphql_name='nodes')


class pokemon_v2_characteristic_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_characteristic_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristic_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_characteristic_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_characteristic_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_characteristic_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_characteristic_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_characteristic_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_characteristic_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_characteristic_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_characteristic_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_characteristic_variance_fields', graphql_name='variance')


class pokemon_v2_characteristic_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('gene_mod_5', 'id', 'stat_id')
    gene_mod_5 = sgqlc.types.Field(Float, graphql_name='gene_mod_5')
    id = sgqlc.types.Field(Float, graphql_name='id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_characteristic_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('gene_mod_5', 'id', 'stat_id')
    gene_mod_5 = sgqlc.types.Field(Int, graphql_name='gene_mod_5')
    id = sgqlc.types.Field(Int, graphql_name='id')
    stat_id = sgqlc.types.Field(Int, graphql_name='stat_id')


class pokemon_v2_characteristic_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('gene_mod_5', 'id', 'stat_id')
    gene_mod_5 = sgqlc.types.Field(Int, graphql_name='gene_mod_5')
    id = sgqlc.types.Field(Int, graphql_name='id')
    stat_id = sgqlc.types.Field(Int, graphql_name='stat_id')


class pokemon_v2_characteristic_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('gene_mod_5', 'id', 'stat_id')
    gene_mod_5 = sgqlc.types.Field(Float, graphql_name='gene_mod_5')
    id = sgqlc.types.Field(Float, graphql_name='id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_characteristic_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('gene_mod_5', 'id', 'stat_id')
    gene_mod_5 = sgqlc.types.Field(Float, graphql_name='gene_mod_5')
    id = sgqlc.types.Field(Float, graphql_name='id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_characteristic_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('gene_mod_5', 'id', 'stat_id')
    gene_mod_5 = sgqlc.types.Field(Float, graphql_name='gene_mod_5')
    id = sgqlc.types.Field(Float, graphql_name='id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_characteristic_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('gene_mod_5', 'id', 'stat_id')
    gene_mod_5 = sgqlc.types.Field(Int, graphql_name='gene_mod_5')
    id = sgqlc.types.Field(Int, graphql_name='id')
    stat_id = sgqlc.types.Field(Int, graphql_name='stat_id')


class pokemon_v2_characteristic_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('gene_mod_5', 'id', 'stat_id')
    gene_mod_5 = sgqlc.types.Field(Float, graphql_name='gene_mod_5')
    id = sgqlc.types.Field(Float, graphql_name='id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_characteristic_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('gene_mod_5', 'id', 'stat_id')
    gene_mod_5 = sgqlc.types.Field(Float, graphql_name='gene_mod_5')
    id = sgqlc.types.Field(Float, graphql_name='id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_characteristic_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('gene_mod_5', 'id', 'stat_id')
    gene_mod_5 = sgqlc.types.Field(Float, graphql_name='gene_mod_5')
    id = sgqlc.types.Field(Float, graphql_name='id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_characteristicdescription(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('characteristic_id', 'description', 'id', 'language_id', 'pokemon_v2_characteristic', 'pokemon_v2_language')
    characteristic_id = sgqlc.types.Field(Int, graphql_name='characteristic_id')
    description = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='description')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_v2_characteristic = sgqlc.types.Field('pokemon_v2_characteristic', graphql_name='pokemon_v2_characteristic')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')


class pokemon_v2_characteristicdescription_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_characteristicdescription_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristicdescription))), graphql_name='nodes')


class pokemon_v2_characteristicdescription_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_characteristicdescription_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristicdescription_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_characteristicdescription_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_characteristicdescription_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_characteristicdescription_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_characteristicdescription_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_characteristicdescription_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_characteristicdescription_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_characteristicdescription_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_characteristicdescription_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_characteristicdescription_variance_fields', graphql_name='variance')


class pokemon_v2_characteristicdescription_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('characteristic_id', 'id', 'language_id')
    characteristic_id = sgqlc.types.Field(Float, graphql_name='characteristic_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_characteristicdescription_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('characteristic_id', 'description', 'id', 'language_id')
    characteristic_id = sgqlc.types.Field(Int, graphql_name='characteristic_id')
    description = sgqlc.types.Field(String, graphql_name='description')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_characteristicdescription_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('characteristic_id', 'description', 'id', 'language_id')
    characteristic_id = sgqlc.types.Field(Int, graphql_name='characteristic_id')
    description = sgqlc.types.Field(String, graphql_name='description')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_characteristicdescription_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('characteristic_id', 'id', 'language_id')
    characteristic_id = sgqlc.types.Field(Float, graphql_name='characteristic_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_characteristicdescription_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('characteristic_id', 'id', 'language_id')
    characteristic_id = sgqlc.types.Field(Float, graphql_name='characteristic_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_characteristicdescription_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('characteristic_id', 'id', 'language_id')
    characteristic_id = sgqlc.types.Field(Float, graphql_name='characteristic_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_characteristicdescription_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('characteristic_id', 'id', 'language_id')
    characteristic_id = sgqlc.types.Field(Int, graphql_name='characteristic_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_characteristicdescription_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('characteristic_id', 'id', 'language_id')
    characteristic_id = sgqlc.types.Field(Float, graphql_name='characteristic_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_characteristicdescription_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('characteristic_id', 'id', 'language_id')
    characteristic_id = sgqlc.types.Field(Float, graphql_name='characteristic_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_characteristicdescription_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('characteristic_id', 'id', 'language_id')
    characteristic_id = sgqlc.types.Field(Float, graphql_name='characteristic_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_contestcombo(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'pokemon_v2_move_by_second_move_id', 'pokemon_v2_move', 'second_move_id')
    first_move_id = sgqlc.types.Field(Int, graphql_name='first_move_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokemon_v2_move_by_second_move_id = sgqlc.types.Field('pokemon_v2_move', graphql_name='pokemonV2MoveBySecondMoveId')
    pokemon_v2_move = sgqlc.types.Field('pokemon_v2_move', graphql_name='pokemon_v2_move')
    second_move_id = sgqlc.types.Field(Int, graphql_name='second_move_id')


class pokemon_v2_contestcombo_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_contestcombo_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contestcombo))), graphql_name='nodes')


class pokemon_v2_contestcombo_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_contestcombo_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contestcombo_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_contestcombo_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_contestcombo_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_contestcombo_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_contestcombo_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_contestcombo_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_contestcombo_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_contestcombo_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_contestcombo_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_contestcombo_variance_fields', graphql_name='variance')


class pokemon_v2_contestcombo_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(Float, graphql_name='first_move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    second_move_id = sgqlc.types.Field(Float, graphql_name='second_move_id')


class pokemon_v2_contestcombo_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(Int, graphql_name='first_move_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    second_move_id = sgqlc.types.Field(Int, graphql_name='second_move_id')


class pokemon_v2_contestcombo_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(Int, graphql_name='first_move_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    second_move_id = sgqlc.types.Field(Int, graphql_name='second_move_id')


class pokemon_v2_contestcombo_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(Float, graphql_name='first_move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    second_move_id = sgqlc.types.Field(Float, graphql_name='second_move_id')


class pokemon_v2_contestcombo_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(Float, graphql_name='first_move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    second_move_id = sgqlc.types.Field(Float, graphql_name='second_move_id')


class pokemon_v2_contestcombo_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(Float, graphql_name='first_move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    second_move_id = sgqlc.types.Field(Float, graphql_name='second_move_id')


class pokemon_v2_contestcombo_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(Int, graphql_name='first_move_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    second_move_id = sgqlc.types.Field(Int, graphql_name='second_move_id')


class pokemon_v2_contestcombo_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(Float, graphql_name='first_move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    second_move_id = sgqlc.types.Field(Float, graphql_name='second_move_id')


class pokemon_v2_contestcombo_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(Float, graphql_name='first_move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    second_move_id = sgqlc.types.Field(Float, graphql_name='second_move_id')


class pokemon_v2_contestcombo_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(Float, graphql_name='first_move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    second_move_id = sgqlc.types.Field(Float, graphql_name='second_move_id')


class pokemon_v2_contesteffect(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id', 'jam', 'pokemon_v2_contesteffecteffecttexts', 'pokemon_v2_contesteffecteffecttexts_aggregate', 'pokemon_v2_contesteffectflavortexts', 'pokemon_v2_contesteffectflavortexts_aggregate', 'pokemon_v2_moves', 'pokemon_v2_moves_aggregate')
    appeal = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='appeal')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    jam = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='jam')
    pokemon_v2_contesteffecteffecttexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contesteffecteffecttext'))), graphql_name='pokemon_v2_contesteffecteffecttexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesteffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesteffecteffecttexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_contesteffecteffecttext_aggregate'), graphql_name='pokemon_v2_contesteffecteffecttexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesteffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesteffectflavortexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contesteffectflavortext'))), graphql_name='pokemon_v2_contesteffectflavortexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffectflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffectflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesteffectflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesteffectflavortexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_contesteffectflavortext_aggregate'), graphql_name='pokemon_v2_contesteffectflavortexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffectflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffectflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesteffectflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moves = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_move'))), graphql_name='pokemon_v2_moves', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_move_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moves_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_move_aggregate'), graphql_name='pokemon_v2_moves_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_move_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_contesteffect_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_contesteffect_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffect))), graphql_name='nodes')


class pokemon_v2_contesteffect_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_contesteffect_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffect_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_contesteffect_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_contesteffect_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_contesteffect_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_contesteffect_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_contesteffect_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_contesteffect_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_contesteffect_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_contesteffect_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_contesteffect_variance_fields', graphql_name='variance')


class pokemon_v2_contesteffect_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id', 'jam')
    appeal = sgqlc.types.Field(Float, graphql_name='appeal')
    id = sgqlc.types.Field(Float, graphql_name='id')
    jam = sgqlc.types.Field(Float, graphql_name='jam')


class pokemon_v2_contesteffect_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id', 'jam')
    appeal = sgqlc.types.Field(Int, graphql_name='appeal')
    id = sgqlc.types.Field(Int, graphql_name='id')
    jam = sgqlc.types.Field(Int, graphql_name='jam')


class pokemon_v2_contesteffect_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id', 'jam')
    appeal = sgqlc.types.Field(Int, graphql_name='appeal')
    id = sgqlc.types.Field(Int, graphql_name='id')
    jam = sgqlc.types.Field(Int, graphql_name='jam')


class pokemon_v2_contesteffect_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id', 'jam')
    appeal = sgqlc.types.Field(Float, graphql_name='appeal')
    id = sgqlc.types.Field(Float, graphql_name='id')
    jam = sgqlc.types.Field(Float, graphql_name='jam')


class pokemon_v2_contesteffect_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id', 'jam')
    appeal = sgqlc.types.Field(Float, graphql_name='appeal')
    id = sgqlc.types.Field(Float, graphql_name='id')
    jam = sgqlc.types.Field(Float, graphql_name='jam')


class pokemon_v2_contesteffect_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id', 'jam')
    appeal = sgqlc.types.Field(Float, graphql_name='appeal')
    id = sgqlc.types.Field(Float, graphql_name='id')
    jam = sgqlc.types.Field(Float, graphql_name='jam')


class pokemon_v2_contesteffect_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id', 'jam')
    appeal = sgqlc.types.Field(Int, graphql_name='appeal')
    id = sgqlc.types.Field(Int, graphql_name='id')
    jam = sgqlc.types.Field(Int, graphql_name='jam')


class pokemon_v2_contesteffect_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id', 'jam')
    appeal = sgqlc.types.Field(Float, graphql_name='appeal')
    id = sgqlc.types.Field(Float, graphql_name='id')
    jam = sgqlc.types.Field(Float, graphql_name='jam')


class pokemon_v2_contesteffect_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id', 'jam')
    appeal = sgqlc.types.Field(Float, graphql_name='appeal')
    id = sgqlc.types.Field(Float, graphql_name='id')
    jam = sgqlc.types.Field(Float, graphql_name='jam')


class pokemon_v2_contesteffect_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id', 'jam')
    appeal = sgqlc.types.Field(Float, graphql_name='appeal')
    id = sgqlc.types.Field(Float, graphql_name='id')
    jam = sgqlc.types.Field(Float, graphql_name='jam')


class pokemon_v2_contesteffecteffecttext(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'effect', 'id', 'language_id', 'pokemon_v2_contesteffect', 'pokemon_v2_language')
    contest_effect_id = sgqlc.types.Field(Int, graphql_name='contest_effect_id')
    effect = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='effect')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_v2_contesteffect = sgqlc.types.Field('pokemon_v2_contesteffect', graphql_name='pokemon_v2_contesteffect')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')


class pokemon_v2_contesteffecteffecttext_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffecteffecttext))), graphql_name='nodes')


class pokemon_v2_contesteffecteffecttext_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffecteffecttext_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext_variance_fields', graphql_name='variance')


class pokemon_v2_contesteffecteffecttext_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(Float, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_contesteffecteffecttext_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'effect', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(Int, graphql_name='contest_effect_id')
    effect = sgqlc.types.Field(String, graphql_name='effect')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_contesteffecteffecttext_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'effect', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(Int, graphql_name='contest_effect_id')
    effect = sgqlc.types.Field(String, graphql_name='effect')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_contesteffecteffecttext_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(Float, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_contesteffecteffecttext_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(Float, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_contesteffecteffecttext_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(Float, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_contesteffecteffecttext_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(Int, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_contesteffecteffecttext_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(Float, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_contesteffecteffecttext_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(Float, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_contesteffecteffecttext_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(Float, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_contesteffectflavortext(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'flavor_text', 'id', 'language_id', 'pokemon_v2_contesteffect', 'pokemon_v2_language')
    contest_effect_id = sgqlc.types.Field(Int, graphql_name='contest_effect_id')
    flavor_text = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='flavor_text')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_v2_contesteffect = sgqlc.types.Field('pokemon_v2_contesteffect', graphql_name='pokemon_v2_contesteffect')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')


class pokemon_v2_contesteffectflavortext_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffectflavortext))), graphql_name='nodes')


class pokemon_v2_contesteffectflavortext_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffectflavortext_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_contesteffectflavortext_variance_fields', graphql_name='variance')


class pokemon_v2_contesteffectflavortext_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(Float, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_contesteffectflavortext_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'flavor_text', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(Int, graphql_name='contest_effect_id')
    flavor_text = sgqlc.types.Field(String, graphql_name='flavor_text')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_contesteffectflavortext_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'flavor_text', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(Int, graphql_name='contest_effect_id')
    flavor_text = sgqlc.types.Field(String, graphql_name='flavor_text')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_contesteffectflavortext_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(Float, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_contesteffectflavortext_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(Float, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_contesteffectflavortext_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(Float, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_contesteffectflavortext_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(Int, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_contesteffectflavortext_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(Float, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_contesteffectflavortext_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(Float, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_contesteffectflavortext_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_effect_id', 'id', 'language_id')
    contest_effect_id = sgqlc.types.Field(Float, graphql_name='contest_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_contesttype(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_berryflavors', 'pokemon_v2_berryflavors_aggregate', 'pokemon_v2_contesttypenames', 'pokemon_v2_contesttypenames_aggregate', 'pokemon_v2_moves', 'pokemon_v2_moves_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_berryflavors = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavor))), graphql_name='pokemon_v2_berryflavors', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavor_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavor_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryflavor_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryflavors_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_berryflavor_aggregate), graphql_name='pokemon_v2_berryflavors_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavor_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavor_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryflavor_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesttypenames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contesttypename'))), graphql_name='pokemon_v2_contesttypenames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttypename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttypename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesttypename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesttypenames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_contesttypename_aggregate'), graphql_name='pokemon_v2_contesttypenames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttypename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttypename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesttypename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moves = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_move'))), graphql_name='pokemon_v2_moves', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_move_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moves_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_move_aggregate'), graphql_name='pokemon_v2_moves_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_move_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_contesttype_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_contesttype_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttype))), graphql_name='nodes')


class pokemon_v2_contesttype_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_contesttype_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttype_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_contesttype_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_contesttype_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_contesttype_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_contesttype_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_contesttype_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_contesttype_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_contesttype_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_contesttype_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_contesttype_variance_fields', graphql_name='variance')


class pokemon_v2_contesttype_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_contesttype_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_contesttype_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_contesttype_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_contesttype_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_contesttype_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_contesttype_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_contesttype_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_contesttype_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_contesttype_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_contesttypename(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('color', 'contest_type_id', 'flavor', 'id', 'language_id', 'name', 'pokemon_v2_contesttype', 'pokemon_v2_language')
    color = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='color')
    contest_type_id = sgqlc.types.Field(Int, graphql_name='contest_type_id')
    flavor = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='flavor')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_contesttype = sgqlc.types.Field('pokemon_v2_contesttype', graphql_name='pokemon_v2_contesttype')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')


class pokemon_v2_contesttypename_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_contesttypename_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttypename))), graphql_name='nodes')


class pokemon_v2_contesttypename_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_contesttypename_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttypename_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_contesttypename_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_contesttypename_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_contesttypename_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_contesttypename_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_contesttypename_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_contesttypename_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_contesttypename_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_contesttypename_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_contesttypename_variance_fields', graphql_name='variance')


class pokemon_v2_contesttypename_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id', 'language_id')
    contest_type_id = sgqlc.types.Field(Float, graphql_name='contest_type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_contesttypename_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('color', 'contest_type_id', 'flavor', 'id', 'language_id', 'name')
    color = sgqlc.types.Field(String, graphql_name='color')
    contest_type_id = sgqlc.types.Field(Int, graphql_name='contest_type_id')
    flavor = sgqlc.types.Field(String, graphql_name='flavor')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_contesttypename_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('color', 'contest_type_id', 'flavor', 'id', 'language_id', 'name')
    color = sgqlc.types.Field(String, graphql_name='color')
    contest_type_id = sgqlc.types.Field(Int, graphql_name='contest_type_id')
    flavor = sgqlc.types.Field(String, graphql_name='flavor')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_contesttypename_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id', 'language_id')
    contest_type_id = sgqlc.types.Field(Float, graphql_name='contest_type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_contesttypename_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id', 'language_id')
    contest_type_id = sgqlc.types.Field(Float, graphql_name='contest_type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_contesttypename_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id', 'language_id')
    contest_type_id = sgqlc.types.Field(Float, graphql_name='contest_type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_contesttypename_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id', 'language_id')
    contest_type_id = sgqlc.types.Field(Int, graphql_name='contest_type_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_contesttypename_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id', 'language_id')
    contest_type_id = sgqlc.types.Field(Float, graphql_name='contest_type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_contesttypename_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id', 'language_id')
    contest_type_id = sgqlc.types.Field(Float, graphql_name='contest_type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_contesttypename_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('contest_type_id', 'id', 'language_id')
    contest_type_id = sgqlc.types.Field(Float, graphql_name='contest_type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_egggroup(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_egggroupnames', 'pokemon_v2_egggroupnames_aggregate', 'pokemon_v2_pokemonegggroups', 'pokemon_v2_pokemonegggroups_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_egggroupnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_egggroupname'))), graphql_name='pokemon_v2_egggroupnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroupname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroupname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_egggroupname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_egggroupnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_egggroupname_aggregate'), graphql_name='pokemon_v2_egggroupnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroupname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroupname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_egggroupname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonegggroups = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonegggroup'))), graphql_name='pokemon_v2_pokemonegggroups', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonegggroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonegggroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonegggroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonegggroups_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonegggroup_aggregate'), graphql_name='pokemon_v2_pokemonegggroups_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonegggroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonegggroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonegggroup_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_egggroup_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_egggroup_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroup))), graphql_name='nodes')


class pokemon_v2_egggroup_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_egggroup_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroup_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_egggroup_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_egggroup_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_egggroup_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_egggroup_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_egggroup_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_egggroup_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_egggroup_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_egggroup_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_egggroup_variance_fields', graphql_name='variance')


class pokemon_v2_egggroup_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_egggroup_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_egggroup_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_egggroup_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_egggroup_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_egggroup_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_egggroup_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_egggroup_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_egggroup_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_egggroup_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_egggroupname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'language_id', 'name', 'pokemon_v2_egggroup', 'pokemon_v2_language')
    egg_group_id = sgqlc.types.Field(Int, graphql_name='egg_group_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_egggroup = sgqlc.types.Field('pokemon_v2_egggroup', graphql_name='pokemon_v2_egggroup')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')


class pokemon_v2_egggroupname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_egggroupname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroupname))), graphql_name='nodes')


class pokemon_v2_egggroupname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_egggroupname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroupname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_egggroupname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_egggroupname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_egggroupname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_egggroupname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_egggroupname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_egggroupname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_egggroupname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_egggroupname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_egggroupname_variance_fields', graphql_name='variance')


class pokemon_v2_egggroupname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'language_id')
    egg_group_id = sgqlc.types.Field(Float, graphql_name='egg_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_egggroupname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'language_id', 'name')
    egg_group_id = sgqlc.types.Field(Int, graphql_name='egg_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_egggroupname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'language_id', 'name')
    egg_group_id = sgqlc.types.Field(Int, graphql_name='egg_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_egggroupname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'language_id')
    egg_group_id = sgqlc.types.Field(Float, graphql_name='egg_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_egggroupname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'language_id')
    egg_group_id = sgqlc.types.Field(Float, graphql_name='egg_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_egggroupname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'language_id')
    egg_group_id = sgqlc.types.Field(Float, graphql_name='egg_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_egggroupname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'language_id')
    egg_group_id = sgqlc.types.Field(Int, graphql_name='egg_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_egggroupname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'language_id')
    egg_group_id = sgqlc.types.Field(Float, graphql_name='egg_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_egggroupname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'language_id')
    egg_group_id = sgqlc.types.Field(Float, graphql_name='egg_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_egggroupname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'language_id')
    egg_group_id = sgqlc.types.Field(Float, graphql_name='egg_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_encounter(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'pokemon_v2_encounterconditionvaluemaps', 'pokemon_v2_encounterconditionvaluemaps_aggregate', 'pokemon_v2_encounterslot', 'pokemon_v2_locationarea', 'pokemon_v2_pokemon', 'pokemon_v2_version', 'version_id')
    encounter_slot_id = sgqlc.types.Field(Int, graphql_name='encounter_slot_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    location_area_id = sgqlc.types.Field(Int, graphql_name='location_area_id')
    max_level = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='max_level')
    min_level = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='min_level')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    pokemon_v2_encounterconditionvaluemaps = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterconditionvaluemap'))), graphql_name='pokemon_v2_encounterconditionvaluemaps', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionvaluemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionvaluemaps_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encounterconditionvaluemap_aggregate'), graphql_name='pokemon_v2_encounterconditionvaluemaps_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionvaluemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterslot = sgqlc.types.Field('pokemon_v2_encounterslot', graphql_name='pokemon_v2_encounterslot')
    pokemon_v2_locationarea = sgqlc.types.Field('pokemon_v2_locationarea', graphql_name='pokemon_v2_locationarea')
    pokemon_v2_pokemon = sgqlc.types.Field('pokemon_v2_pokemon', graphql_name='pokemon_v2_pokemon')
    pokemon_v2_version = sgqlc.types.Field('pokemon_v2_version', graphql_name='pokemon_v2_version')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_encounter_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_encounter_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter))), graphql_name='nodes')


class pokemon_v2_encounter_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_encounter_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_encounter_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_encounter_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_encounter_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_encounter_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_encounter_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_encounter_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_encounter_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_encounter_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_encounter_variance_fields', graphql_name='variance')


class pokemon_v2_encounter_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'version_id')
    encounter_slot_id = sgqlc.types.Field(Float, graphql_name='encounter_slot_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_area_id = sgqlc.types.Field(Float, graphql_name='location_area_id')
    max_level = sgqlc.types.Field(Float, graphql_name='max_level')
    min_level = sgqlc.types.Field(Float, graphql_name='min_level')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_encounter_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'version_id')
    encounter_slot_id = sgqlc.types.Field(Int, graphql_name='encounter_slot_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    location_area_id = sgqlc.types.Field(Int, graphql_name='location_area_id')
    max_level = sgqlc.types.Field(Int, graphql_name='max_level')
    min_level = sgqlc.types.Field(Int, graphql_name='min_level')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_encounter_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'version_id')
    encounter_slot_id = sgqlc.types.Field(Int, graphql_name='encounter_slot_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    location_area_id = sgqlc.types.Field(Int, graphql_name='location_area_id')
    max_level = sgqlc.types.Field(Int, graphql_name='max_level')
    min_level = sgqlc.types.Field(Int, graphql_name='min_level')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_encounter_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'version_id')
    encounter_slot_id = sgqlc.types.Field(Float, graphql_name='encounter_slot_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_area_id = sgqlc.types.Field(Float, graphql_name='location_area_id')
    max_level = sgqlc.types.Field(Float, graphql_name='max_level')
    min_level = sgqlc.types.Field(Float, graphql_name='min_level')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_encounter_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'version_id')
    encounter_slot_id = sgqlc.types.Field(Float, graphql_name='encounter_slot_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_area_id = sgqlc.types.Field(Float, graphql_name='location_area_id')
    max_level = sgqlc.types.Field(Float, graphql_name='max_level')
    min_level = sgqlc.types.Field(Float, graphql_name='min_level')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_encounter_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'version_id')
    encounter_slot_id = sgqlc.types.Field(Float, graphql_name='encounter_slot_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_area_id = sgqlc.types.Field(Float, graphql_name='location_area_id')
    max_level = sgqlc.types.Field(Float, graphql_name='max_level')
    min_level = sgqlc.types.Field(Float, graphql_name='min_level')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_encounter_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'version_id')
    encounter_slot_id = sgqlc.types.Field(Int, graphql_name='encounter_slot_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    location_area_id = sgqlc.types.Field(Int, graphql_name='location_area_id')
    max_level = sgqlc.types.Field(Int, graphql_name='max_level')
    min_level = sgqlc.types.Field(Int, graphql_name='min_level')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_encounter_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'version_id')
    encounter_slot_id = sgqlc.types.Field(Float, graphql_name='encounter_slot_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_area_id = sgqlc.types.Field(Float, graphql_name='location_area_id')
    max_level = sgqlc.types.Field(Float, graphql_name='max_level')
    min_level = sgqlc.types.Field(Float, graphql_name='min_level')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_encounter_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'version_id')
    encounter_slot_id = sgqlc.types.Field(Float, graphql_name='encounter_slot_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_area_id = sgqlc.types.Field(Float, graphql_name='location_area_id')
    max_level = sgqlc.types.Field(Float, graphql_name='max_level')
    min_level = sgqlc.types.Field(Float, graphql_name='min_level')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_encounter_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_slot_id', 'id', 'location_area_id', 'max_level', 'min_level', 'pokemon_id', 'version_id')
    encounter_slot_id = sgqlc.types.Field(Float, graphql_name='encounter_slot_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_area_id = sgqlc.types.Field(Float, graphql_name='location_area_id')
    max_level = sgqlc.types.Field(Float, graphql_name='max_level')
    min_level = sgqlc.types.Field(Float, graphql_name='min_level')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_encountercondition(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_encounterconditionnames', 'pokemon_v2_encounterconditionnames_aggregate', 'pokemon_v2_encounterconditionvalues', 'pokemon_v2_encounterconditionvalues_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_encounterconditionnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterconditionname'))), graphql_name='pokemon_v2_encounterconditionnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encounterconditionname_aggregate'), graphql_name='pokemon_v2_encounterconditionnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionvalues = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterconditionvalue'))), graphql_name='pokemon_v2_encounterconditionvalues', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvalue_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvalue_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionvalue_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionvalues_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encounterconditionvalue_aggregate'), graphql_name='pokemon_v2_encounterconditionvalues_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvalue_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvalue_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionvalue_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_encountercondition_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_encountercondition_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountercondition))), graphql_name='nodes')


class pokemon_v2_encountercondition_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_encountercondition_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountercondition_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_encountercondition_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_encountercondition_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_encountercondition_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_encountercondition_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_encountercondition_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_encountercondition_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_encountercondition_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_encountercondition_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_encountercondition_variance_fields', graphql_name='variance')


class pokemon_v2_encountercondition_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_encountercondition_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_encountercondition_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_encountercondition_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_encountercondition_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_encountercondition_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_encountercondition_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_encountercondition_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_encountercondition_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_encountercondition_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_encounterconditionname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'language_id', 'name', 'pokemon_v2_encountercondition', 'pokemon_v2_language')
    encounter_condition_id = sgqlc.types.Field(Int, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_encountercondition = sgqlc.types.Field('pokemon_v2_encountercondition', graphql_name='pokemon_v2_encountercondition')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')


class pokemon_v2_encounterconditionname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_encounterconditionname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionname))), graphql_name='nodes')


class pokemon_v2_encounterconditionname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_encounterconditionname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_encounterconditionname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_encounterconditionname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_encounterconditionname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_encounterconditionname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_encounterconditionname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_encounterconditionname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_encounterconditionname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_encounterconditionname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_encounterconditionname_variance_fields', graphql_name='variance')


class pokemon_v2_encounterconditionname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'language_id')
    encounter_condition_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_encounterconditionname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'language_id', 'name')
    encounter_condition_id = sgqlc.types.Field(Int, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_encounterconditionname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'language_id', 'name')
    encounter_condition_id = sgqlc.types.Field(Int, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_encounterconditionname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'language_id')
    encounter_condition_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_encounterconditionname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'language_id')
    encounter_condition_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_encounterconditionname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'language_id')
    encounter_condition_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_encounterconditionname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'language_id')
    encounter_condition_id = sgqlc.types.Field(Int, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_encounterconditionname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'language_id')
    encounter_condition_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_encounterconditionname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'language_id')
    encounter_condition_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_encounterconditionname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'language_id')
    encounter_condition_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_encounterconditionvalue(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'is_default', 'name', 'pokemon_v2_encountercondition', 'pokemon_v2_encounterconditionvaluemaps', 'pokemon_v2_encounterconditionvaluemaps_aggregate', 'pokemon_v2_encounterconditionvaluenames', 'pokemon_v2_encounterconditionvaluenames_aggregate')
    encounter_condition_id = sgqlc.types.Field(Int, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    is_default = sgqlc.types.Field(sgqlc.types.non_null(Boolean), graphql_name='is_default')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_encountercondition = sgqlc.types.Field('pokemon_v2_encountercondition', graphql_name='pokemon_v2_encountercondition')
    pokemon_v2_encounterconditionvaluemaps = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterconditionvaluemap'))), graphql_name='pokemon_v2_encounterconditionvaluemaps', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionvaluemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionvaluemaps_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encounterconditionvaluemap_aggregate'), graphql_name='pokemon_v2_encounterconditionvaluemaps_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionvaluemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionvaluenames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterconditionvaluename'))), graphql_name='pokemon_v2_encounterconditionvaluenames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionvaluename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionvaluenames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encounterconditionvaluename_aggregate'), graphql_name='pokemon_v2_encounterconditionvaluenames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionvaluename_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_encounterconditionvalue_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvalue))), graphql_name='nodes')


class pokemon_v2_encounterconditionvalue_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvalue_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_encounterconditionvalue_variance_fields', graphql_name='variance')


class pokemon_v2_encounterconditionvalue_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id')
    encounter_condition_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_encounterconditionvalue_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'name')
    encounter_condition_id = sgqlc.types.Field(Int, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_encounterconditionvalue_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id', 'name')
    encounter_condition_id = sgqlc.types.Field(Int, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_encounterconditionvalue_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id')
    encounter_condition_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_encounterconditionvalue_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id')
    encounter_condition_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_encounterconditionvalue_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id')
    encounter_condition_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_encounterconditionvalue_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id')
    encounter_condition_id = sgqlc.types.Field(Int, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_encounterconditionvalue_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id')
    encounter_condition_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_encounterconditionvalue_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id')
    encounter_condition_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_encounterconditionvalue_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_id', 'id')
    encounter_condition_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_encounterconditionvaluemap(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'encounter_id', 'id', 'pokemon_v2_encounter', 'pokemon_v2_encounterconditionvalue')
    encounter_condition_value_id = sgqlc.types.Field(Int, graphql_name='encounter_condition_value_id')
    encounter_id = sgqlc.types.Field(Int, graphql_name='encounter_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokemon_v2_encounter = sgqlc.types.Field('pokemon_v2_encounter', graphql_name='pokemon_v2_encounter')
    pokemon_v2_encounterconditionvalue = sgqlc.types.Field('pokemon_v2_encounterconditionvalue', graphql_name='pokemon_v2_encounterconditionvalue')


class pokemon_v2_encounterconditionvaluemap_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluemap))), graphql_name='nodes')


class pokemon_v2_encounterconditionvaluemap_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluemap_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap_variance_fields', graphql_name='variance')


class pokemon_v2_encounterconditionvaluemap_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'encounter_id', 'id')
    encounter_condition_value_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_value_id')
    encounter_id = sgqlc.types.Field(Float, graphql_name='encounter_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_encounterconditionvaluemap_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'encounter_id', 'id')
    encounter_condition_value_id = sgqlc.types.Field(Int, graphql_name='encounter_condition_value_id')
    encounter_id = sgqlc.types.Field(Int, graphql_name='encounter_id')
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_encounterconditionvaluemap_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'encounter_id', 'id')
    encounter_condition_value_id = sgqlc.types.Field(Int, graphql_name='encounter_condition_value_id')
    encounter_id = sgqlc.types.Field(Int, graphql_name='encounter_id')
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_encounterconditionvaluemap_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'encounter_id', 'id')
    encounter_condition_value_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_value_id')
    encounter_id = sgqlc.types.Field(Float, graphql_name='encounter_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_encounterconditionvaluemap_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'encounter_id', 'id')
    encounter_condition_value_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_value_id')
    encounter_id = sgqlc.types.Field(Float, graphql_name='encounter_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_encounterconditionvaluemap_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'encounter_id', 'id')
    encounter_condition_value_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_value_id')
    encounter_id = sgqlc.types.Field(Float, graphql_name='encounter_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_encounterconditionvaluemap_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'encounter_id', 'id')
    encounter_condition_value_id = sgqlc.types.Field(Int, graphql_name='encounter_condition_value_id')
    encounter_id = sgqlc.types.Field(Int, graphql_name='encounter_id')
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_encounterconditionvaluemap_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'encounter_id', 'id')
    encounter_condition_value_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_value_id')
    encounter_id = sgqlc.types.Field(Float, graphql_name='encounter_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_encounterconditionvaluemap_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'encounter_id', 'id')
    encounter_condition_value_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_value_id')
    encounter_id = sgqlc.types.Field(Float, graphql_name='encounter_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_encounterconditionvaluemap_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'encounter_id', 'id')
    encounter_condition_value_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_value_id')
    encounter_id = sgqlc.types.Field(Float, graphql_name='encounter_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_encounterconditionvaluename(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'id', 'language_id', 'name', 'pokemon_v2_encounterconditionvalue', 'pokemon_v2_language')
    encounter_condition_value_id = sgqlc.types.Field(Int, graphql_name='encounter_condition_value_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_encounterconditionvalue = sgqlc.types.Field('pokemon_v2_encounterconditionvalue', graphql_name='pokemon_v2_encounterconditionvalue')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')


class pokemon_v2_encounterconditionvaluename_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluename))), graphql_name='nodes')


class pokemon_v2_encounterconditionvaluename_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluename_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename_variance_fields', graphql_name='variance')


class pokemon_v2_encounterconditionvaluename_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'id', 'language_id')
    encounter_condition_value_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_value_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_encounterconditionvaluename_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'id', 'language_id', 'name')
    encounter_condition_value_id = sgqlc.types.Field(Int, graphql_name='encounter_condition_value_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_encounterconditionvaluename_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'id', 'language_id', 'name')
    encounter_condition_value_id = sgqlc.types.Field(Int, graphql_name='encounter_condition_value_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_encounterconditionvaluename_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'id', 'language_id')
    encounter_condition_value_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_value_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_encounterconditionvaluename_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'id', 'language_id')
    encounter_condition_value_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_value_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_encounterconditionvaluename_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'id', 'language_id')
    encounter_condition_value_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_value_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_encounterconditionvaluename_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'id', 'language_id')
    encounter_condition_value_id = sgqlc.types.Field(Int, graphql_name='encounter_condition_value_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_encounterconditionvaluename_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'id', 'language_id')
    encounter_condition_value_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_value_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_encounterconditionvaluename_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'id', 'language_id')
    encounter_condition_value_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_value_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_encounterconditionvaluename_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_condition_value_id', 'id', 'language_id')
    encounter_condition_value_id = sgqlc.types.Field(Float, graphql_name='encounter_condition_value_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_encountermethod(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'order', 'pokemon_v2_encountermethodnames', 'pokemon_v2_encountermethodnames_aggregate', 'pokemon_v2_encounterslots', 'pokemon_v2_encounterslots_aggregate', 'pokemon_v2_locationareaencounterrates', 'pokemon_v2_locationareaencounterrates_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    order = sgqlc.types.Field(Int, graphql_name='order')
    pokemon_v2_encountermethodnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encountermethodname'))), graphql_name='pokemon_v2_encountermethodnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethodname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethodname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encountermethodname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encountermethodnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encountermethodname_aggregate'), graphql_name='pokemon_v2_encountermethodnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethodname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethodname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encountermethodname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterslots = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterslot'))), graphql_name='pokemon_v2_encounterslots', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterslot_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterslot_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterslot_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterslots_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encounterslot_aggregate'), graphql_name='pokemon_v2_encounterslots_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterslot_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterslot_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterslot_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationareaencounterrates = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationareaencounterrate'))), graphql_name='pokemon_v2_locationareaencounterrates', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationareaencounterrate_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationareaencounterrates_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_locationareaencounterrate_aggregate'), graphql_name='pokemon_v2_locationareaencounterrates_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationareaencounterrate_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_encountermethod_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_encountermethod_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethod))), graphql_name='nodes')


class pokemon_v2_encountermethod_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_encountermethod_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethod_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_encountermethod_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_encountermethod_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_encountermethod_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_encountermethod_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_encountermethod_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_encountermethod_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_encountermethod_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_encountermethod_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_encountermethod_variance_fields', graphql_name='variance')


class pokemon_v2_encountermethod_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'order')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')


class pokemon_v2_encountermethod_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'order')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')
    order = sgqlc.types.Field(Int, graphql_name='order')


class pokemon_v2_encountermethod_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'order')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')
    order = sgqlc.types.Field(Int, graphql_name='order')


class pokemon_v2_encountermethod_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'order')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')


class pokemon_v2_encountermethod_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'order')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')


class pokemon_v2_encountermethod_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'order')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')


class pokemon_v2_encountermethod_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'order')
    id = sgqlc.types.Field(Int, graphql_name='id')
    order = sgqlc.types.Field(Int, graphql_name='order')


class pokemon_v2_encountermethod_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'order')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')


class pokemon_v2_encountermethod_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'order')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')


class pokemon_v2_encountermethod_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'order')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')


class pokemon_v2_encountermethodname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'language_id', 'name', 'pokemon_v2_encountermethod', 'pokemon_v2_language')
    encounter_method_id = sgqlc.types.Field(Int, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_encountermethod = sgqlc.types.Field('pokemon_v2_encountermethod', graphql_name='pokemon_v2_encountermethod')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')


class pokemon_v2_encountermethodname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_encountermethodname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethodname))), graphql_name='nodes')


class pokemon_v2_encountermethodname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_encountermethodname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethodname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_encountermethodname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_encountermethodname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_encountermethodname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_encountermethodname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_encountermethodname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_encountermethodname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_encountermethodname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_encountermethodname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_encountermethodname_variance_fields', graphql_name='variance')


class pokemon_v2_encountermethodname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'language_id')
    encounter_method_id = sgqlc.types.Field(Float, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_encountermethodname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'language_id', 'name')
    encounter_method_id = sgqlc.types.Field(Int, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_encountermethodname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'language_id', 'name')
    encounter_method_id = sgqlc.types.Field(Int, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_encountermethodname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'language_id')
    encounter_method_id = sgqlc.types.Field(Float, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_encountermethodname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'language_id')
    encounter_method_id = sgqlc.types.Field(Float, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_encountermethodname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'language_id')
    encounter_method_id = sgqlc.types.Field(Float, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_encountermethodname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'language_id')
    encounter_method_id = sgqlc.types.Field(Int, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_encountermethodname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'language_id')
    encounter_method_id = sgqlc.types.Field(Float, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_encountermethodname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'language_id')
    encounter_method_id = sgqlc.types.Field(Float, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_encountermethodname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'language_id')
    encounter_method_id = sgqlc.types.Field(Float, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_encounterslot(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'pokemon_v2_encountermethod', 'pokemon_v2_encounters', 'pokemon_v2_encounters_aggregate', 'pokemon_v2_versiongroup', 'rarity', 'slot', 'version_group_id')
    encounter_method_id = sgqlc.types.Field(Int, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokemon_v2_encountermethod = sgqlc.types.Field('pokemon_v2_encountermethod', graphql_name='pokemon_v2_encountermethod')
    pokemon_v2_encounters = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter))), graphql_name='pokemon_v2_encounters', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounter_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounters_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_encounter_aggregate), graphql_name='pokemon_v2_encounters_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounter_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup', graphql_name='pokemon_v2_versiongroup')
    rarity = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='rarity')
    slot = sgqlc.types.Field(Int, graphql_name='slot')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_encounterslot_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_encounterslot_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterslot))), graphql_name='nodes')


class pokemon_v2_encounterslot_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_encounterslot_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterslot_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_encounterslot_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_encounterslot_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_encounterslot_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_encounterslot_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_encounterslot_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_encounterslot_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_encounterslot_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_encounterslot_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_encounterslot_variance_fields', graphql_name='variance')


class pokemon_v2_encounterslot_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'rarity', 'slot', 'version_group_id')
    encounter_method_id = sgqlc.types.Field(Float, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    rarity = sgqlc.types.Field(Float, graphql_name='rarity')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_encounterslot_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'rarity', 'slot', 'version_group_id')
    encounter_method_id = sgqlc.types.Field(Int, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    rarity = sgqlc.types.Field(Int, graphql_name='rarity')
    slot = sgqlc.types.Field(Int, graphql_name='slot')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_encounterslot_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'rarity', 'slot', 'version_group_id')
    encounter_method_id = sgqlc.types.Field(Int, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    rarity = sgqlc.types.Field(Int, graphql_name='rarity')
    slot = sgqlc.types.Field(Int, graphql_name='slot')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_encounterslot_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'rarity', 'slot', 'version_group_id')
    encounter_method_id = sgqlc.types.Field(Float, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    rarity = sgqlc.types.Field(Float, graphql_name='rarity')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_encounterslot_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'rarity', 'slot', 'version_group_id')
    encounter_method_id = sgqlc.types.Field(Float, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    rarity = sgqlc.types.Field(Float, graphql_name='rarity')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_encounterslot_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'rarity', 'slot', 'version_group_id')
    encounter_method_id = sgqlc.types.Field(Float, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    rarity = sgqlc.types.Field(Float, graphql_name='rarity')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_encounterslot_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'rarity', 'slot', 'version_group_id')
    encounter_method_id = sgqlc.types.Field(Int, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    rarity = sgqlc.types.Field(Int, graphql_name='rarity')
    slot = sgqlc.types.Field(Int, graphql_name='slot')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_encounterslot_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'rarity', 'slot', 'version_group_id')
    encounter_method_id = sgqlc.types.Field(Float, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    rarity = sgqlc.types.Field(Float, graphql_name='rarity')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_encounterslot_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'rarity', 'slot', 'version_group_id')
    encounter_method_id = sgqlc.types.Field(Float, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    rarity = sgqlc.types.Field(Float, graphql_name='rarity')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_encounterslot_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'rarity', 'slot', 'version_group_id')
    encounter_method_id = sgqlc.types.Field(Float, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    rarity = sgqlc.types.Field(Float, graphql_name='rarity')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_evolutionchain(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('baby_trigger_item_id', 'id', 'pokemon_v2_item', 'pokemon_v2_pokemonspecies', 'pokemon_v2_pokemonspecies_aggregate')
    baby_trigger_item_id = sgqlc.types.Field(Int, graphql_name='baby_trigger_item_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokemon_v2_item = sgqlc.types.Field('pokemon_v2_item', graphql_name='pokemon_v2_item')
    pokemon_v2_pokemonspecies = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspecies'))), graphql_name='pokemon_v2_pokemonspecies', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspecies_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspecies_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonspecies_aggregate'), graphql_name='pokemon_v2_pokemonspecies_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspecies_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_evolutionchain_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_evolutionchain_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutionchain))), graphql_name='nodes')


class pokemon_v2_evolutionchain_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_evolutionchain_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutionchain_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_evolutionchain_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_evolutionchain_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_evolutionchain_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_evolutionchain_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_evolutionchain_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_evolutionchain_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_evolutionchain_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_evolutionchain_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_evolutionchain_variance_fields', graphql_name='variance')


class pokemon_v2_evolutionchain_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('baby_trigger_item_id', 'id')
    baby_trigger_item_id = sgqlc.types.Field(Float, graphql_name='baby_trigger_item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_evolutionchain_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('baby_trigger_item_id', 'id')
    baby_trigger_item_id = sgqlc.types.Field(Int, graphql_name='baby_trigger_item_id')
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_evolutionchain_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('baby_trigger_item_id', 'id')
    baby_trigger_item_id = sgqlc.types.Field(Int, graphql_name='baby_trigger_item_id')
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_evolutionchain_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('baby_trigger_item_id', 'id')
    baby_trigger_item_id = sgqlc.types.Field(Float, graphql_name='baby_trigger_item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_evolutionchain_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('baby_trigger_item_id', 'id')
    baby_trigger_item_id = sgqlc.types.Field(Float, graphql_name='baby_trigger_item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_evolutionchain_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('baby_trigger_item_id', 'id')
    baby_trigger_item_id = sgqlc.types.Field(Float, graphql_name='baby_trigger_item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_evolutionchain_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('baby_trigger_item_id', 'id')
    baby_trigger_item_id = sgqlc.types.Field(Int, graphql_name='baby_trigger_item_id')
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_evolutionchain_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('baby_trigger_item_id', 'id')
    baby_trigger_item_id = sgqlc.types.Field(Float, graphql_name='baby_trigger_item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_evolutionchain_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('baby_trigger_item_id', 'id')
    baby_trigger_item_id = sgqlc.types.Field(Float, graphql_name='baby_trigger_item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_evolutionchain_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('baby_trigger_item_id', 'id')
    baby_trigger_item_id = sgqlc.types.Field(Float, graphql_name='baby_trigger_item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_evolutiontrigger(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_evolutiontriggernames', 'pokemon_v2_evolutiontriggernames_aggregate', 'pokemon_v2_pokemonevolutions', 'pokemon_v2_pokemonevolutions_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_evolutiontriggernames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_evolutiontriggername'))), graphql_name='pokemon_v2_evolutiontriggernames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontriggername_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontriggername_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_evolutiontriggername_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_evolutiontriggernames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_evolutiontriggername_aggregate'), graphql_name='pokemon_v2_evolutiontriggernames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontriggername_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontriggername_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_evolutiontriggername_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonevolutions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonevolution'))), graphql_name='pokemon_v2_pokemonevolutions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonevolutions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonevolution_aggregate'), graphql_name='pokemon_v2_pokemonevolutions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_evolutiontrigger_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_evolutiontrigger_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontrigger))), graphql_name='nodes')


class pokemon_v2_evolutiontrigger_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_evolutiontrigger_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontrigger_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_evolutiontrigger_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_evolutiontrigger_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_evolutiontrigger_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_evolutiontrigger_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_evolutiontrigger_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_evolutiontrigger_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_evolutiontrigger_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_evolutiontrigger_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_evolutiontrigger_variance_fields', graphql_name='variance')


class pokemon_v2_evolutiontrigger_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_evolutiontrigger_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_evolutiontrigger_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_evolutiontrigger_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_evolutiontrigger_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_evolutiontrigger_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_evolutiontrigger_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_evolutiontrigger_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_evolutiontrigger_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_evolutiontrigger_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_evolutiontriggername(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_trigger_id', 'id', 'language_id', 'name', 'pokemon_v2_evolutiontrigger', 'pokemon_v2_language')
    evolution_trigger_id = sgqlc.types.Field(Int, graphql_name='evolution_trigger_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_evolutiontrigger = sgqlc.types.Field('pokemon_v2_evolutiontrigger', graphql_name='pokemon_v2_evolutiontrigger')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')


class pokemon_v2_evolutiontriggername_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_evolutiontriggername_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontriggername))), graphql_name='nodes')


class pokemon_v2_evolutiontriggername_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_evolutiontriggername_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontriggername_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_evolutiontriggername_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_evolutiontriggername_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_evolutiontriggername_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_evolutiontriggername_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_evolutiontriggername_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_evolutiontriggername_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_evolutiontriggername_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_evolutiontriggername_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_evolutiontriggername_variance_fields', graphql_name='variance')


class pokemon_v2_evolutiontriggername_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_trigger_id', 'id', 'language_id')
    evolution_trigger_id = sgqlc.types.Field(Float, graphql_name='evolution_trigger_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_evolutiontriggername_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_trigger_id', 'id', 'language_id', 'name')
    evolution_trigger_id = sgqlc.types.Field(Int, graphql_name='evolution_trigger_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_evolutiontriggername_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_trigger_id', 'id', 'language_id', 'name')
    evolution_trigger_id = sgqlc.types.Field(Int, graphql_name='evolution_trigger_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_evolutiontriggername_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_trigger_id', 'id', 'language_id')
    evolution_trigger_id = sgqlc.types.Field(Float, graphql_name='evolution_trigger_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_evolutiontriggername_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_trigger_id', 'id', 'language_id')
    evolution_trigger_id = sgqlc.types.Field(Float, graphql_name='evolution_trigger_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_evolutiontriggername_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_trigger_id', 'id', 'language_id')
    evolution_trigger_id = sgqlc.types.Field(Float, graphql_name='evolution_trigger_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_evolutiontriggername_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_trigger_id', 'id', 'language_id')
    evolution_trigger_id = sgqlc.types.Field(Int, graphql_name='evolution_trigger_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_evolutiontriggername_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_trigger_id', 'id', 'language_id')
    evolution_trigger_id = sgqlc.types.Field(Float, graphql_name='evolution_trigger_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_evolutiontriggername_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_trigger_id', 'id', 'language_id')
    evolution_trigger_id = sgqlc.types.Field(Float, graphql_name='evolution_trigger_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_evolutiontriggername_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_trigger_id', 'id', 'language_id')
    evolution_trigger_id = sgqlc.types.Field(Float, graphql_name='evolution_trigger_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_experience(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('experience', 'growth_rate_id', 'id', 'level', 'pokemon_v2_growthrate')
    experience = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='experience')
    growth_rate_id = sgqlc.types.Field(Int, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    level = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='level')
    pokemon_v2_growthrate = sgqlc.types.Field('pokemon_v2_growthrate', graphql_name='pokemon_v2_growthrate')


class pokemon_v2_experience_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_experience_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_experience))), graphql_name='nodes')


class pokemon_v2_experience_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_experience_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_experience_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_experience_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_experience_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_experience_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_experience_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_experience_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_experience_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_experience_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_experience_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_experience_variance_fields', graphql_name='variance')


class pokemon_v2_experience_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('experience', 'growth_rate_id', 'id', 'level')
    experience = sgqlc.types.Field(Float, graphql_name='experience')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    level = sgqlc.types.Field(Float, graphql_name='level')


class pokemon_v2_experience_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('experience', 'growth_rate_id', 'id', 'level')
    experience = sgqlc.types.Field(Int, graphql_name='experience')
    growth_rate_id = sgqlc.types.Field(Int, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    level = sgqlc.types.Field(Int, graphql_name='level')


class pokemon_v2_experience_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('experience', 'growth_rate_id', 'id', 'level')
    experience = sgqlc.types.Field(Int, graphql_name='experience')
    growth_rate_id = sgqlc.types.Field(Int, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    level = sgqlc.types.Field(Int, graphql_name='level')


class pokemon_v2_experience_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('experience', 'growth_rate_id', 'id', 'level')
    experience = sgqlc.types.Field(Float, graphql_name='experience')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    level = sgqlc.types.Field(Float, graphql_name='level')


class pokemon_v2_experience_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('experience', 'growth_rate_id', 'id', 'level')
    experience = sgqlc.types.Field(Float, graphql_name='experience')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    level = sgqlc.types.Field(Float, graphql_name='level')


class pokemon_v2_experience_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('experience', 'growth_rate_id', 'id', 'level')
    experience = sgqlc.types.Field(Float, graphql_name='experience')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    level = sgqlc.types.Field(Float, graphql_name='level')


class pokemon_v2_experience_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('experience', 'growth_rate_id', 'id', 'level')
    experience = sgqlc.types.Field(Int, graphql_name='experience')
    growth_rate_id = sgqlc.types.Field(Int, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    level = sgqlc.types.Field(Int, graphql_name='level')


class pokemon_v2_experience_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('experience', 'growth_rate_id', 'id', 'level')
    experience = sgqlc.types.Field(Float, graphql_name='experience')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    level = sgqlc.types.Field(Float, graphql_name='level')


class pokemon_v2_experience_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('experience', 'growth_rate_id', 'id', 'level')
    experience = sgqlc.types.Field(Float, graphql_name='experience')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    level = sgqlc.types.Field(Float, graphql_name='level')


class pokemon_v2_experience_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('experience', 'growth_rate_id', 'id', 'level')
    experience = sgqlc.types.Field(Float, graphql_name='experience')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    level = sgqlc.types.Field(Float, graphql_name='level')


class pokemon_v2_gender(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_pokemonevolutions', 'pokemon_v2_pokemonevolutions_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_pokemonevolutions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonevolution'))), graphql_name='pokemon_v2_pokemonevolutions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonevolutions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonevolution_aggregate'), graphql_name='pokemon_v2_pokemonevolutions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_gender_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_gender_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_gender))), graphql_name='nodes')


class pokemon_v2_gender_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_gender_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_gender_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_gender_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_gender_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_gender_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_gender_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_gender_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_gender_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_gender_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_gender_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_gender_variance_fields', graphql_name='variance')


class pokemon_v2_gender_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_gender_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_gender_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_gender_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_gender_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_gender_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_gender_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_gender_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_gender_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_gender_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_generation(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_abilities', 'pokemon_v2_abilities_aggregate', 'pokemon_v2_generationnames', 'pokemon_v2_generationnames_aggregate', 'pokemon_v2_itemgameindices', 'pokemon_v2_itemgameindices_aggregate', 'pokemon_v2_locationgameindices', 'pokemon_v2_locationgameindices_aggregate', 'pokemon_v2_moves', 'pokemon_v2_moves_aggregate', 'pokemon_v2_pokemonformgenerations', 'pokemon_v2_pokemonformgenerations_aggregate', 'pokemon_v2_pokemonspecies', 'pokemon_v2_pokemonspecies_aggregate', 'pokemon_v2_pokemontypepasts', 'pokemon_v2_pokemontypepasts_aggregate', 'pokemon_v2_region', 'pokemon_v2_typegameindices', 'pokemon_v2_typegameindices_aggregate', 'pokemon_v2_types', 'pokemon_v2_types_aggregate', 'pokemon_v2_versiongroups', 'pokemon_v2_versiongroups_aggregate', 'region_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_abilities = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_ability))), graphql_name='pokemon_v2_abilities', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_ability_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_ability_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_ability_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilities_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_ability_aggregate), graphql_name='pokemon_v2_abilities_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_ability_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_ability_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_ability_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_generationnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_generationname'))), graphql_name='pokemon_v2_generationnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generationname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generationname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_generationname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_generationnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_generationname_aggregate'), graphql_name='pokemon_v2_generationnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generationname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generationname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_generationname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemgameindices = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemgameindex'))), graphql_name='pokemon_v2_itemgameindices', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemgameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemgameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemgameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemgameindices_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemgameindex_aggregate'), graphql_name='pokemon_v2_itemgameindices_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemgameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemgameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemgameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationgameindices = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationgameindex'))), graphql_name='pokemon_v2_locationgameindices', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationgameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationgameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationgameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationgameindices_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_locationgameindex_aggregate'), graphql_name='pokemon_v2_locationgameindices_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationgameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationgameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationgameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moves = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_move'))), graphql_name='pokemon_v2_moves', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_move_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moves_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_move_aggregate'), graphql_name='pokemon_v2_moves_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_move_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformgenerations = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonformgeneration'))), graphql_name='pokemon_v2_pokemonformgenerations', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformgeneration_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformgeneration_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformgeneration_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformgenerations_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonformgeneration_aggregate'), graphql_name='pokemon_v2_pokemonformgenerations_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformgeneration_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformgeneration_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformgeneration_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspecies = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspecies'))), graphql_name='pokemon_v2_pokemonspecies', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspecies_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspecies_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonspecies_aggregate'), graphql_name='pokemon_v2_pokemonspecies_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspecies_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemontypepasts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemontypepast'))), graphql_name='pokemon_v2_pokemontypepasts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontypepast_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontypepast_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemontypepast_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemontypepasts_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemontypepast_aggregate'), graphql_name='pokemon_v2_pokemontypepasts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontypepast_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontypepast_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemontypepast_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_region = sgqlc.types.Field('pokemon_v2_region', graphql_name='pokemon_v2_region')
    pokemon_v2_typegameindices = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_typegameindex'))), graphql_name='pokemon_v2_typegameindices', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typegameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typegameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typegameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_typegameindices_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_typegameindex_aggregate'), graphql_name='pokemon_v2_typegameindices_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typegameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typegameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typegameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_types = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_type'))), graphql_name='pokemon_v2_types', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_type_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_type_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_type_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_types_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_type_aggregate'), graphql_name='pokemon_v2_types_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_type_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_type_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_type_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroups = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_versiongroup'))), graphql_name='pokemon_v2_versiongroups', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versiongroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroups_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_versiongroup_aggregate'), graphql_name='pokemon_v2_versiongroups_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versiongroup_bool_exp, graphql_name='where', default=None)),
))
    )
    region_id = sgqlc.types.Field(Int, graphql_name='region_id')


class pokemon_v2_generation_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_generation_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generation))), graphql_name='nodes')


class pokemon_v2_generation_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_generation_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generation_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_generation_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_generation_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_generation_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_generation_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_generation_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_generation_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_generation_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_generation_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_generation_variance_fields', graphql_name='variance')


class pokemon_v2_generation_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_generation_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'region_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')
    region_id = sgqlc.types.Field(Int, graphql_name='region_id')


class pokemon_v2_generation_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'region_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')
    region_id = sgqlc.types.Field(Int, graphql_name='region_id')


class pokemon_v2_generation_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_generation_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_generation_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_generation_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    region_id = sgqlc.types.Field(Int, graphql_name='region_id')


class pokemon_v2_generation_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_generation_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_generation_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_generationname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'language_id', 'name', 'pokemon_v2_generation', 'pokemon_v2_language')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_generation = sgqlc.types.Field('pokemon_v2_generation', graphql_name='pokemon_v2_generation')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')


class pokemon_v2_generationname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_generationname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generationname))), graphql_name='nodes')


class pokemon_v2_generationname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_generationname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generationname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_generationname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_generationname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_generationname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_generationname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_generationname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_generationname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_generationname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_generationname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_generationname_variance_fields', graphql_name='variance')


class pokemon_v2_generationname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'language_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_generationname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'language_id', 'name')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_generationname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'language_id', 'name')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_generationname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'language_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_generationname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'language_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_generationname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'language_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_generationname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'language_id')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_generationname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'language_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_generationname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'language_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_generationname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'language_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_growthrate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('formula', 'id', 'name', 'pokemon_v2_experiences', 'pokemon_v2_experiences_aggregate', 'pokemon_v2_growthratedescriptions', 'pokemon_v2_growthratedescriptions_aggregate', 'pokemon_v2_machines', 'pokemon_v2_machines_aggregate', 'pokemon_v2_pokemonspecies', 'pokemon_v2_pokemonspecies_aggregate')
    formula = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='formula')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_experiences = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_experience))), graphql_name='pokemon_v2_experiences', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_experience_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_experience_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_experience_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_experiences_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_experience_aggregate), graphql_name='pokemon_v2_experiences_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_experience_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_experience_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_experience_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_growthratedescriptions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_growthratedescription'))), graphql_name='pokemon_v2_growthratedescriptions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthratedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthratedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_growthratedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_growthratedescriptions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_growthratedescription_aggregate'), graphql_name='pokemon_v2_growthratedescriptions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthratedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthratedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_growthratedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_machines = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_machine'))), graphql_name='pokemon_v2_machines', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_machine_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_machines_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_machine_aggregate'), graphql_name='pokemon_v2_machines_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_machine_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspecies = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspecies'))), graphql_name='pokemon_v2_pokemonspecies', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspecies_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspecies_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonspecies_aggregate'), graphql_name='pokemon_v2_pokemonspecies_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspecies_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_growthrate_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_growthrate_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthrate))), graphql_name='nodes')


class pokemon_v2_growthrate_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_growthrate_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthrate_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_growthrate_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_growthrate_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_growthrate_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_growthrate_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_growthrate_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_growthrate_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_growthrate_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_growthrate_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_growthrate_variance_fields', graphql_name='variance')


class pokemon_v2_growthrate_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_growthrate_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('formula', 'id', 'name')
    formula = sgqlc.types.Field(String, graphql_name='formula')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_growthrate_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('formula', 'id', 'name')
    formula = sgqlc.types.Field(String, graphql_name='formula')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_growthrate_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_growthrate_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_growthrate_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_growthrate_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_growthrate_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_growthrate_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_growthrate_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_growthratedescription(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'growth_rate_id', 'id', 'language_id', 'pokemon_v2_growthrate', 'pokemon_v2_language')
    description = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='description')
    growth_rate_id = sgqlc.types.Field(Int, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_v2_growthrate = sgqlc.types.Field('pokemon_v2_growthrate', graphql_name='pokemon_v2_growthrate')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')


class pokemon_v2_growthratedescription_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_growthratedescription_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthratedescription))), graphql_name='nodes')


class pokemon_v2_growthratedescription_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_growthratedescription_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthratedescription_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_growthratedescription_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_growthratedescription_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_growthratedescription_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_growthratedescription_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_growthratedescription_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_growthratedescription_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_growthratedescription_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_growthratedescription_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_growthratedescription_variance_fields', graphql_name='variance')


class pokemon_v2_growthratedescription_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'language_id')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_growthratedescription_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'growth_rate_id', 'id', 'language_id')
    description = sgqlc.types.Field(String, graphql_name='description')
    growth_rate_id = sgqlc.types.Field(Int, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_growthratedescription_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'growth_rate_id', 'id', 'language_id')
    description = sgqlc.types.Field(String, graphql_name='description')
    growth_rate_id = sgqlc.types.Field(Int, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_growthratedescription_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'language_id')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_growthratedescription_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'language_id')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_growthratedescription_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'language_id')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_growthratedescription_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'language_id')
    growth_rate_id = sgqlc.types.Field(Int, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_growthratedescription_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'language_id')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_growthratedescription_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'language_id')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_growthratedescription_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'language_id')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_item(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id', 'name', 'pokemon_v2_pokemonevolutions_by_held_item_id', 'pokemon_v2_pokemonevolutions_by_held_item_id_aggregate', 'pokemon_v2_berries', 'pokemon_v2_berries_aggregate', 'pokemon_v2_evolutionchains', 'pokemon_v2_evolutionchains_aggregate', 'pokemon_v2_itemattributemaps', 'pokemon_v2_itemattributemaps_aggregate', 'pokemon_v2_itemcategory', 'pokemon_v2_itemeffecttexts', 'pokemon_v2_itemeffecttexts_aggregate', 'pokemon_v2_itemflavortexts', 'pokemon_v2_itemflavortexts_aggregate', 'pokemon_v2_itemflingeffect', 'pokemon_v2_itemgameindices', 'pokemon_v2_itemgameindices_aggregate', 'pokemon_v2_itemnames', 'pokemon_v2_itemnames_aggregate', 'pokemon_v2_itemsprites', 'pokemon_v2_itemsprites_aggregate', 'pokemon_v2_machines', 'pokemon_v2_machines_aggregate', 'pokemon_v2_pokemonevolutions', 'pokemon_v2_pokemonevolutions_aggregate', 'pokemon_v2_pokemonitems', 'pokemon_v2_pokemonitems_aggregate')
    cost = sgqlc.types.Field(Int, graphql_name='cost')
    fling_power = sgqlc.types.Field(Int, graphql_name='fling_power')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    item_category_id = sgqlc.types.Field(Int, graphql_name='item_category_id')
    item_fling_effect_id = sgqlc.types.Field(Int, graphql_name='item_fling_effect_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_pokemonevolutions_by_held_item_id = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonevolution'))), graphql_name='pokemonV2PokemonevolutionsByHeldItemId', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonevolutions_by_held_item_id_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonevolution_aggregate'), graphql_name='pokemonV2PokemonevolutionsByHeldItemId_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berries = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry))), graphql_name='pokemon_v2_berries', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berry_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berries_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_berry_aggregate), graphql_name='pokemon_v2_berries_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berry_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_evolutionchains = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutionchain))), graphql_name='pokemon_v2_evolutionchains', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutionchain_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutionchain_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_evolutionchain_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_evolutionchains_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_evolutionchain_aggregate), graphql_name='pokemon_v2_evolutionchains_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutionchain_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutionchain_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_evolutionchain_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattributemaps = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemattributemap'))), graphql_name='pokemon_v2_itemattributemaps', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattributemaps_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemattributemap_aggregate'), graphql_name='pokemon_v2_itemattributemaps_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemcategory = sgqlc.types.Field('pokemon_v2_itemcategory', graphql_name='pokemon_v2_itemcategory')
    pokemon_v2_itemeffecttexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemeffecttext'))), graphql_name='pokemon_v2_itemeffecttexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemeffecttexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemeffecttext_aggregate'), graphql_name='pokemon_v2_itemeffecttexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemflavortexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemflavortext'))), graphql_name='pokemon_v2_itemflavortexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemflavortexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemflavortext_aggregate'), graphql_name='pokemon_v2_itemflavortexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemflingeffect = sgqlc.types.Field('pokemon_v2_itemflingeffect', graphql_name='pokemon_v2_itemflingeffect')
    pokemon_v2_itemgameindices = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemgameindex'))), graphql_name='pokemon_v2_itemgameindices', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemgameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemgameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemgameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemgameindices_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemgameindex_aggregate'), graphql_name='pokemon_v2_itemgameindices_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemgameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemgameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemgameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemname'))), graphql_name='pokemon_v2_itemnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemname_aggregate'), graphql_name='pokemon_v2_itemnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemsprites = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemsprites'))), graphql_name='pokemon_v2_itemsprites', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemsprites_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemsprites_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemsprites_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemsprites_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemsprites_aggregate'), graphql_name='pokemon_v2_itemsprites_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemsprites_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemsprites_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemsprites_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_machines = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_machine'))), graphql_name='pokemon_v2_machines', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_machine_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_machines_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_machine_aggregate'), graphql_name='pokemon_v2_machines_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_machine_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonevolutions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonevolution'))), graphql_name='pokemon_v2_pokemonevolutions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonevolutions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonevolution_aggregate'), graphql_name='pokemon_v2_pokemonevolutions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonitems = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonitem'))), graphql_name='pokemon_v2_pokemonitems', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonitem_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonitem_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonitem_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonitems_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonitem_aggregate'), graphql_name='pokemon_v2_pokemonitems_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonitem_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonitem_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonitem_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_item_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_item_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_item))), graphql_name='nodes')


class pokemon_v2_item_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_item_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_item_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_item_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_item_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_item_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_item_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_item_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_item_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_item_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_item_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_item_variance_fields', graphql_name='variance')


class pokemon_v2_item_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id')
    cost = sgqlc.types.Field(Float, graphql_name='cost')
    fling_power = sgqlc.types.Field(Float, graphql_name='fling_power')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_category_id = sgqlc.types.Field(Float, graphql_name='item_category_id')
    item_fling_effect_id = sgqlc.types.Field(Float, graphql_name='item_fling_effect_id')


class pokemon_v2_item_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id', 'name')
    cost = sgqlc.types.Field(Int, graphql_name='cost')
    fling_power = sgqlc.types.Field(Int, graphql_name='fling_power')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_category_id = sgqlc.types.Field(Int, graphql_name='item_category_id')
    item_fling_effect_id = sgqlc.types.Field(Int, graphql_name='item_fling_effect_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_item_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id', 'name')
    cost = sgqlc.types.Field(Int, graphql_name='cost')
    fling_power = sgqlc.types.Field(Int, graphql_name='fling_power')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_category_id = sgqlc.types.Field(Int, graphql_name='item_category_id')
    item_fling_effect_id = sgqlc.types.Field(Int, graphql_name='item_fling_effect_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_item_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id')
    cost = sgqlc.types.Field(Float, graphql_name='cost')
    fling_power = sgqlc.types.Field(Float, graphql_name='fling_power')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_category_id = sgqlc.types.Field(Float, graphql_name='item_category_id')
    item_fling_effect_id = sgqlc.types.Field(Float, graphql_name='item_fling_effect_id')


class pokemon_v2_item_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id')
    cost = sgqlc.types.Field(Float, graphql_name='cost')
    fling_power = sgqlc.types.Field(Float, graphql_name='fling_power')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_category_id = sgqlc.types.Field(Float, graphql_name='item_category_id')
    item_fling_effect_id = sgqlc.types.Field(Float, graphql_name='item_fling_effect_id')


class pokemon_v2_item_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id')
    cost = sgqlc.types.Field(Float, graphql_name='cost')
    fling_power = sgqlc.types.Field(Float, graphql_name='fling_power')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_category_id = sgqlc.types.Field(Float, graphql_name='item_category_id')
    item_fling_effect_id = sgqlc.types.Field(Float, graphql_name='item_fling_effect_id')


class pokemon_v2_item_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id')
    cost = sgqlc.types.Field(Int, graphql_name='cost')
    fling_power = sgqlc.types.Field(Int, graphql_name='fling_power')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_category_id = sgqlc.types.Field(Int, graphql_name='item_category_id')
    item_fling_effect_id = sgqlc.types.Field(Int, graphql_name='item_fling_effect_id')


class pokemon_v2_item_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id')
    cost = sgqlc.types.Field(Float, graphql_name='cost')
    fling_power = sgqlc.types.Field(Float, graphql_name='fling_power')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_category_id = sgqlc.types.Field(Float, graphql_name='item_category_id')
    item_fling_effect_id = sgqlc.types.Field(Float, graphql_name='item_fling_effect_id')


class pokemon_v2_item_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id')
    cost = sgqlc.types.Field(Float, graphql_name='cost')
    fling_power = sgqlc.types.Field(Float, graphql_name='fling_power')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_category_id = sgqlc.types.Field(Float, graphql_name='item_category_id')
    item_fling_effect_id = sgqlc.types.Field(Float, graphql_name='item_fling_effect_id')


class pokemon_v2_item_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('cost', 'fling_power', 'id', 'item_category_id', 'item_fling_effect_id')
    cost = sgqlc.types.Field(Float, graphql_name='cost')
    fling_power = sgqlc.types.Field(Float, graphql_name='fling_power')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_category_id = sgqlc.types.Field(Float, graphql_name='item_category_id')
    item_fling_effect_id = sgqlc.types.Field(Float, graphql_name='item_fling_effect_id')


class pokemon_v2_itemattribute(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_itemattributedescriptions', 'pokemon_v2_itemattributedescriptions_aggregate', 'pokemon_v2_itemattributemaps', 'pokemon_v2_itemattributemaps_aggregate', 'pokemon_v2_itemattributenames', 'pokemon_v2_itemattributenames_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_itemattributedescriptions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemattributedescription'))), graphql_name='pokemon_v2_itemattributedescriptions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattributedescriptions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemattributedescription_aggregate'), graphql_name='pokemon_v2_itemattributedescriptions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattributemaps = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemattributemap'))), graphql_name='pokemon_v2_itemattributemaps', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattributemaps_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemattributemap_aggregate'), graphql_name='pokemon_v2_itemattributemaps_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattributenames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemattributename'))), graphql_name='pokemon_v2_itemattributenames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattributenames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemattributename_aggregate'), graphql_name='pokemon_v2_itemattributenames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributename_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_itemattribute_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_itemattribute_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattribute))), graphql_name='nodes')


class pokemon_v2_itemattribute_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemattribute_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattribute_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_itemattribute_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemattribute_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemattribute_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemattribute_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemattribute_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemattribute_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemattribute_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemattribute_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemattribute_variance_fields', graphql_name='variance')


class pokemon_v2_itemattribute_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_itemattribute_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_itemattribute_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_itemattribute_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_itemattribute_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_itemattribute_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_itemattribute_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_itemattribute_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_itemattribute_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_itemattribute_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_itemattributedescription(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'item_attribute_id', 'language_id', 'pokemon_v2_itemattribute', 'pokemon_v2_language')
    description = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='description')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Int, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_v2_itemattribute = sgqlc.types.Field('pokemon_v2_itemattribute', graphql_name='pokemon_v2_itemattribute')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')


class pokemon_v2_itemattributedescription_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_itemattributedescription_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributedescription))), graphql_name='nodes')


class pokemon_v2_itemattributedescription_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemattributedescription_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributedescription_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_itemattributedescription_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemattributedescription_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemattributedescription_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemattributedescription_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemattributedescription_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemattributedescription_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemattributedescription_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemattributedescription_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemattributedescription_variance_fields', graphql_name='variance')


class pokemon_v2_itemattributedescription_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Float, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemattributedescription_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'item_attribute_id', 'language_id')
    description = sgqlc.types.Field(String, graphql_name='description')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Int, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_itemattributedescription_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'item_attribute_id', 'language_id')
    description = sgqlc.types.Field(String, graphql_name='description')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Int, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_itemattributedescription_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Float, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemattributedescription_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Float, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemattributedescription_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Float, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemattributedescription_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Int, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_itemattributedescription_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Float, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemattributedescription_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Float, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemattributedescription_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Float, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemattributemap(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'item_id', 'pokemon_v2_item', 'pokemon_v2_itemattribute')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Int, graphql_name='item_attribute_id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    pokemon_v2_item = sgqlc.types.Field('pokemon_v2_item', graphql_name='pokemon_v2_item')
    pokemon_v2_itemattribute = sgqlc.types.Field('pokemon_v2_itemattribute', graphql_name='pokemon_v2_itemattribute')


class pokemon_v2_itemattributemap_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_itemattributemap_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributemap))), graphql_name='nodes')


class pokemon_v2_itemattributemap_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemattributemap_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributemap_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_itemattributemap_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemattributemap_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemattributemap_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemattributemap_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemattributemap_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemattributemap_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemattributemap_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemattributemap_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemattributemap_variance_fields', graphql_name='variance')


class pokemon_v2_itemattributemap_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Float, graphql_name='item_attribute_id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')


class pokemon_v2_itemattributemap_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'item_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Int, graphql_name='item_attribute_id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')


class pokemon_v2_itemattributemap_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'item_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Int, graphql_name='item_attribute_id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')


class pokemon_v2_itemattributemap_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Float, graphql_name='item_attribute_id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')


class pokemon_v2_itemattributemap_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Float, graphql_name='item_attribute_id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')


class pokemon_v2_itemattributemap_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Float, graphql_name='item_attribute_id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')


class pokemon_v2_itemattributemap_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'item_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Int, graphql_name='item_attribute_id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')


class pokemon_v2_itemattributemap_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Float, graphql_name='item_attribute_id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')


class pokemon_v2_itemattributemap_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Float, graphql_name='item_attribute_id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')


class pokemon_v2_itemattributemap_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Float, graphql_name='item_attribute_id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')


class pokemon_v2_itemattributename(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id', 'name', 'pokemon_v2_itemattribute', 'pokemon_v2_language')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Int, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_itemattribute = sgqlc.types.Field('pokemon_v2_itemattribute', graphql_name='pokemon_v2_itemattribute')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')


class pokemon_v2_itemattributename_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_itemattributename_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributename))), graphql_name='nodes')


class pokemon_v2_itemattributename_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemattributename_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributename_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_itemattributename_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemattributename_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemattributename_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemattributename_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemattributename_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemattributename_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemattributename_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemattributename_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemattributename_variance_fields', graphql_name='variance')


class pokemon_v2_itemattributename_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Float, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemattributename_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Int, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_itemattributename_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Int, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_itemattributename_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Float, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemattributename_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Float, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemattributename_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Float, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemattributename_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Int, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_itemattributename_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Float, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemattributename_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Float, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemattributename_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_attribute_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_attribute_id = sgqlc.types.Field(Float, graphql_name='item_attribute_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemcategory(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'name', 'pokemon_v2_itemcategorynames', 'pokemon_v2_itemcategorynames_aggregate', 'pokemon_v2_itempocket', 'pokemon_v2_items', 'pokemon_v2_items_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Int, graphql_name='item_pocket_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_itemcategorynames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemcategoryname'))), graphql_name='pokemon_v2_itemcategorynames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategoryname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategoryname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemcategoryname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemcategorynames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemcategoryname_aggregate'), graphql_name='pokemon_v2_itemcategorynames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategoryname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategoryname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemcategoryname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itempocket = sgqlc.types.Field('pokemon_v2_itempocket', graphql_name='pokemon_v2_itempocket')
    pokemon_v2_items = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_item))), graphql_name='pokemon_v2_items', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_item_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_item_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_item_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_items_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_item_aggregate), graphql_name='pokemon_v2_items_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_item_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_item_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_item_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_itemcategory_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_itemcategory_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategory))), graphql_name='nodes')


class pokemon_v2_itemcategory_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemcategory_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategory_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_itemcategory_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemcategory_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemcategory_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemcategory_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemcategory_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemcategory_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemcategory_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemcategory_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemcategory_variance_fields', graphql_name='variance')


class pokemon_v2_itemcategory_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Float, graphql_name='item_pocket_id')


class pokemon_v2_itemcategory_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Int, graphql_name='item_pocket_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_itemcategory_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Int, graphql_name='item_pocket_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_itemcategory_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Float, graphql_name='item_pocket_id')


class pokemon_v2_itemcategory_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Float, graphql_name='item_pocket_id')


class pokemon_v2_itemcategory_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Float, graphql_name='item_pocket_id')


class pokemon_v2_itemcategory_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Int, graphql_name='item_pocket_id')


class pokemon_v2_itemcategory_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Float, graphql_name='item_pocket_id')


class pokemon_v2_itemcategory_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Float, graphql_name='item_pocket_id')


class pokemon_v2_itemcategory_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Float, graphql_name='item_pocket_id')


class pokemon_v2_itemcategoryname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_category_id', 'language_id', 'name', 'pokemon_v2_itemcategory', 'pokemon_v2_language')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    item_category_id = sgqlc.types.Field(Int, graphql_name='item_category_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_itemcategory = sgqlc.types.Field('pokemon_v2_itemcategory', graphql_name='pokemon_v2_itemcategory')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')


class pokemon_v2_itemcategoryname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_itemcategoryname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategoryname))), graphql_name='nodes')


class pokemon_v2_itemcategoryname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemcategoryname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategoryname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_itemcategoryname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemcategoryname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemcategoryname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemcategoryname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemcategoryname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemcategoryname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemcategoryname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemcategoryname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemcategoryname_variance_fields', graphql_name='variance')


class pokemon_v2_itemcategoryname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_category_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_category_id = sgqlc.types.Field(Float, graphql_name='item_category_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemcategoryname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_category_id', 'language_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_category_id = sgqlc.types.Field(Int, graphql_name='item_category_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_itemcategoryname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_category_id', 'language_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_category_id = sgqlc.types.Field(Int, graphql_name='item_category_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_itemcategoryname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_category_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_category_id = sgqlc.types.Field(Float, graphql_name='item_category_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemcategoryname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_category_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_category_id = sgqlc.types.Field(Float, graphql_name='item_category_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemcategoryname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_category_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_category_id = sgqlc.types.Field(Float, graphql_name='item_category_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemcategoryname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_category_id', 'language_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_category_id = sgqlc.types.Field(Int, graphql_name='item_category_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_itemcategoryname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_category_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_category_id = sgqlc.types.Field(Float, graphql_name='item_category_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemcategoryname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_category_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_category_id = sgqlc.types.Field(Float, graphql_name='item_category_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemcategoryname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_category_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_category_id = sgqlc.types.Field(Float, graphql_name='item_category_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemeffecttext(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'item_id', 'language_id', 'pokemon_v2_item', 'pokemon_v2_language', 'short_effect')
    effect = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='effect')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_v2_item = sgqlc.types.Field('pokemon_v2_item', graphql_name='pokemon_v2_item')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    short_effect = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='short_effect')


class pokemon_v2_itemeffecttext_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_itemeffecttext_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemeffecttext))), graphql_name='nodes')


class pokemon_v2_itemeffecttext_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemeffecttext_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemeffecttext_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_itemeffecttext_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemeffecttext_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemeffecttext_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemeffecttext_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemeffecttext_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemeffecttext_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemeffecttext_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemeffecttext_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemeffecttext_variance_fields', graphql_name='variance')


class pokemon_v2_itemeffecttext_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemeffecttext_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'item_id', 'language_id', 'short_effect')
    effect = sgqlc.types.Field(String, graphql_name='effect')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    short_effect = sgqlc.types.Field(String, graphql_name='short_effect')


class pokemon_v2_itemeffecttext_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'item_id', 'language_id', 'short_effect')
    effect = sgqlc.types.Field(String, graphql_name='effect')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    short_effect = sgqlc.types.Field(String, graphql_name='short_effect')


class pokemon_v2_itemeffecttext_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemeffecttext_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemeffecttext_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemeffecttext_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_itemeffecttext_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemeffecttext_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemeffecttext_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemflavortext(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'item_id', 'language_id', 'pokemon_v2_item', 'pokemon_v2_language', 'pokemon_v2_versiongroup', 'version_group_id')
    flavor_text = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='flavor_text')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_v2_item = sgqlc.types.Field('pokemon_v2_item', graphql_name='pokemon_v2_item')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_itemflavortext_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_itemflavortext_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext))), graphql_name='nodes')


class pokemon_v2_itemflavortext_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemflavortext_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_itemflavortext_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemflavortext_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemflavortext_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemflavortext_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemflavortext_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemflavortext_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemflavortext_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemflavortext_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemflavortext_variance_fields', graphql_name='variance')


class pokemon_v2_itemflavortext_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_itemflavortext_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'item_id', 'language_id', 'version_group_id')
    flavor_text = sgqlc.types.Field(String, graphql_name='flavor_text')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_itemflavortext_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'item_id', 'language_id', 'version_group_id')
    flavor_text = sgqlc.types.Field(String, graphql_name='flavor_text')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_itemflavortext_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_itemflavortext_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_itemflavortext_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_itemflavortext_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id', 'version_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_itemflavortext_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_itemflavortext_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_itemflavortext_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_itemflingeffect(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_itemflingeffecteffecttexts', 'pokemon_v2_itemflingeffecteffecttexts_aggregate', 'pokemon_v2_items', 'pokemon_v2_items_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_itemflingeffecteffecttexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemflingeffecteffecttext'))), graphql_name='pokemon_v2_itemflingeffecteffecttexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemflingeffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemflingeffecteffecttexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemflingeffecteffecttext_aggregate'), graphql_name='pokemon_v2_itemflingeffecteffecttexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemflingeffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_items = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_item))), graphql_name='pokemon_v2_items', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_item_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_item_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_item_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_items_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_item_aggregate), graphql_name='pokemon_v2_items_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_item_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_item_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_item_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_itemflingeffect_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_itemflingeffect_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffect))), graphql_name='nodes')


class pokemon_v2_itemflingeffect_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemflingeffect_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffect_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_itemflingeffect_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemflingeffect_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemflingeffect_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemflingeffect_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemflingeffect_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemflingeffect_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemflingeffect_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemflingeffect_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemflingeffect_variance_fields', graphql_name='variance')


class pokemon_v2_itemflingeffect_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_itemflingeffect_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_itemflingeffect_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_itemflingeffect_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_itemflingeffect_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_itemflingeffect_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_itemflingeffect_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_itemflingeffect_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_itemflingeffect_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_itemflingeffect_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_itemflingeffecteffecttext(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'item_fling_effect_id', 'language_id', 'pokemon_v2_itemflingeffect', 'pokemon_v2_language')
    effect = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='effect')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    item_fling_effect_id = sgqlc.types.Field(Int, graphql_name='item_fling_effect_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_v2_itemflingeffect = sgqlc.types.Field('pokemon_v2_itemflingeffect', graphql_name='pokemon_v2_itemflingeffect')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')


class pokemon_v2_itemflingeffecteffecttext_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffecteffecttext))), graphql_name='nodes')


class pokemon_v2_itemflingeffecteffecttext_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffecteffecttext_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext_variance_fields', graphql_name='variance')


class pokemon_v2_itemflingeffecteffecttext_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_fling_effect_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_fling_effect_id = sgqlc.types.Field(Float, graphql_name='item_fling_effect_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemflingeffecteffecttext_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'item_fling_effect_id', 'language_id')
    effect = sgqlc.types.Field(String, graphql_name='effect')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_fling_effect_id = sgqlc.types.Field(Int, graphql_name='item_fling_effect_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_itemflingeffecteffecttext_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'item_fling_effect_id', 'language_id')
    effect = sgqlc.types.Field(String, graphql_name='effect')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_fling_effect_id = sgqlc.types.Field(Int, graphql_name='item_fling_effect_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_itemflingeffecteffecttext_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_fling_effect_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_fling_effect_id = sgqlc.types.Field(Float, graphql_name='item_fling_effect_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemflingeffecteffecttext_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_fling_effect_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_fling_effect_id = sgqlc.types.Field(Float, graphql_name='item_fling_effect_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemflingeffecteffecttext_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_fling_effect_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_fling_effect_id = sgqlc.types.Field(Float, graphql_name='item_fling_effect_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemflingeffecteffecttext_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_fling_effect_id', 'language_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_fling_effect_id = sgqlc.types.Field(Int, graphql_name='item_fling_effect_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_itemflingeffecteffecttext_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_fling_effect_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_fling_effect_id = sgqlc.types.Field(Float, graphql_name='item_fling_effect_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemflingeffecteffecttext_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_fling_effect_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_fling_effect_id = sgqlc.types.Field(Float, graphql_name='item_fling_effect_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemflingeffecteffecttext_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_fling_effect_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_fling_effect_id = sgqlc.types.Field(Float, graphql_name='item_fling_effect_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemgameindex(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'item_id', 'pokemon_v2_generation', 'pokemon_v2_item')
    game_index = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='game_index')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    pokemon_v2_generation = sgqlc.types.Field('pokemon_v2_generation', graphql_name='pokemon_v2_generation')
    pokemon_v2_item = sgqlc.types.Field('pokemon_v2_item', graphql_name='pokemon_v2_item')


class pokemon_v2_itemgameindex_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_itemgameindex_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemgameindex))), graphql_name='nodes')


class pokemon_v2_itemgameindex_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemgameindex_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemgameindex_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_itemgameindex_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemgameindex_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemgameindex_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemgameindex_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemgameindex_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemgameindex_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemgameindex_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemgameindex_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemgameindex_variance_fields', graphql_name='variance')


class pokemon_v2_itemgameindex_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'item_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')


class pokemon_v2_itemgameindex_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'item_id')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')


class pokemon_v2_itemgameindex_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'item_id')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')


class pokemon_v2_itemgameindex_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'item_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')


class pokemon_v2_itemgameindex_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'item_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')


class pokemon_v2_itemgameindex_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'item_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')


class pokemon_v2_itemgameindex_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'item_id')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')


class pokemon_v2_itemgameindex_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'item_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')


class pokemon_v2_itemgameindex_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'item_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')


class pokemon_v2_itemgameindex_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'item_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')


class pokemon_v2_itemname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id', 'name', 'pokemon_v2_item', 'pokemon_v2_language')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_item = sgqlc.types.Field('pokemon_v2_item', graphql_name='pokemon_v2_item')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')


class pokemon_v2_itemname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_itemname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemname))), graphql_name='nodes')


class pokemon_v2_itemname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_itemname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemname_variance_fields', graphql_name='variance')


class pokemon_v2_itemname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_itemname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_itemname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_itemname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itempocket(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_itemcategories', 'pokemon_v2_itemcategories_aggregate', 'pokemon_v2_itempocketnames', 'pokemon_v2_itempocketnames_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_itemcategories = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategory))), graphql_name='pokemon_v2_itemcategories', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategory_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategory_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemcategory_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemcategories_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_itemcategory_aggregate), graphql_name='pokemon_v2_itemcategories_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategory_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategory_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemcategory_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itempocketnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itempocketname'))), graphql_name='pokemon_v2_itempocketnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocketname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocketname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itempocketname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itempocketnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itempocketname_aggregate'), graphql_name='pokemon_v2_itempocketnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocketname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocketname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itempocketname_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_itempocket_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_itempocket_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocket))), graphql_name='nodes')


class pokemon_v2_itempocket_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itempocket_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocket_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_itempocket_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itempocket_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itempocket_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itempocket_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itempocket_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itempocket_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itempocket_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itempocket_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itempocket_variance_fields', graphql_name='variance')


class pokemon_v2_itempocket_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_itempocket_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_itempocket_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_itempocket_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_itempocket_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_itempocket_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_itempocket_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_itempocket_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_itempocket_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_itempocket_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_itempocketname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'language_id', 'name', 'pokemon_v2_itempocket', 'pokemon_v2_language')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Int, graphql_name='item_pocket_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_itempocket = sgqlc.types.Field('pokemon_v2_itempocket', graphql_name='pokemon_v2_itempocket')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')


class pokemon_v2_itempocketname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_itempocketname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocketname))), graphql_name='nodes')


class pokemon_v2_itempocketname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itempocketname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocketname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_itempocketname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itempocketname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itempocketname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itempocketname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itempocketname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itempocketname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itempocketname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itempocketname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itempocketname_variance_fields', graphql_name='variance')


class pokemon_v2_itempocketname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Float, graphql_name='item_pocket_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itempocketname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'language_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Int, graphql_name='item_pocket_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_itempocketname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'language_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Int, graphql_name='item_pocket_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_itempocketname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Float, graphql_name='item_pocket_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itempocketname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Float, graphql_name='item_pocket_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itempocketname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Float, graphql_name='item_pocket_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itempocketname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'language_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Int, graphql_name='item_pocket_id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')


class pokemon_v2_itempocketname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Float, graphql_name='item_pocket_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itempocketname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Float, graphql_name='item_pocket_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itempocketname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_pocket_id', 'language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_pocket_id = sgqlc.types.Field(Float, graphql_name='item_pocket_id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')


class pokemon_v2_itemsprites(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_v2_item', 'sprites')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    pokemon_v2_item = sgqlc.types.Field('pokemon_v2_item', graphql_name='pokemon_v2_item')
    sprites = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='sprites')


class pokemon_v2_itemsprites_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_itemsprites_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemsprites))), graphql_name='nodes')


class pokemon_v2_itemsprites_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_itemsprites_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemsprites_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_itemsprites_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_itemsprites_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_itemsprites_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_itemsprites_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_itemsprites_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_itemsprites_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_itemsprites_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_itemsprites_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_itemsprites_variance_fields', graphql_name='variance')


class pokemon_v2_itemsprites_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')


class pokemon_v2_itemsprites_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'sprites')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    sprites = sgqlc.types.Field(String, graphql_name='sprites')


class pokemon_v2_itemsprites_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'sprites')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    sprites = sgqlc.types.Field(String, graphql_name='sprites')


class pokemon_v2_itemsprites_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')


class pokemon_v2_itemsprites_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')


class pokemon_v2_itemsprites_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')


class pokemon_v2_itemsprites_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')


class pokemon_v2_itemsprites_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')


class pokemon_v2_itemsprites_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')


class pokemon_v2_itemsprites_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')


class pokemon_v2_language(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'iso3166', 'iso639', 'name', 'official', 'order', 'pokemon_v2_languagenames_by_local_language_id', 'pokemon_v2_languagenames_by_local_language_id_aggregate', 'pokemon_v2_abilitychangeeffecttexts', 'pokemon_v2_abilitychangeeffecttexts_aggregate', 'pokemon_v2_abilityeffecttexts', 'pokemon_v2_abilityeffecttexts_aggregate', 'pokemon_v2_abilityflavortexts', 'pokemon_v2_abilityflavortexts_aggregate', 'pokemon_v2_abilitynames', 'pokemon_v2_abilitynames_aggregate', 'pokemon_v2_berryfirmnessnames', 'pokemon_v2_berryfirmnessnames_aggregate', 'pokemon_v2_berryflavornames', 'pokemon_v2_berryflavornames_aggregate', 'pokemon_v2_characteristicdescriptions', 'pokemon_v2_characteristicdescriptions_aggregate', 'pokemon_v2_contesteffecteffecttexts', 'pokemon_v2_contesteffecteffecttexts_aggregate', 'pokemon_v2_contesteffectflavortexts', 'pokemon_v2_contesteffectflavortexts_aggregate', 'pokemon_v2_contesttypenames', 'pokemon_v2_contesttypenames_aggregate', 'pokemon_v2_egggroupnames', 'pokemon_v2_egggroupnames_aggregate', 'pokemon_v2_encounterconditionnames', 'pokemon_v2_encounterconditionnames_aggregate', 'pokemon_v2_encounterconditionvaluenames', 'pokemon_v2_encounterconditionvaluenames_aggregate', 'pokemon_v2_encountermethodnames', 'pokemon_v2_encountermethodnames_aggregate', 'pokemon_v2_evolutiontriggernames', 'pokemon_v2_evolutiontriggernames_aggregate', 'pokemon_v2_generationnames', 'pokemon_v2_generationnames_aggregate', 'pokemon_v2_growthratedescriptions', 'pokemon_v2_growthratedescriptions_aggregate', 'pokemon_v2_itemattributedescriptions', 'pokemon_v2_itemattributedescriptions_aggregate', 'pokemon_v2_itemattributenames', 'pokemon_v2_itemattributenames_aggregate', 'pokemon_v2_itemcategorynames', 'pokemon_v2_itemcategorynames_aggregate', 'pokemon_v2_itemeffecttexts', 'pokemon_v2_itemeffecttexts_aggregate', 'pokemon_v2_itemflavortexts', 'pokemon_v2_itemflavortexts_aggregate', 'pokemon_v2_itemflingeffecteffecttexts', 'pokemon_v2_itemflingeffecteffecttexts_aggregate', 'pokemon_v2_itemnames', 'pokemon_v2_itemnames_aggregate', 'pokemon_v2_itempocketnames', 'pokemon_v2_itempocketnames_aggregate', 'pokemon_v2_languagenames', 'pokemon_v2_languagenames_aggregate', 'pokemon_v2_locationareanames', 'pokemon_v2_locationareanames_aggregate', 'pokemon_v2_locationnames', 'pokemon_v2_locationnames_aggregate', 'pokemon_v2_moveattributedescriptions', 'pokemon_v2_moveattributedescriptions_aggregate', 'pokemon_v2_moveattributenames', 'pokemon_v2_moveattributenames_aggregate', 'pokemon_v2_movebattlestylenames', 'pokemon_v2_movebattlestylenames_aggregate', 'pokemon_v2_movedamageclassdescriptions', 'pokemon_v2_movedamageclassdescriptions_aggregate', 'pokemon_v2_movedamageclassnames', 'pokemon_v2_movedamageclassnames_aggregate', 'pokemon_v2_moveeffectchangeeffecttexts', 'pokemon_v2_moveeffectchangeeffecttexts_aggregate', 'pokemon_v2_moveeffecteffecttexts', 'pokemon_v2_moveeffecteffecttexts_aggregate', 'pokemon_v2_moveflavortexts', 'pokemon_v2_moveflavortexts_aggregate', 'pokemon_v2_movelearnmethoddescriptions', 'pokemon_v2_movelearnmethoddescriptions_aggregate', 'pokemon_v2_movelearnmethodnames', 'pokemon_v2_movelearnmethodnames_aggregate', 'pokemon_v2_movemetaailmentnames', 'pokemon_v2_movemetaailmentnames_aggregate', 'pokemon_v2_movemetacategorydescriptions', 'pokemon_v2_movemetacategorydescriptions_aggregate', 'pokemon_v2_movenames', 'pokemon_v2_movenames_aggregate', 'pokemon_v2_movetargetdescriptions', 'pokemon_v2_movetargetdescriptions_aggregate', 'pokemon_v2_movetargetnames', 'pokemon_v2_movetargetnames_aggregate', 'pokemon_v2_naturenames', 'pokemon_v2_naturenames_aggregate', 'pokemon_v2_palparkareanames', 'pokemon_v2_palparkareanames_aggregate', 'pokemon_v2_pokeathlonstatnames', 'pokemon_v2_pokeathlonstatnames_aggregate', 'pokemon_v2_pokedexdescriptions', 'pokemon_v2_pokedexdescriptions_aggregate', 'pokemon_v2_pokedexnames', 'pokemon_v2_pokedexnames_aggregate', 'pokemon_v2_pokemoncolornames', 'pokemon_v2_pokemoncolornames_aggregate', 'pokemon_v2_pokemonformnames', 'pokemon_v2_pokemonformnames_aggregate', 'pokemon_v2_pokemonhabitatnames', 'pokemon_v2_pokemonhabitatnames_aggregate', 'pokemon_v2_pokemonshapenames', 'pokemon_v2_pokemonshapenames_aggregate', 'pokemon_v2_pokemonspeciesdescriptions', 'pokemon_v2_pokemonspeciesdescriptions_aggregate', 'pokemon_v2_pokemonspeciesflavortexts', 'pokemon_v2_pokemonspeciesflavortexts_aggregate', 'pokemon_v2_pokemonspeciesnames', 'pokemon_v2_pokemonspeciesnames_aggregate', 'pokemon_v2_regionnames', 'pokemon_v2_regionnames_aggregate', 'pokemon_v2_statnames', 'pokemon_v2_statnames_aggregate', 'pokemon_v2_supercontesteffectflavortexts', 'pokemon_v2_supercontesteffectflavortexts_aggregate', 'pokemon_v2_typenames', 'pokemon_v2_typenames_aggregate', 'pokemon_v2_versionnames', 'pokemon_v2_versionnames_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    iso3166 = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='iso3166')
    iso639 = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='iso639')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    official = sgqlc.types.Field(sgqlc.types.non_null(Boolean), graphql_name='official')
    order = sgqlc.types.Field(Int, graphql_name='order')
    pokemon_v2_languagenames_by_local_language_id = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_languagename'))), graphql_name='pokemonV2LanguagenamesByLocalLanguageId', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_languagename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_languagename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_languagename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_languagenames_by_local_language_id_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_languagename_aggregate'), graphql_name='pokemonV2LanguagenamesByLocalLanguageId_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_languagename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_languagename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_languagename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilitychangeeffecttexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychangeeffecttext))), graphql_name='pokemon_v2_abilitychangeeffecttexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychangeeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychangeeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilitychangeeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilitychangeeffecttexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_abilitychangeeffecttext_aggregate), graphql_name='pokemon_v2_abilitychangeeffecttexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychangeeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychangeeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilitychangeeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilityeffecttexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityeffecttext))), graphql_name='pokemon_v2_abilityeffecttexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilityeffecttexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_abilityeffecttext_aggregate), graphql_name='pokemon_v2_abilityeffecttexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilityflavortexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext))), graphql_name='pokemon_v2_abilityflavortexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilityflavortexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_abilityflavortext_aggregate), graphql_name='pokemon_v2_abilityflavortexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilitynames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityname))), graphql_name='pokemon_v2_abilitynames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilitynames_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_abilityname_aggregate), graphql_name='pokemon_v2_abilitynames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryfirmnessnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmnessname))), graphql_name='pokemon_v2_berryfirmnessnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmnessname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmnessname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryfirmnessname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryfirmnessnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_berryfirmnessname_aggregate), graphql_name='pokemon_v2_berryfirmnessnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmnessname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmnessname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryfirmnessname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryflavornames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavorname))), graphql_name='pokemon_v2_berryflavornames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavorname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavorname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryflavorname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryflavornames_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_berryflavorname_aggregate), graphql_name='pokemon_v2_berryflavornames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavorname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavorname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryflavorname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_characteristicdescriptions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristicdescription))), graphql_name='pokemon_v2_characteristicdescriptions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristicdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristicdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_characteristicdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_characteristicdescriptions_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_characteristicdescription_aggregate), graphql_name='pokemon_v2_characteristicdescriptions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristicdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristicdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_characteristicdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesteffecteffecttexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffecteffecttext))), graphql_name='pokemon_v2_contesteffecteffecttexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesteffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesteffecteffecttexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_contesteffecteffecttext_aggregate), graphql_name='pokemon_v2_contesteffecteffecttexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesteffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesteffectflavortexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffectflavortext))), graphql_name='pokemon_v2_contesteffectflavortexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffectflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffectflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesteffectflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesteffectflavortexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_contesteffectflavortext_aggregate), graphql_name='pokemon_v2_contesteffectflavortexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffectflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffectflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesteffectflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesttypenames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttypename))), graphql_name='pokemon_v2_contesttypenames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttypename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttypename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesttypename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesttypenames_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_contesttypename_aggregate), graphql_name='pokemon_v2_contesttypenames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttypename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttypename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesttypename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_egggroupnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroupname))), graphql_name='pokemon_v2_egggroupnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroupname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroupname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_egggroupname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_egggroupnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_egggroupname_aggregate), graphql_name='pokemon_v2_egggroupnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroupname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroupname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_egggroupname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionname))), graphql_name='pokemon_v2_encounterconditionnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_encounterconditionname_aggregate), graphql_name='pokemon_v2_encounterconditionnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionvaluenames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluename))), graphql_name='pokemon_v2_encounterconditionvaluenames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionvaluename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionvaluenames_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluename_aggregate), graphql_name='pokemon_v2_encounterconditionvaluenames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionvaluename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encountermethodnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethodname))), graphql_name='pokemon_v2_encountermethodnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethodname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethodname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encountermethodname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encountermethodnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_encountermethodname_aggregate), graphql_name='pokemon_v2_encountermethodnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethodname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethodname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encountermethodname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_evolutiontriggernames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontriggername))), graphql_name='pokemon_v2_evolutiontriggernames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontriggername_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontriggername_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_evolutiontriggername_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_evolutiontriggernames_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_evolutiontriggername_aggregate), graphql_name='pokemon_v2_evolutiontriggernames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontriggername_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontriggername_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_evolutiontriggername_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_generationnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generationname))), graphql_name='pokemon_v2_generationnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generationname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generationname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_generationname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_generationnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_generationname_aggregate), graphql_name='pokemon_v2_generationnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generationname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generationname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_generationname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_growthratedescriptions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthratedescription))), graphql_name='pokemon_v2_growthratedescriptions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthratedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthratedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_growthratedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_growthratedescriptions_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_growthratedescription_aggregate), graphql_name='pokemon_v2_growthratedescriptions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthratedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthratedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_growthratedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattributedescriptions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributedescription))), graphql_name='pokemon_v2_itemattributedescriptions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattributedescriptions_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_itemattributedescription_aggregate), graphql_name='pokemon_v2_itemattributedescriptions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattributenames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributename))), graphql_name='pokemon_v2_itemattributenames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattributenames_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_itemattributename_aggregate), graphql_name='pokemon_v2_itemattributenames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemcategorynames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategoryname))), graphql_name='pokemon_v2_itemcategorynames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategoryname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategoryname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemcategoryname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemcategorynames_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_itemcategoryname_aggregate), graphql_name='pokemon_v2_itemcategorynames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategoryname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategoryname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemcategoryname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemeffecttexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemeffecttext))), graphql_name='pokemon_v2_itemeffecttexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemeffecttexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_itemeffecttext_aggregate), graphql_name='pokemon_v2_itemeffecttexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemflavortexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext))), graphql_name='pokemon_v2_itemflavortexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemflavortexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_itemflavortext_aggregate), graphql_name='pokemon_v2_itemflavortexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemflingeffecteffecttexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffecteffecttext))), graphql_name='pokemon_v2_itemflingeffecteffecttexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemflingeffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemflingeffecteffecttexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_itemflingeffecteffecttext_aggregate), graphql_name='pokemon_v2_itemflingeffecteffecttexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemflingeffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemname))), graphql_name='pokemon_v2_itemnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_itemname_aggregate), graphql_name='pokemon_v2_itemnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itempocketnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocketname))), graphql_name='pokemon_v2_itempocketnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocketname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocketname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itempocketname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itempocketnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_itempocketname_aggregate), graphql_name='pokemon_v2_itempocketnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocketname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocketname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itempocketname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_languagenames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_languagename'))), graphql_name='pokemon_v2_languagenames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_languagename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_languagename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_languagename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_languagenames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_languagename_aggregate'), graphql_name='pokemon_v2_languagenames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_languagename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_languagename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_languagename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationareanames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationareaname'))), graphql_name='pokemon_v2_locationareanames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationareaname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationareanames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_locationareaname_aggregate'), graphql_name='pokemon_v2_locationareanames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationareaname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationname'))), graphql_name='pokemon_v2_locationnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_locationname_aggregate'), graphql_name='pokemon_v2_locationnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattributedescriptions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveattributedescription'))), graphql_name='pokemon_v2_moveattributedescriptions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattributedescriptions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveattributedescription_aggregate'), graphql_name='pokemon_v2_moveattributedescriptions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattributenames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveattributename'))), graphql_name='pokemon_v2_moveattributenames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattributenames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveattributename_aggregate'), graphql_name='pokemon_v2_moveattributenames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movebattlestylenames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movebattlestylename'))), graphql_name='pokemon_v2_movebattlestylenames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestylename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestylename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movebattlestylename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movebattlestylenames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movebattlestylename_aggregate'), graphql_name='pokemon_v2_movebattlestylenames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestylename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestylename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movebattlestylename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movedamageclassdescriptions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movedamageclassdescription'))), graphql_name='pokemon_v2_movedamageclassdescriptions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movedamageclassdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movedamageclassdescriptions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movedamageclassdescription_aggregate'), graphql_name='pokemon_v2_movedamageclassdescriptions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movedamageclassdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movedamageclassnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movedamageclassname'))), graphql_name='pokemon_v2_movedamageclassnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movedamageclassname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movedamageclassnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movedamageclassname_aggregate'), graphql_name='pokemon_v2_movedamageclassnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movedamageclassname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffectchangeeffecttexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveeffectchangeeffecttext'))), graphql_name='pokemon_v2_moveeffectchangeeffecttexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchangeeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchangeeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffectchangeeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffectchangeeffecttexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveeffectchangeeffecttext_aggregate'), graphql_name='pokemon_v2_moveeffectchangeeffecttexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchangeeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchangeeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffectchangeeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffecteffecttexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveeffecteffecttext'))), graphql_name='pokemon_v2_moveeffecteffecttexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffecteffecttexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveeffecteffecttext_aggregate'), graphql_name='pokemon_v2_moveeffecteffecttexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveflavortexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveflavortext'))), graphql_name='pokemon_v2_moveflavortexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveflavortexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveflavortext_aggregate'), graphql_name='pokemon_v2_moveflavortexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movelearnmethoddescriptions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movelearnmethoddescription'))), graphql_name='pokemon_v2_movelearnmethoddescriptions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethoddescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethoddescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movelearnmethoddescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movelearnmethoddescriptions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movelearnmethoddescription_aggregate'), graphql_name='pokemon_v2_movelearnmethoddescriptions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethoddescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethoddescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movelearnmethoddescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movelearnmethodnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movelearnmethodname'))), graphql_name='pokemon_v2_movelearnmethodnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethodname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethodname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movelearnmethodname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movelearnmethodnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movelearnmethodname_aggregate'), graphql_name='pokemon_v2_movelearnmethodnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethodname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethodname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movelearnmethodname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetaailmentnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetaailmentname'))), graphql_name='pokemon_v2_movemetaailmentnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailmentname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailmentname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetaailmentname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetaailmentnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movemetaailmentname_aggregate'), graphql_name='pokemon_v2_movemetaailmentnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailmentname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailmentname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetaailmentname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetacategorydescriptions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetacategorydescription'))), graphql_name='pokemon_v2_movemetacategorydescriptions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategorydescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategorydescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetacategorydescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetacategorydescriptions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movemetacategorydescription_aggregate'), graphql_name='pokemon_v2_movemetacategorydescriptions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategorydescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategorydescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetacategorydescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movenames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movename'))), graphql_name='pokemon_v2_movenames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movenames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movename_aggregate'), graphql_name='pokemon_v2_movenames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movetargetdescriptions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movetargetdescription'))), graphql_name='pokemon_v2_movetargetdescriptions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movetargetdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movetargetdescriptions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movetargetdescription_aggregate'), graphql_name='pokemon_v2_movetargetdescriptions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movetargetdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movetargetnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movetargetname'))), graphql_name='pokemon_v2_movetargetnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movetargetname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movetargetnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movetargetname_aggregate'), graphql_name='pokemon_v2_movetargetnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movetargetname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_naturenames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_naturename'))), graphql_name='pokemon_v2_naturenames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_naturenames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_naturename_aggregate'), graphql_name='pokemon_v2_naturenames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_palparkareanames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_palparkareaname'))), graphql_name='pokemon_v2_palparkareanames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkareaname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkareaname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_palparkareaname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_palparkareanames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_palparkareaname_aggregate'), graphql_name='pokemon_v2_palparkareanames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkareaname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkareaname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_palparkareaname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokeathlonstatnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokeathlonstatname'))), graphql_name='pokemon_v2_pokeathlonstatnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstatname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstatname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokeathlonstatname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokeathlonstatnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokeathlonstatname_aggregate'), graphql_name='pokemon_v2_pokeathlonstatnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstatname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstatname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokeathlonstatname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexdescriptions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokedexdescription'))), graphql_name='pokemon_v2_pokedexdescriptions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexdescriptions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokedexdescription_aggregate'), graphql_name='pokemon_v2_pokedexdescriptions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokedexname'))), graphql_name='pokemon_v2_pokedexnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokedexname_aggregate'), graphql_name='pokemon_v2_pokedexnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemoncolornames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemoncolorname'))), graphql_name='pokemon_v2_pokemoncolornames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolorname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolorname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemoncolorname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemoncolornames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemoncolorname_aggregate'), graphql_name='pokemon_v2_pokemoncolornames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolorname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolorname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemoncolorname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonformname'))), graphql_name='pokemon_v2_pokemonformnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonformname_aggregate'), graphql_name='pokemon_v2_pokemonformnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonhabitatnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonhabitatname'))), graphql_name='pokemon_v2_pokemonhabitatnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitatname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitatname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonhabitatname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonhabitatnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonhabitatname_aggregate'), graphql_name='pokemon_v2_pokemonhabitatnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitatname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitatname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonhabitatname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonshapenames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonshapename'))), graphql_name='pokemon_v2_pokemonshapenames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshapename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshapename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonshapename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonshapenames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonshapename_aggregate'), graphql_name='pokemon_v2_pokemonshapenames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshapename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshapename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonshapename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesdescriptions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspeciesdescription'))), graphql_name='pokemon_v2_pokemonspeciesdescriptions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesdescriptions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonspeciesdescription_aggregate'), graphql_name='pokemon_v2_pokemonspeciesdescriptions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesflavortexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspeciesflavortext'))), graphql_name='pokemon_v2_pokemonspeciesflavortexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesflavortexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonspeciesflavortext_aggregate'), graphql_name='pokemon_v2_pokemonspeciesflavortexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspeciesname'))), graphql_name='pokemon_v2_pokemonspeciesnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonspeciesname_aggregate'), graphql_name='pokemon_v2_pokemonspeciesnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_regionnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_regionname'))), graphql_name='pokemon_v2_regionnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_regionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_regionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_regionname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_regionnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_regionname_aggregate'), graphql_name='pokemon_v2_regionnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_regionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_regionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_regionname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_statnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_statname'))), graphql_name='pokemon_v2_statnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_statname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_statname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_statname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_statnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_statname_aggregate'), graphql_name='pokemon_v2_statnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_statname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_statname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_statname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_supercontesteffectflavortexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_supercontesteffectflavortext'))), graphql_name='pokemon_v2_supercontesteffectflavortexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffectflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffectflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_supercontesteffectflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_supercontesteffectflavortexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_supercontesteffectflavortext_aggregate'), graphql_name='pokemon_v2_supercontesteffectflavortexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffectflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffectflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_supercontesteffectflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_typenames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_typename'))), graphql_name='pokemon_v2_typenames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_typenames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_typename_aggregate'), graphql_name='pokemon_v2_typenames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versionnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_versionname'))), graphql_name='pokemon_v2_versionnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versionname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versionnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_versionname_aggregate'), graphql_name='pokemon_v2_versionnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versionname_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_language_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_language_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_language))), graphql_name='nodes')


class pokemon_v2_language_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_language_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_language_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_language_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_language_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_language_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_language_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_language_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_language_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_language_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_language_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_language_variance_fields', graphql_name='variance')


class pokemon_v2_language_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'order')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')


class pokemon_v2_language_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'iso3166', 'iso639', 'name', 'order')
    id = sgqlc.types.Field(Int, graphql_name='id')
    iso3166 = sgqlc.types.Field(String, graphql_name='iso3166')
    iso639 = sgqlc.types.Field(String, graphql_name='iso639')
    name = sgqlc.types.Field(String, graphql_name='name')
    order = sgqlc.types.Field(Int, graphql_name='order')


class pokemon_v2_language_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'iso3166', 'iso639', 'name', 'order')
    id = sgqlc.types.Field(Int, graphql_name='id')
    iso3166 = sgqlc.types.Field(String, graphql_name='iso3166')
    iso639 = sgqlc.types.Field(String, graphql_name='iso639')
    name = sgqlc.types.Field(String, graphql_name='name')
    order = sgqlc.types.Field(Int, graphql_name='order')


class pokemon_v2_language_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'order')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')


class pokemon_v2_language_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'order')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')


class pokemon_v2_language_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'order')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')


class pokemon_v2_language_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'order')
    id = sgqlc.types.Field(Int, graphql_name='id')
    order = sgqlc.types.Field(Int, graphql_name='order')


class pokemon_v2_language_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'order')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')


class pokemon_v2_language_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'order')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')


class pokemon_v2_language_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'order')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')


class pokemon_v2_languagename(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'local_language_id', 'name', 'pokemon_v2_language_by_local_language_id', 'pokemon_v2_language')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    local_language_id = sgqlc.types.Field(Int, graphql_name='local_language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_language_by_local_language_id = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemonV2LanguageByLocalLanguageId')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')


class pokemon_v2_languagename_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_languagename_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_languagename))), graphql_name='nodes')


class pokemon_v2_languagename_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_languagename_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_languagename_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_languagename_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_languagename_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_languagename_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_languagename_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_languagename_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_languagename_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_languagename_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_languagename_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_languagename_variance_fields', graphql_name='variance')


class pokemon_v2_languagename_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'local_language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    local_language_id = sgqlc.types.Field(Float, graphql_name='local_language_id')


class pokemon_v2_languagename_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'local_language_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    local_language_id = sgqlc.types.Field(Int, graphql_name='local_language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_languagename_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'local_language_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    local_language_id = sgqlc.types.Field(Int, graphql_name='local_language_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_languagename_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'local_language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    local_language_id = sgqlc.types.Field(Float, graphql_name='local_language_id')


class pokemon_v2_languagename_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'local_language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    local_language_id = sgqlc.types.Field(Float, graphql_name='local_language_id')


class pokemon_v2_languagename_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'local_language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    local_language_id = sgqlc.types.Field(Float, graphql_name='local_language_id')


class pokemon_v2_languagename_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'local_language_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    local_language_id = sgqlc.types.Field(Int, graphql_name='local_language_id')


class pokemon_v2_languagename_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'local_language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    local_language_id = sgqlc.types.Field(Float, graphql_name='local_language_id')


class pokemon_v2_languagename_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'local_language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    local_language_id = sgqlc.types.Field(Float, graphql_name='local_language_id')


class pokemon_v2_languagename_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'local_language_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    local_language_id = sgqlc.types.Field(Float, graphql_name='local_language_id')


class pokemon_v2_location(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_locationareas', 'pokemon_v2_locationareas_aggregate', 'pokemon_v2_locationgameindices', 'pokemon_v2_locationgameindices_aggregate', 'pokemon_v2_locationnames', 'pokemon_v2_locationnames_aggregate', 'pokemon_v2_pokemonevolutions', 'pokemon_v2_pokemonevolutions_aggregate', 'pokemon_v2_region', 'region_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_locationareas = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationarea'))), graphql_name='pokemon_v2_locationareas', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationarea_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationarea_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationarea_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationareas_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_locationarea_aggregate'), graphql_name='pokemon_v2_locationareas_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationarea_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationarea_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationarea_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationgameindices = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationgameindex'))), graphql_name='pokemon_v2_locationgameindices', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationgameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationgameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationgameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationgameindices_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_locationgameindex_aggregate'), graphql_name='pokemon_v2_locationgameindices_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationgameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationgameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationgameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationname'))), graphql_name='pokemon_v2_locationnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_locationname_aggregate'), graphql_name='pokemon_v2_locationnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonevolutions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonevolution'))), graphql_name='pokemon_v2_pokemonevolutions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonevolutions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonevolution_aggregate'), graphql_name='pokemon_v2_pokemonevolutions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_region = sgqlc.types.Field('pokemon_v2_region', graphql_name='pokemon_v2_region')
    region_id = sgqlc.types.Field(Int, graphql_name='region_id')


class pokemon_v2_location_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_location_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_location))), graphql_name='nodes')


class pokemon_v2_location_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_location_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_location_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_location_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_location_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_location_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_location_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_location_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_location_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_location_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_location_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_location_variance_fields', graphql_name='variance')


class pokemon_v2_location_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_location_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'region_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')
    region_id = sgqlc.types.Field(Int, graphql_name='region_id')


class pokemon_v2_location_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'region_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')
    region_id = sgqlc.types.Field(Int, graphql_name='region_id')


class pokemon_v2_location_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_location_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_location_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_location_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    region_id = sgqlc.types.Field(Int, graphql_name='region_id')


class pokemon_v2_location_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_location_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_location_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_locationarea(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'location_id', 'name', 'pokemon_v2_encounters', 'pokemon_v2_encounters_aggregate', 'pokemon_v2_location', 'pokemon_v2_locationareaencounterrates', 'pokemon_v2_locationareaencounterrates_aggregate', 'pokemon_v2_locationareanames', 'pokemon_v2_locationareanames_aggregate')
    game_index = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='game_index')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    location_id = sgqlc.types.Field(Int, graphql_name='location_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_encounters = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter))), graphql_name='pokemon_v2_encounters', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounter_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounters_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_encounter_aggregate), graphql_name='pokemon_v2_encounters_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounter_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_location = sgqlc.types.Field('pokemon_v2_location', graphql_name='pokemon_v2_location')
    pokemon_v2_locationareaencounterrates = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationareaencounterrate'))), graphql_name='pokemon_v2_locationareaencounterrates', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationareaencounterrate_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationareaencounterrates_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_locationareaencounterrate_aggregate'), graphql_name='pokemon_v2_locationareaencounterrates_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationareaencounterrate_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationareanames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationareaname'))), graphql_name='pokemon_v2_locationareanames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationareaname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationareanames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_locationareaname_aggregate'), graphql_name='pokemon_v2_locationareanames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationareaname_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_locationarea_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_locationarea_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationarea))), graphql_name='nodes')


class pokemon_v2_locationarea_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_locationarea_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationarea_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_locationarea_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_locationarea_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_locationarea_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_locationarea_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_locationarea_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_locationarea_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_locationarea_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_locationarea_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_locationarea_variance_fields', graphql_name='variance')


class pokemon_v2_locationarea_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'location_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')


class pokemon_v2_locationarea_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'location_id', 'name')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    id = sgqlc.types.Field(Int, graphql_name='id')
    location_id = sgqlc.types.Field(Int, graphql_name='location_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_locationarea_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'location_id', 'name')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    id = sgqlc.types.Field(Int, graphql_name='id')
    location_id = sgqlc.types.Field(Int, graphql_name='location_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_locationarea_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'location_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')


class pokemon_v2_locationarea_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'location_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')


class pokemon_v2_locationarea_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'location_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')


class pokemon_v2_locationarea_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'location_id')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    id = sgqlc.types.Field(Int, graphql_name='id')
    location_id = sgqlc.types.Field(Int, graphql_name='location_id')


class pokemon_v2_locationarea_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'location_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')


class pokemon_v2_locationarea_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'location_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')


class pokemon_v2_locationarea_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'location_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')


class pokemon_v2_locationareaencounterrate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'location_area_id', 'pokemon_v2_encountermethod', 'pokemon_v2_locationarea', 'pokemon_v2_version', 'rate', 'version_id')
    encounter_method_id = sgqlc.types.Field(Int, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    location_area_id = sgqlc.types.Field(Int, graphql_name='location_area_id')
    pokemon_v2_encountermethod = sgqlc.types.Field('pokemon_v2_encountermethod', graphql_name='pokemon_v2_encountermethod')
    pokemon_v2_locationarea = sgqlc.types.Field('pokemon_v2_locationarea', graphql_name='pokemon_v2_locationarea')
    pokemon_v2_version = sgqlc.types.Field('pokemon_v2_version', graphql_name='pokemon_v2_version')
    rate = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='rate')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_locationareaencounterrate_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate))), graphql_name='nodes')


class pokemon_v2_locationareaencounterrate_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_locationareaencounterrate_variance_fields', graphql_name='variance')


class pokemon_v2_locationareaencounterrate_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'location_area_id', 'rate', 'version_id')
    encounter_method_id = sgqlc.types.Field(Float, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_area_id = sgqlc.types.Field(Float, graphql_name='location_area_id')
    rate = sgqlc.types.Field(Float, graphql_name='rate')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_locationareaencounterrate_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'location_area_id', 'rate', 'version_id')
    encounter_method_id = sgqlc.types.Field(Int, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    location_area_id = sgqlc.types.Field(Int, graphql_name='location_area_id')
    rate = sgqlc.types.Field(Int, graphql_name='rate')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_locationareaencounterrate_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'location_area_id', 'rate', 'version_id')
    encounter_method_id = sgqlc.types.Field(Int, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    location_area_id = sgqlc.types.Field(Int, graphql_name='location_area_id')
    rate = sgqlc.types.Field(Int, graphql_name='rate')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_locationareaencounterrate_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'location_area_id', 'rate', 'version_id')
    encounter_method_id = sgqlc.types.Field(Float, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_area_id = sgqlc.types.Field(Float, graphql_name='location_area_id')
    rate = sgqlc.types.Field(Float, graphql_name='rate')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_locationareaencounterrate_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'location_area_id', 'rate', 'version_id')
    encounter_method_id = sgqlc.types.Field(Float, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_area_id = sgqlc.types.Field(Float, graphql_name='location_area_id')
    rate = sgqlc.types.Field(Float, graphql_name='rate')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_locationareaencounterrate_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'location_area_id', 'rate', 'version_id')
    encounter_method_id = sgqlc.types.Field(Float, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_area_id = sgqlc.types.Field(Float, graphql_name='location_area_id')
    rate = sgqlc.types.Field(Float, graphql_name='rate')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_locationareaencounterrate_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'location_area_id', 'rate', 'version_id')
    encounter_method_id = sgqlc.types.Field(Int, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    location_area_id = sgqlc.types.Field(Int, graphql_name='location_area_id')
    rate = sgqlc.types.Field(Int, graphql_name='rate')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_locationareaencounterrate_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'location_area_id', 'rate', 'version_id')
    encounter_method_id = sgqlc.types.Field(Float, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_area_id = sgqlc.types.Field(Float, graphql_name='location_area_id')
    rate = sgqlc.types.Field(Float, graphql_name='rate')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_locationareaencounterrate_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'location_area_id', 'rate', 'version_id')
    encounter_method_id = sgqlc.types.Field(Float, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_area_id = sgqlc.types.Field(Float, graphql_name='location_area_id')
    rate = sgqlc.types.Field(Float, graphql_name='rate')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_locationareaencounterrate_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('encounter_method_id', 'id', 'location_area_id', 'rate', 'version_id')
    encounter_method_id = sgqlc.types.Field(Float, graphql_name='encounter_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_area_id = sgqlc.types.Field(Float, graphql_name='location_area_id')
    rate = sgqlc.types.Field(Float, graphql_name='rate')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_locationareaname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_area_id', 'name', 'pokemon_v2_language', 'pokemon_v2_locationarea')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    location_area_id = sgqlc.types.Field(Int, graphql_name='location_area_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_locationarea = sgqlc.types.Field('pokemon_v2_locationarea', graphql_name='pokemon_v2_locationarea')


class pokemon_v2_locationareaname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_locationareaname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaname))), graphql_name='nodes')


class pokemon_v2_locationareaname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_locationareaname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_locationareaname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_locationareaname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_locationareaname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_locationareaname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_locationareaname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_locationareaname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_locationareaname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_locationareaname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_locationareaname_variance_fields', graphql_name='variance')


class pokemon_v2_locationareaname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_area_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    location_area_id = sgqlc.types.Field(Float, graphql_name='location_area_id')


class pokemon_v2_locationareaname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_area_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    location_area_id = sgqlc.types.Field(Int, graphql_name='location_area_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_locationareaname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_area_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    location_area_id = sgqlc.types.Field(Int, graphql_name='location_area_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_locationareaname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_area_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    location_area_id = sgqlc.types.Field(Float, graphql_name='location_area_id')


class pokemon_v2_locationareaname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_area_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    location_area_id = sgqlc.types.Field(Float, graphql_name='location_area_id')


class pokemon_v2_locationareaname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_area_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    location_area_id = sgqlc.types.Field(Float, graphql_name='location_area_id')


class pokemon_v2_locationareaname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_area_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    location_area_id = sgqlc.types.Field(Int, graphql_name='location_area_id')


class pokemon_v2_locationareaname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_area_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    location_area_id = sgqlc.types.Field(Float, graphql_name='location_area_id')


class pokemon_v2_locationareaname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_area_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    location_area_id = sgqlc.types.Field(Float, graphql_name='location_area_id')


class pokemon_v2_locationareaname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_area_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    location_area_id = sgqlc.types.Field(Float, graphql_name='location_area_id')


class pokemon_v2_locationgameindex(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'location_id', 'pokemon_v2_generation', 'pokemon_v2_location')
    game_index = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='game_index')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    location_id = sgqlc.types.Field(Int, graphql_name='location_id')
    pokemon_v2_generation = sgqlc.types.Field('pokemon_v2_generation', graphql_name='pokemon_v2_generation')
    pokemon_v2_location = sgqlc.types.Field('pokemon_v2_location', graphql_name='pokemon_v2_location')


class pokemon_v2_locationgameindex_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_locationgameindex_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationgameindex))), graphql_name='nodes')


class pokemon_v2_locationgameindex_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_locationgameindex_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationgameindex_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_locationgameindex_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_locationgameindex_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_locationgameindex_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_locationgameindex_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_locationgameindex_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_locationgameindex_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_locationgameindex_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_locationgameindex_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_locationgameindex_variance_fields', graphql_name='variance')


class pokemon_v2_locationgameindex_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'location_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')


class pokemon_v2_locationgameindex_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'location_id')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    location_id = sgqlc.types.Field(Int, graphql_name='location_id')


class pokemon_v2_locationgameindex_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'location_id')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    location_id = sgqlc.types.Field(Int, graphql_name='location_id')


class pokemon_v2_locationgameindex_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'location_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')


class pokemon_v2_locationgameindex_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'location_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')


class pokemon_v2_locationgameindex_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'location_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')


class pokemon_v2_locationgameindex_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'location_id')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    location_id = sgqlc.types.Field(Int, graphql_name='location_id')


class pokemon_v2_locationgameindex_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'location_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')


class pokemon_v2_locationgameindex_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'location_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')


class pokemon_v2_locationgameindex_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'location_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')


class pokemon_v2_locationname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_id', 'name', 'pokemon_v2_language', 'pokemon_v2_location')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    location_id = sgqlc.types.Field(Int, graphql_name='location_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_location = sgqlc.types.Field('pokemon_v2_location', graphql_name='pokemon_v2_location')


class pokemon_v2_locationname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_locationname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationname))), graphql_name='nodes')


class pokemon_v2_locationname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_locationname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_locationname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_locationname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_locationname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_locationname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_locationname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_locationname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_locationname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_locationname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_locationname_variance_fields', graphql_name='variance')


class pokemon_v2_locationname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')


class pokemon_v2_locationname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    location_id = sgqlc.types.Field(Int, graphql_name='location_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_locationname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    location_id = sgqlc.types.Field(Int, graphql_name='location_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_locationname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')


class pokemon_v2_locationname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')


class pokemon_v2_locationname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')


class pokemon_v2_locationname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    location_id = sgqlc.types.Field(Int, graphql_name='location_id')


class pokemon_v2_locationname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')


class pokemon_v2_locationname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')


class pokemon_v2_locationname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'location_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')


class pokemon_v2_machine(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'pokemon_v2_growthrate', 'pokemon_v2_item', 'pokemon_v2_move', 'pokemon_v2_versiongroup', 'version_group_id')
    growth_rate_id = sgqlc.types.Field(Int, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    machine_number = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='machine_number')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    pokemon_v2_growthrate = sgqlc.types.Field('pokemon_v2_growthrate', graphql_name='pokemon_v2_growthrate')
    pokemon_v2_item = sgqlc.types.Field('pokemon_v2_item', graphql_name='pokemon_v2_item')
    pokemon_v2_move = sgqlc.types.Field('pokemon_v2_move', graphql_name='pokemon_v2_move')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_machine_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_machine_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine))), graphql_name='nodes')


class pokemon_v2_machine_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_machine_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_machine_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_machine_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_machine_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_machine_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_machine_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_machine_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_machine_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_machine_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_machine_variance_fields', graphql_name='variance')


class pokemon_v2_machine_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'version_group_id')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    machine_number = sgqlc.types.Field(Float, graphql_name='machine_number')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_machine_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'version_group_id')
    growth_rate_id = sgqlc.types.Field(Int, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    machine_number = sgqlc.types.Field(Int, graphql_name='machine_number')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_machine_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'version_group_id')
    growth_rate_id = sgqlc.types.Field(Int, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    machine_number = sgqlc.types.Field(Int, graphql_name='machine_number')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_machine_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'version_group_id')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    machine_number = sgqlc.types.Field(Float, graphql_name='machine_number')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_machine_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'version_group_id')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    machine_number = sgqlc.types.Field(Float, graphql_name='machine_number')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_machine_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'version_group_id')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    machine_number = sgqlc.types.Field(Float, graphql_name='machine_number')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_machine_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'version_group_id')
    growth_rate_id = sgqlc.types.Field(Int, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    machine_number = sgqlc.types.Field(Int, graphql_name='machine_number')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_machine_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'version_group_id')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    machine_number = sgqlc.types.Field(Float, graphql_name='machine_number')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_machine_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'version_group_id')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    machine_number = sgqlc.types.Field(Float, graphql_name='machine_number')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_machine_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('growth_rate_id', 'id', 'item_id', 'machine_number', 'move_id', 'version_group_id')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    machine_number = sgqlc.types.Field(Float, graphql_name='machine_number')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_move(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'name', 'pokemon_v2_contestcombos_by_second_move_id', 'pokemon_v2_contestcombos_by_second_move_id_aggregate', 'pokemon_v2_supercontestcombos_by_second_move_id', 'pokemon_v2_supercontestcombos_by_second_move_id_aggregate', 'pokemon_v2_contestcombos', 'pokemon_v2_contestcombos_aggregate', 'pokemon_v2_contesteffect', 'pokemon_v2_contesttype', 'pokemon_v2_generation', 'pokemon_v2_machines', 'pokemon_v2_machines_aggregate', 'pokemon_v2_moveattributemaps', 'pokemon_v2_moveattributemaps_aggregate', 'pokemon_v2_movechanges', 'pokemon_v2_movechanges_aggregate', 'pokemon_v2_movedamageclass', 'pokemon_v2_moveeffect', 'pokemon_v2_moveflavortexts', 'pokemon_v2_moveflavortexts_aggregate', 'pokemon_v2_movemeta', 'pokemon_v2_movemeta_aggregate', 'pokemon_v2_movemetastatchanges', 'pokemon_v2_movemetastatchanges_aggregate', 'pokemon_v2_movemetum', 'pokemon_v2_movenames', 'pokemon_v2_movenames_aggregate', 'pokemon_v2_movetarget', 'pokemon_v2_pokemonevolutions', 'pokemon_v2_pokemonevolutions_aggregate', 'pokemon_v2_pokemonmoves', 'pokemon_v2_pokemonmoves_aggregate', 'pokemon_v2_supercontestcombos', 'pokemon_v2_supercontestcombos_aggregate', 'pokemon_v2_supercontesteffect', 'pokemon_v2_type', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')
    accuracy = sgqlc.types.Field(Int, graphql_name='accuracy')
    contest_effect_id = sgqlc.types.Field(Int, graphql_name='contest_effect_id')
    contest_type_id = sgqlc.types.Field(Int, graphql_name='contest_type_id')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Int, graphql_name='move_damage_class_id')
    move_effect_chance = sgqlc.types.Field(Int, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Int, graphql_name='move_effect_id')
    move_target_id = sgqlc.types.Field(Int, graphql_name='move_target_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_contestcombos_by_second_move_id = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contestcombo))), graphql_name='pokemonV2ContestcombosBySecondMoveId', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contestcombo_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contestcombo_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contestcombo_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contestcombos_by_second_move_id_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_contestcombo_aggregate), graphql_name='pokemonV2ContestcombosBySecondMoveId_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contestcombo_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contestcombo_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contestcombo_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_supercontestcombos_by_second_move_id = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_supercontestcombo'))), graphql_name='pokemonV2SupercontestcombosBySecondMoveId', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontestcombo_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontestcombo_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_supercontestcombo_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_supercontestcombos_by_second_move_id_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_supercontestcombo_aggregate'), graphql_name='pokemonV2SupercontestcombosBySecondMoveId_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontestcombo_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontestcombo_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_supercontestcombo_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contestcombos = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contestcombo))), graphql_name='pokemon_v2_contestcombos', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contestcombo_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contestcombo_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contestcombo_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contestcombos_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_contestcombo_aggregate), graphql_name='pokemon_v2_contestcombos_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contestcombo_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contestcombo_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contestcombo_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesteffect = sgqlc.types.Field('pokemon_v2_contesteffect', graphql_name='pokemon_v2_contesteffect')
    pokemon_v2_contesttype = sgqlc.types.Field('pokemon_v2_contesttype', graphql_name='pokemon_v2_contesttype')
    pokemon_v2_generation = sgqlc.types.Field('pokemon_v2_generation', graphql_name='pokemon_v2_generation')
    pokemon_v2_machines = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine))), graphql_name='pokemon_v2_machines', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_machine_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_machines_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_machine_aggregate), graphql_name='pokemon_v2_machines_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_machine_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattributemaps = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveattributemap'))), graphql_name='pokemon_v2_moveattributemaps', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattributemaps_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveattributemap_aggregate'), graphql_name='pokemon_v2_moveattributemaps_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movechanges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movechange'))), graphql_name='pokemon_v2_movechanges', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movechange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movechanges_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movechange_aggregate'), graphql_name='pokemon_v2_movechanges_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movechange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movedamageclass = sgqlc.types.Field('pokemon_v2_movedamageclass', graphql_name='pokemon_v2_movedamageclass')
    pokemon_v2_moveeffect = sgqlc.types.Field('pokemon_v2_moveeffect', graphql_name='pokemon_v2_moveeffect')
    pokemon_v2_moveflavortexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveflavortext'))), graphql_name='pokemon_v2_moveflavortexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveflavortexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveflavortext_aggregate'), graphql_name='pokemon_v2_moveflavortexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemeta = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemeta'))), graphql_name='pokemon_v2_movemeta', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemeta_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemeta_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemeta_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemeta_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movemeta_aggregate'), graphql_name='pokemon_v2_movemeta_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemeta_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemeta_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemeta_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetastatchanges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetastatchange'))), graphql_name='pokemon_v2_movemetastatchanges', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetastatchange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetastatchange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetastatchange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetastatchanges_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movemetastatchange_aggregate'), graphql_name='pokemon_v2_movemetastatchanges_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetastatchange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetastatchange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetastatchange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetum = sgqlc.types.Field('pokemon_v2_movemeta', graphql_name='pokemon_v2_movemetum')
    pokemon_v2_movenames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movename'))), graphql_name='pokemon_v2_movenames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movenames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movename_aggregate'), graphql_name='pokemon_v2_movenames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movetarget = sgqlc.types.Field('pokemon_v2_movetarget', graphql_name='pokemon_v2_movetarget')
    pokemon_v2_pokemonevolutions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonevolution'))), graphql_name='pokemon_v2_pokemonevolutions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonevolutions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonevolution_aggregate'), graphql_name='pokemon_v2_pokemonevolutions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonmoves = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonmove'))), graphql_name='pokemon_v2_pokemonmoves', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonmove_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonmoves_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonmove_aggregate'), graphql_name='pokemon_v2_pokemonmoves_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonmove_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_supercontestcombos = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_supercontestcombo'))), graphql_name='pokemon_v2_supercontestcombos', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontestcombo_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontestcombo_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_supercontestcombo_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_supercontestcombos_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_supercontestcombo_aggregate'), graphql_name='pokemon_v2_supercontestcombos_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontestcombo_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontestcombo_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_supercontestcombo_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_supercontesteffect = sgqlc.types.Field('pokemon_v2_supercontesteffect', graphql_name='pokemon_v2_supercontesteffect')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type', graphql_name='pokemon_v2_type')
    power = sgqlc.types.Field(Int, graphql_name='power')
    pp = sgqlc.types.Field(Int, graphql_name='pp')
    priority = sgqlc.types.Field(Int, graphql_name='priority')
    super_contest_effect_id = sgqlc.types.Field(Int, graphql_name='super_contest_effect_id')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_move_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_move_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move))), graphql_name='nodes')


class pokemon_v2_move_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_move_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_move_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_move_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_move_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_move_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_move_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_move_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_move_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_move_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_move_variance_fields', graphql_name='variance')


class pokemon_v2_move_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')
    accuracy = sgqlc.types.Field(Float, graphql_name='accuracy')
    contest_effect_id = sgqlc.types.Field(Float, graphql_name='contest_effect_id')
    contest_type_id = sgqlc.types.Field(Float, graphql_name='contest_type_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')
    move_effect_chance = sgqlc.types.Field(Float, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')
    move_target_id = sgqlc.types.Field(Float, graphql_name='move_target_id')
    power = sgqlc.types.Field(Float, graphql_name='power')
    pp = sgqlc.types.Field(Float, graphql_name='pp')
    priority = sgqlc.types.Field(Float, graphql_name='priority')
    super_contest_effect_id = sgqlc.types.Field(Float, graphql_name='super_contest_effect_id')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_move_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'name', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')
    accuracy = sgqlc.types.Field(Int, graphql_name='accuracy')
    contest_effect_id = sgqlc.types.Field(Int, graphql_name='contest_effect_id')
    contest_type_id = sgqlc.types.Field(Int, graphql_name='contest_type_id')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Int, graphql_name='move_damage_class_id')
    move_effect_chance = sgqlc.types.Field(Int, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Int, graphql_name='move_effect_id')
    move_target_id = sgqlc.types.Field(Int, graphql_name='move_target_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    power = sgqlc.types.Field(Int, graphql_name='power')
    pp = sgqlc.types.Field(Int, graphql_name='pp')
    priority = sgqlc.types.Field(Int, graphql_name='priority')
    super_contest_effect_id = sgqlc.types.Field(Int, graphql_name='super_contest_effect_id')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_move_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'name', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')
    accuracy = sgqlc.types.Field(Int, graphql_name='accuracy')
    contest_effect_id = sgqlc.types.Field(Int, graphql_name='contest_effect_id')
    contest_type_id = sgqlc.types.Field(Int, graphql_name='contest_type_id')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Int, graphql_name='move_damage_class_id')
    move_effect_chance = sgqlc.types.Field(Int, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Int, graphql_name='move_effect_id')
    move_target_id = sgqlc.types.Field(Int, graphql_name='move_target_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    power = sgqlc.types.Field(Int, graphql_name='power')
    pp = sgqlc.types.Field(Int, graphql_name='pp')
    priority = sgqlc.types.Field(Int, graphql_name='priority')
    super_contest_effect_id = sgqlc.types.Field(Int, graphql_name='super_contest_effect_id')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_move_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')
    accuracy = sgqlc.types.Field(Float, graphql_name='accuracy')
    contest_effect_id = sgqlc.types.Field(Float, graphql_name='contest_effect_id')
    contest_type_id = sgqlc.types.Field(Float, graphql_name='contest_type_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')
    move_effect_chance = sgqlc.types.Field(Float, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')
    move_target_id = sgqlc.types.Field(Float, graphql_name='move_target_id')
    power = sgqlc.types.Field(Float, graphql_name='power')
    pp = sgqlc.types.Field(Float, graphql_name='pp')
    priority = sgqlc.types.Field(Float, graphql_name='priority')
    super_contest_effect_id = sgqlc.types.Field(Float, graphql_name='super_contest_effect_id')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_move_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')
    accuracy = sgqlc.types.Field(Float, graphql_name='accuracy')
    contest_effect_id = sgqlc.types.Field(Float, graphql_name='contest_effect_id')
    contest_type_id = sgqlc.types.Field(Float, graphql_name='contest_type_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')
    move_effect_chance = sgqlc.types.Field(Float, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')
    move_target_id = sgqlc.types.Field(Float, graphql_name='move_target_id')
    power = sgqlc.types.Field(Float, graphql_name='power')
    pp = sgqlc.types.Field(Float, graphql_name='pp')
    priority = sgqlc.types.Field(Float, graphql_name='priority')
    super_contest_effect_id = sgqlc.types.Field(Float, graphql_name='super_contest_effect_id')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_move_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')
    accuracy = sgqlc.types.Field(Float, graphql_name='accuracy')
    contest_effect_id = sgqlc.types.Field(Float, graphql_name='contest_effect_id')
    contest_type_id = sgqlc.types.Field(Float, graphql_name='contest_type_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')
    move_effect_chance = sgqlc.types.Field(Float, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')
    move_target_id = sgqlc.types.Field(Float, graphql_name='move_target_id')
    power = sgqlc.types.Field(Float, graphql_name='power')
    pp = sgqlc.types.Field(Float, graphql_name='pp')
    priority = sgqlc.types.Field(Float, graphql_name='priority')
    super_contest_effect_id = sgqlc.types.Field(Float, graphql_name='super_contest_effect_id')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_move_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')
    accuracy = sgqlc.types.Field(Int, graphql_name='accuracy')
    contest_effect_id = sgqlc.types.Field(Int, graphql_name='contest_effect_id')
    contest_type_id = sgqlc.types.Field(Int, graphql_name='contest_type_id')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Int, graphql_name='move_damage_class_id')
    move_effect_chance = sgqlc.types.Field(Int, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Int, graphql_name='move_effect_id')
    move_target_id = sgqlc.types.Field(Int, graphql_name='move_target_id')
    power = sgqlc.types.Field(Int, graphql_name='power')
    pp = sgqlc.types.Field(Int, graphql_name='pp')
    priority = sgqlc.types.Field(Int, graphql_name='priority')
    super_contest_effect_id = sgqlc.types.Field(Int, graphql_name='super_contest_effect_id')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_move_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')
    accuracy = sgqlc.types.Field(Float, graphql_name='accuracy')
    contest_effect_id = sgqlc.types.Field(Float, graphql_name='contest_effect_id')
    contest_type_id = sgqlc.types.Field(Float, graphql_name='contest_type_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')
    move_effect_chance = sgqlc.types.Field(Float, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')
    move_target_id = sgqlc.types.Field(Float, graphql_name='move_target_id')
    power = sgqlc.types.Field(Float, graphql_name='power')
    pp = sgqlc.types.Field(Float, graphql_name='pp')
    priority = sgqlc.types.Field(Float, graphql_name='priority')
    super_contest_effect_id = sgqlc.types.Field(Float, graphql_name='super_contest_effect_id')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_move_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')
    accuracy = sgqlc.types.Field(Float, graphql_name='accuracy')
    contest_effect_id = sgqlc.types.Field(Float, graphql_name='contest_effect_id')
    contest_type_id = sgqlc.types.Field(Float, graphql_name='contest_type_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')
    move_effect_chance = sgqlc.types.Field(Float, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')
    move_target_id = sgqlc.types.Field(Float, graphql_name='move_target_id')
    power = sgqlc.types.Field(Float, graphql_name='power')
    pp = sgqlc.types.Field(Float, graphql_name='pp')
    priority = sgqlc.types.Field(Float, graphql_name='priority')
    super_contest_effect_id = sgqlc.types.Field(Float, graphql_name='super_contest_effect_id')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_move_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'contest_effect_id', 'contest_type_id', 'generation_id', 'id', 'move_damage_class_id', 'move_effect_chance', 'move_effect_id', 'move_target_id', 'power', 'pp', 'priority', 'super_contest_effect_id', 'type_id')
    accuracy = sgqlc.types.Field(Float, graphql_name='accuracy')
    contest_effect_id = sgqlc.types.Field(Float, graphql_name='contest_effect_id')
    contest_type_id = sgqlc.types.Field(Float, graphql_name='contest_type_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')
    move_effect_chance = sgqlc.types.Field(Float, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')
    move_target_id = sgqlc.types.Field(Float, graphql_name='move_target_id')
    power = sgqlc.types.Field(Float, graphql_name='power')
    pp = sgqlc.types.Field(Float, graphql_name='pp')
    priority = sgqlc.types.Field(Float, graphql_name='priority')
    super_contest_effect_id = sgqlc.types.Field(Float, graphql_name='super_contest_effect_id')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_moveattribute(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_moveattributedescriptions', 'pokemon_v2_moveattributedescriptions_aggregate', 'pokemon_v2_moveattributemaps', 'pokemon_v2_moveattributemaps_aggregate', 'pokemon_v2_moveattributenames', 'pokemon_v2_moveattributenames_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_moveattributedescriptions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveattributedescription'))), graphql_name='pokemon_v2_moveattributedescriptions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattributedescriptions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveattributedescription_aggregate'), graphql_name='pokemon_v2_moveattributedescriptions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattributemaps = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveattributemap'))), graphql_name='pokemon_v2_moveattributemaps', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattributemaps_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveattributemap_aggregate'), graphql_name='pokemon_v2_moveattributemaps_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattributenames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveattributename'))), graphql_name='pokemon_v2_moveattributenames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattributenames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveattributename_aggregate'), graphql_name='pokemon_v2_moveattributenames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributename_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_moveattribute_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_moveattribute_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattribute))), graphql_name='nodes')


class pokemon_v2_moveattribute_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_moveattribute_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattribute_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_moveattribute_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_moveattribute_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_moveattribute_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_moveattribute_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_moveattribute_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_moveattribute_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_moveattribute_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_moveattribute_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_moveattribute_variance_fields', graphql_name='variance')


class pokemon_v2_moveattribute_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_moveattribute_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_moveattribute_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_moveattribute_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_moveattribute_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_moveattribute_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_moveattribute_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_moveattribute_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_moveattribute_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_moveattribute_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_moveattributedescription(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_attribute_id', 'pokemon_v2_language', 'pokemon_v2_moveattribute')
    description = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='description')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Int, graphql_name='move_attribute_id')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_moveattribute = sgqlc.types.Field('pokemon_v2_moveattribute', graphql_name='pokemon_v2_moveattribute')


class pokemon_v2_moveattributedescription_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_moveattributedescription_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributedescription))), graphql_name='nodes')


class pokemon_v2_moveattributedescription_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_moveattributedescription_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributedescription_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_moveattributedescription_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_moveattributedescription_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_moveattributedescription_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_moveattributedescription_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_moveattributedescription_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_moveattributedescription_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_moveattributedescription_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_moveattributedescription_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_moveattributedescription_variance_fields', graphql_name='variance')


class pokemon_v2_moveattributedescription_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Float, graphql_name='move_attribute_id')


class pokemon_v2_moveattributedescription_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_attribute_id')
    description = sgqlc.types.Field(String, graphql_name='description')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Int, graphql_name='move_attribute_id')


class pokemon_v2_moveattributedescription_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_attribute_id')
    description = sgqlc.types.Field(String, graphql_name='description')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Int, graphql_name='move_attribute_id')


class pokemon_v2_moveattributedescription_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Float, graphql_name='move_attribute_id')


class pokemon_v2_moveattributedescription_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Float, graphql_name='move_attribute_id')


class pokemon_v2_moveattributedescription_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Float, graphql_name='move_attribute_id')


class pokemon_v2_moveattributedescription_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Int, graphql_name='move_attribute_id')


class pokemon_v2_moveattributedescription_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Float, graphql_name='move_attribute_id')


class pokemon_v2_moveattributedescription_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Float, graphql_name='move_attribute_id')


class pokemon_v2_moveattributedescription_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Float, graphql_name='move_attribute_id')


class pokemon_v2_moveattributemap(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_attribute_id', 'move_id', 'pokemon_v2_move', 'pokemon_v2_moveattribute')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    move_attribute_id = sgqlc.types.Field(Int, graphql_name='move_attribute_id')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    pokemon_v2_move = sgqlc.types.Field('pokemon_v2_move', graphql_name='pokemon_v2_move')
    pokemon_v2_moveattribute = sgqlc.types.Field('pokemon_v2_moveattribute', graphql_name='pokemon_v2_moveattribute')


class pokemon_v2_moveattributemap_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_moveattributemap_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributemap))), graphql_name='nodes')


class pokemon_v2_moveattributemap_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_moveattributemap_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributemap_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_moveattributemap_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_moveattributemap_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_moveattributemap_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_moveattributemap_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_moveattributemap_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_moveattributemap_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_moveattributemap_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_moveattributemap_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_moveattributemap_variance_fields', graphql_name='variance')


class pokemon_v2_moveattributemap_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_attribute_id', 'move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_attribute_id = sgqlc.types.Field(Float, graphql_name='move_attribute_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')


class pokemon_v2_moveattributemap_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_attribute_id', 'move_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_attribute_id = sgqlc.types.Field(Int, graphql_name='move_attribute_id')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')


class pokemon_v2_moveattributemap_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_attribute_id', 'move_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_attribute_id = sgqlc.types.Field(Int, graphql_name='move_attribute_id')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')


class pokemon_v2_moveattributemap_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_attribute_id', 'move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_attribute_id = sgqlc.types.Field(Float, graphql_name='move_attribute_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')


class pokemon_v2_moveattributemap_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_attribute_id', 'move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_attribute_id = sgqlc.types.Field(Float, graphql_name='move_attribute_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')


class pokemon_v2_moveattributemap_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_attribute_id', 'move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_attribute_id = sgqlc.types.Field(Float, graphql_name='move_attribute_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')


class pokemon_v2_moveattributemap_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_attribute_id', 'move_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_attribute_id = sgqlc.types.Field(Int, graphql_name='move_attribute_id')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')


class pokemon_v2_moveattributemap_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_attribute_id', 'move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_attribute_id = sgqlc.types.Field(Float, graphql_name='move_attribute_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')


class pokemon_v2_moveattributemap_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_attribute_id', 'move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_attribute_id = sgqlc.types.Field(Float, graphql_name='move_attribute_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')


class pokemon_v2_moveattributemap_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_attribute_id', 'move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_attribute_id = sgqlc.types.Field(Float, graphql_name='move_attribute_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')


class pokemon_v2_moveattributename(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id', 'name', 'pokemon_v2_language', 'pokemon_v2_moveattribute')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Int, graphql_name='move_attribute_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_moveattribute = sgqlc.types.Field('pokemon_v2_moveattribute', graphql_name='pokemon_v2_moveattribute')


class pokemon_v2_moveattributename_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_moveattributename_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributename))), graphql_name='nodes')


class pokemon_v2_moveattributename_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_moveattributename_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributename_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_moveattributename_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_moveattributename_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_moveattributename_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_moveattributename_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_moveattributename_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_moveattributename_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_moveattributename_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_moveattributename_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_moveattributename_variance_fields', graphql_name='variance')


class pokemon_v2_moveattributename_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Float, graphql_name='move_attribute_id')


class pokemon_v2_moveattributename_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Int, graphql_name='move_attribute_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_moveattributename_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Int, graphql_name='move_attribute_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_moveattributename_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Float, graphql_name='move_attribute_id')


class pokemon_v2_moveattributename_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Float, graphql_name='move_attribute_id')


class pokemon_v2_moveattributename_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Float, graphql_name='move_attribute_id')


class pokemon_v2_moveattributename_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Int, graphql_name='move_attribute_id')


class pokemon_v2_moveattributename_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Float, graphql_name='move_attribute_id')


class pokemon_v2_moveattributename_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Float, graphql_name='move_attribute_id')


class pokemon_v2_moveattributename_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_attribute_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_attribute_id = sgqlc.types.Field(Float, graphql_name='move_attribute_id')


class pokemon_v2_movebattlestyle(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_movebattlestylenames', 'pokemon_v2_movebattlestylenames_aggregate', 'pokemon_v2_naturebattlestylepreferences', 'pokemon_v2_naturebattlestylepreferences_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_movebattlestylenames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movebattlestylename'))), graphql_name='pokemon_v2_movebattlestylenames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestylename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestylename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movebattlestylename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movebattlestylenames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movebattlestylename_aggregate'), graphql_name='pokemon_v2_movebattlestylenames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestylename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestylename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movebattlestylename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_naturebattlestylepreferences = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_naturebattlestylepreference'))), graphql_name='pokemon_v2_naturebattlestylepreferences', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturebattlestylepreference_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturebattlestylepreference_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturebattlestylepreference_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_naturebattlestylepreferences_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_naturebattlestylepreference_aggregate'), graphql_name='pokemon_v2_naturebattlestylepreferences_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturebattlestylepreference_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturebattlestylepreference_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturebattlestylepreference_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_movebattlestyle_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_movebattlestyle_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestyle))), graphql_name='nodes')


class pokemon_v2_movebattlestyle_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movebattlestyle_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestyle_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_movebattlestyle_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movebattlestyle_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movebattlestyle_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movebattlestyle_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movebattlestyle_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movebattlestyle_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movebattlestyle_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movebattlestyle_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movebattlestyle_variance_fields', graphql_name='variance')


class pokemon_v2_movebattlestyle_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movebattlestyle_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movebattlestyle_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movebattlestyle_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movebattlestyle_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movebattlestyle_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movebattlestyle_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_movebattlestyle_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movebattlestyle_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movebattlestyle_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movebattlestylename(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_battle_style_id', 'name', 'pokemon_v2_language', 'pokemon_v2_movebattlestyle')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_battle_style_id = sgqlc.types.Field(Int, graphql_name='move_battle_style_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_movebattlestyle = sgqlc.types.Field('pokemon_v2_movebattlestyle', graphql_name='pokemon_v2_movebattlestyle')


class pokemon_v2_movebattlestylename_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_movebattlestylename_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestylename))), graphql_name='nodes')


class pokemon_v2_movebattlestylename_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movebattlestylename_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestylename_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_movebattlestylename_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movebattlestylename_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movebattlestylename_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movebattlestylename_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movebattlestylename_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movebattlestylename_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movebattlestylename_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movebattlestylename_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movebattlestylename_variance_fields', graphql_name='variance')


class pokemon_v2_movebattlestylename_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_battle_style_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_battle_style_id = sgqlc.types.Field(Float, graphql_name='move_battle_style_id')


class pokemon_v2_movebattlestylename_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_battle_style_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_battle_style_id = sgqlc.types.Field(Int, graphql_name='move_battle_style_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movebattlestylename_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_battle_style_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_battle_style_id = sgqlc.types.Field(Int, graphql_name='move_battle_style_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movebattlestylename_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_battle_style_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_battle_style_id = sgqlc.types.Field(Float, graphql_name='move_battle_style_id')


class pokemon_v2_movebattlestylename_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_battle_style_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_battle_style_id = sgqlc.types.Field(Float, graphql_name='move_battle_style_id')


class pokemon_v2_movebattlestylename_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_battle_style_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_battle_style_id = sgqlc.types.Field(Float, graphql_name='move_battle_style_id')


class pokemon_v2_movebattlestylename_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_battle_style_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_battle_style_id = sgqlc.types.Field(Int, graphql_name='move_battle_style_id')


class pokemon_v2_movebattlestylename_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_battle_style_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_battle_style_id = sgqlc.types.Field(Float, graphql_name='move_battle_style_id')


class pokemon_v2_movebattlestylename_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_battle_style_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_battle_style_id = sgqlc.types.Field(Float, graphql_name='move_battle_style_id')


class pokemon_v2_movebattlestylename_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_battle_style_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_battle_style_id = sgqlc.types.Field(Float, graphql_name='move_battle_style_id')


class pokemon_v2_movechange(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'pokemon_v2_move', 'pokemon_v2_moveeffect', 'pokemon_v2_type', 'pokemon_v2_versiongroup', 'power', 'pp', 'type_id', 'version_group_id')
    accuracy = sgqlc.types.Field(Int, graphql_name='accuracy')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    move_effect_chance = sgqlc.types.Field(Int, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Int, graphql_name='move_effect_id')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    pokemon_v2_move = sgqlc.types.Field('pokemon_v2_move', graphql_name='pokemon_v2_move')
    pokemon_v2_moveeffect = sgqlc.types.Field('pokemon_v2_moveeffect', graphql_name='pokemon_v2_moveeffect')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type', graphql_name='pokemon_v2_type')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup', graphql_name='pokemon_v2_versiongroup')
    power = sgqlc.types.Field(Int, graphql_name='power')
    pp = sgqlc.types.Field(Int, graphql_name='pp')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_movechange_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_movechange_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange))), graphql_name='nodes')


class pokemon_v2_movechange_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movechange_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_movechange_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movechange_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movechange_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movechange_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movechange_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movechange_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movechange_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movechange_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movechange_variance_fields', graphql_name='variance')


class pokemon_v2_movechange_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'power', 'pp', 'type_id', 'version_group_id')
    accuracy = sgqlc.types.Field(Float, graphql_name='accuracy')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_effect_chance = sgqlc.types.Field(Float, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    power = sgqlc.types.Field(Float, graphql_name='power')
    pp = sgqlc.types.Field(Float, graphql_name='pp')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_movechange_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'power', 'pp', 'type_id', 'version_group_id')
    accuracy = sgqlc.types.Field(Int, graphql_name='accuracy')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_effect_chance = sgqlc.types.Field(Int, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Int, graphql_name='move_effect_id')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    power = sgqlc.types.Field(Int, graphql_name='power')
    pp = sgqlc.types.Field(Int, graphql_name='pp')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_movechange_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'power', 'pp', 'type_id', 'version_group_id')
    accuracy = sgqlc.types.Field(Int, graphql_name='accuracy')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_effect_chance = sgqlc.types.Field(Int, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Int, graphql_name='move_effect_id')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    power = sgqlc.types.Field(Int, graphql_name='power')
    pp = sgqlc.types.Field(Int, graphql_name='pp')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_movechange_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'power', 'pp', 'type_id', 'version_group_id')
    accuracy = sgqlc.types.Field(Float, graphql_name='accuracy')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_effect_chance = sgqlc.types.Field(Float, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    power = sgqlc.types.Field(Float, graphql_name='power')
    pp = sgqlc.types.Field(Float, graphql_name='pp')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_movechange_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'power', 'pp', 'type_id', 'version_group_id')
    accuracy = sgqlc.types.Field(Float, graphql_name='accuracy')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_effect_chance = sgqlc.types.Field(Float, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    power = sgqlc.types.Field(Float, graphql_name='power')
    pp = sgqlc.types.Field(Float, graphql_name='pp')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_movechange_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'power', 'pp', 'type_id', 'version_group_id')
    accuracy = sgqlc.types.Field(Float, graphql_name='accuracy')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_effect_chance = sgqlc.types.Field(Float, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    power = sgqlc.types.Field(Float, graphql_name='power')
    pp = sgqlc.types.Field(Float, graphql_name='pp')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_movechange_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'power', 'pp', 'type_id', 'version_group_id')
    accuracy = sgqlc.types.Field(Int, graphql_name='accuracy')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_effect_chance = sgqlc.types.Field(Int, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Int, graphql_name='move_effect_id')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    power = sgqlc.types.Field(Int, graphql_name='power')
    pp = sgqlc.types.Field(Int, graphql_name='pp')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_movechange_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'power', 'pp', 'type_id', 'version_group_id')
    accuracy = sgqlc.types.Field(Float, graphql_name='accuracy')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_effect_chance = sgqlc.types.Field(Float, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    power = sgqlc.types.Field(Float, graphql_name='power')
    pp = sgqlc.types.Field(Float, graphql_name='pp')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_movechange_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'power', 'pp', 'type_id', 'version_group_id')
    accuracy = sgqlc.types.Field(Float, graphql_name='accuracy')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_effect_chance = sgqlc.types.Field(Float, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    power = sgqlc.types.Field(Float, graphql_name='power')
    pp = sgqlc.types.Field(Float, graphql_name='pp')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_movechange_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('accuracy', 'id', 'move_effect_chance', 'move_effect_id', 'move_id', 'power', 'pp', 'type_id', 'version_group_id')
    accuracy = sgqlc.types.Field(Float, graphql_name='accuracy')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_effect_chance = sgqlc.types.Field(Float, graphql_name='move_effect_chance')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    power = sgqlc.types.Field(Float, graphql_name='power')
    pp = sgqlc.types.Field(Float, graphql_name='pp')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_movedamageclass(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_movedamageclassdescriptions', 'pokemon_v2_movedamageclassdescriptions_aggregate', 'pokemon_v2_movedamageclassnames', 'pokemon_v2_movedamageclassnames_aggregate', 'pokemon_v2_moves', 'pokemon_v2_moves_aggregate', 'pokemon_v2_stats', 'pokemon_v2_stats_aggregate', 'pokemon_v2_types', 'pokemon_v2_types_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_movedamageclassdescriptions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movedamageclassdescription'))), graphql_name='pokemon_v2_movedamageclassdescriptions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movedamageclassdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movedamageclassdescriptions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movedamageclassdescription_aggregate'), graphql_name='pokemon_v2_movedamageclassdescriptions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movedamageclassdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movedamageclassnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movedamageclassname'))), graphql_name='pokemon_v2_movedamageclassnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movedamageclassname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movedamageclassnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movedamageclassname_aggregate'), graphql_name='pokemon_v2_movedamageclassnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movedamageclassname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moves = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move))), graphql_name='pokemon_v2_moves', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_move_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moves_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_move_aggregate), graphql_name='pokemon_v2_moves_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_move_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_stats = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_stat'))), graphql_name='pokemon_v2_stats', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_stat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_stat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_stat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_stats_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_stat_aggregate'), graphql_name='pokemon_v2_stats_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_stat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_stat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_stat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_types = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_type'))), graphql_name='pokemon_v2_types', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_type_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_type_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_type_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_types_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_type_aggregate'), graphql_name='pokemon_v2_types_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_type_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_type_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_type_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_movedamageclass_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_movedamageclass_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclass))), graphql_name='nodes')


class pokemon_v2_movedamageclass_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movedamageclass_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclass_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_movedamageclass_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movedamageclass_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movedamageclass_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movedamageclass_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movedamageclass_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movedamageclass_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movedamageclass_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movedamageclass_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movedamageclass_variance_fields', graphql_name='variance')


class pokemon_v2_movedamageclass_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movedamageclass_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movedamageclass_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movedamageclass_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movedamageclass_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movedamageclass_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movedamageclass_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_movedamageclass_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movedamageclass_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movedamageclass_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movedamageclassdescription(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_damage_class_id', 'pokemon_v2_language', 'pokemon_v2_movedamageclass')
    description = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='description')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Int, graphql_name='move_damage_class_id')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_movedamageclass = sgqlc.types.Field('pokemon_v2_movedamageclass', graphql_name='pokemon_v2_movedamageclass')


class pokemon_v2_movedamageclassdescription_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassdescription))), graphql_name='nodes')


class pokemon_v2_movedamageclassdescription_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassdescription_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movedamageclassdescription_variance_fields', graphql_name='variance')


class pokemon_v2_movedamageclassdescription_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassdescription_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_damage_class_id')
    description = sgqlc.types.Field(String, graphql_name='description')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Int, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassdescription_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_damage_class_id')
    description = sgqlc.types.Field(String, graphql_name='description')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Int, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassdescription_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassdescription_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassdescription_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassdescription_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Int, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassdescription_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassdescription_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassdescription_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id', 'name', 'pokemon_v2_language', 'pokemon_v2_movedamageclass')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Int, graphql_name='move_damage_class_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_movedamageclass = sgqlc.types.Field('pokemon_v2_movedamageclass', graphql_name='pokemon_v2_movedamageclass')


class pokemon_v2_movedamageclassname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_movedamageclassname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassname))), graphql_name='nodes')


class pokemon_v2_movedamageclassname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movedamageclassname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_movedamageclassname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movedamageclassname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movedamageclassname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movedamageclassname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movedamageclassname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movedamageclassname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movedamageclassname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movedamageclassname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movedamageclassname_variance_fields', graphql_name='variance')


class pokemon_v2_movedamageclassname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Int, graphql_name='move_damage_class_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movedamageclassname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Int, graphql_name='move_damage_class_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movedamageclassname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Int, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_movedamageclassname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_damage_class_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_moveeffect(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_v2_movechanges', 'pokemon_v2_movechanges_aggregate', 'pokemon_v2_moveeffectchanges', 'pokemon_v2_moveeffectchanges_aggregate', 'pokemon_v2_moveeffecteffecttexts', 'pokemon_v2_moveeffecteffecttexts_aggregate', 'pokemon_v2_moves', 'pokemon_v2_moves_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokemon_v2_movechanges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange))), graphql_name='pokemon_v2_movechanges', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movechange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movechanges_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_movechange_aggregate), graphql_name='pokemon_v2_movechanges_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movechange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffectchanges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveeffectchange'))), graphql_name='pokemon_v2_moveeffectchanges', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffectchange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffectchanges_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveeffectchange_aggregate'), graphql_name='pokemon_v2_moveeffectchanges_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffectchange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffecteffecttexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveeffecteffecttext'))), graphql_name='pokemon_v2_moveeffecteffecttexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffecteffecttexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveeffecteffecttext_aggregate'), graphql_name='pokemon_v2_moveeffecteffecttexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moves = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move))), graphql_name='pokemon_v2_moves', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_move_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moves_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_move_aggregate), graphql_name='pokemon_v2_moves_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_move_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_moveeffect_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_moveeffect_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffect))), graphql_name='nodes')


class pokemon_v2_moveeffect_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_moveeffect_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffect_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_moveeffect_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_moveeffect_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_moveeffect_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_moveeffect_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_moveeffect_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_moveeffect_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_moveeffect_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_moveeffect_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_moveeffect_variance_fields', graphql_name='variance')


class pokemon_v2_moveeffect_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_moveeffect_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_moveeffect_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_moveeffect_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_moveeffect_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_moveeffect_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_moveeffect_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_moveeffect_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_moveeffect_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_moveeffect_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_moveeffectchange(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_effect_id', 'pokemon_v2_moveeffect', 'pokemon_v2_moveeffectchangeeffecttexts', 'pokemon_v2_moveeffectchangeeffecttexts_aggregate', 'pokemon_v2_versiongroup', 'version_group_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    move_effect_id = sgqlc.types.Field(Int, graphql_name='move_effect_id')
    pokemon_v2_moveeffect = sgqlc.types.Field('pokemon_v2_moveeffect', graphql_name='pokemon_v2_moveeffect')
    pokemon_v2_moveeffectchangeeffecttexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveeffectchangeeffecttext'))), graphql_name='pokemon_v2_moveeffectchangeeffecttexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchangeeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchangeeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffectchangeeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffectchangeeffecttexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveeffectchangeeffecttext_aggregate'), graphql_name='pokemon_v2_moveeffectchangeeffecttexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchangeeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchangeeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffectchangeeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_moveeffectchange_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_moveeffectchange_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchange))), graphql_name='nodes')


class pokemon_v2_moveeffectchange_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_moveeffectchange_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchange_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_moveeffectchange_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_moveeffectchange_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_moveeffectchange_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_moveeffectchange_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_moveeffectchange_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_moveeffectchange_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_moveeffectchange_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_moveeffectchange_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_moveeffectchange_variance_fields', graphql_name='variance')


class pokemon_v2_moveeffectchange_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_effect_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_moveeffectchange_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_effect_id', 'version_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_effect_id = sgqlc.types.Field(Int, graphql_name='move_effect_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_moveeffectchange_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_effect_id', 'version_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_effect_id = sgqlc.types.Field(Int, graphql_name='move_effect_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_moveeffectchange_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_effect_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_moveeffectchange_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_effect_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_moveeffectchange_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_effect_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_moveeffectchange_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_effect_id', 'version_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_effect_id = sgqlc.types.Field(Int, graphql_name='move_effect_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_moveeffectchange_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_effect_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_moveeffectchange_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_effect_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_moveeffectchange_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_effect_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_moveeffectchangeeffecttext(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'language_id', 'move_effect_change_id', 'pokemon_v2_language', 'pokemon_v2_moveeffectchange')
    effect = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='effect')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_effect_change_id = sgqlc.types.Field(Int, graphql_name='move_effect_change_id')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_moveeffectchange = sgqlc.types.Field('pokemon_v2_moveeffectchange', graphql_name='pokemon_v2_moveeffectchange')


class pokemon_v2_moveeffectchangeeffecttext_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchangeeffecttext))), graphql_name='nodes')


class pokemon_v2_moveeffectchangeeffecttext_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchangeeffecttext_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext_variance_fields', graphql_name='variance')


class pokemon_v2_moveeffectchangeeffecttext_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_change_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_effect_change_id = sgqlc.types.Field(Float, graphql_name='move_effect_change_id')


class pokemon_v2_moveeffectchangeeffecttext_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'language_id', 'move_effect_change_id')
    effect = sgqlc.types.Field(String, graphql_name='effect')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_effect_change_id = sgqlc.types.Field(Int, graphql_name='move_effect_change_id')


class pokemon_v2_moveeffectchangeeffecttext_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'language_id', 'move_effect_change_id')
    effect = sgqlc.types.Field(String, graphql_name='effect')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_effect_change_id = sgqlc.types.Field(Int, graphql_name='move_effect_change_id')


class pokemon_v2_moveeffectchangeeffecttext_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_change_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_effect_change_id = sgqlc.types.Field(Float, graphql_name='move_effect_change_id')


class pokemon_v2_moveeffectchangeeffecttext_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_change_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_effect_change_id = sgqlc.types.Field(Float, graphql_name='move_effect_change_id')


class pokemon_v2_moveeffectchangeeffecttext_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_change_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_effect_change_id = sgqlc.types.Field(Float, graphql_name='move_effect_change_id')


class pokemon_v2_moveeffectchangeeffecttext_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_change_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_effect_change_id = sgqlc.types.Field(Int, graphql_name='move_effect_change_id')


class pokemon_v2_moveeffectchangeeffecttext_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_change_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_effect_change_id = sgqlc.types.Field(Float, graphql_name='move_effect_change_id')


class pokemon_v2_moveeffectchangeeffecttext_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_change_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_effect_change_id = sgqlc.types.Field(Float, graphql_name='move_effect_change_id')


class pokemon_v2_moveeffectchangeeffecttext_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_change_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_effect_change_id = sgqlc.types.Field(Float, graphql_name='move_effect_change_id')


class pokemon_v2_moveeffecteffecttext(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'language_id', 'move_effect_id', 'pokemon_v2_language', 'pokemon_v2_moveeffect', 'short_effect')
    effect = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='effect')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_effect_id = sgqlc.types.Field(Int, graphql_name='move_effect_id')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_moveeffect = sgqlc.types.Field('pokemon_v2_moveeffect', graphql_name='pokemon_v2_moveeffect')
    short_effect = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='short_effect')


class pokemon_v2_moveeffecteffecttext_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffecteffecttext))), graphql_name='nodes')


class pokemon_v2_moveeffecteffecttext_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffecteffecttext_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext_variance_fields', graphql_name='variance')


class pokemon_v2_moveeffecteffecttext_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')


class pokemon_v2_moveeffecteffecttext_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'language_id', 'move_effect_id', 'short_effect')
    effect = sgqlc.types.Field(String, graphql_name='effect')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_effect_id = sgqlc.types.Field(Int, graphql_name='move_effect_id')
    short_effect = sgqlc.types.Field(String, graphql_name='short_effect')


class pokemon_v2_moveeffecteffecttext_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('effect', 'id', 'language_id', 'move_effect_id', 'short_effect')
    effect = sgqlc.types.Field(String, graphql_name='effect')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_effect_id = sgqlc.types.Field(Int, graphql_name='move_effect_id')
    short_effect = sgqlc.types.Field(String, graphql_name='short_effect')


class pokemon_v2_moveeffecteffecttext_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')


class pokemon_v2_moveeffecteffecttext_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')


class pokemon_v2_moveeffecteffecttext_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')


class pokemon_v2_moveeffecteffecttext_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_effect_id = sgqlc.types.Field(Int, graphql_name='move_effect_id')


class pokemon_v2_moveeffecteffecttext_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')


class pokemon_v2_moveeffecteffecttext_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')


class pokemon_v2_moveeffecteffecttext_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_effect_id = sgqlc.types.Field(Float, graphql_name='move_effect_id')


class pokemon_v2_moveflavortext(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'language_id', 'move_id', 'pokemon_v2_language', 'pokemon_v2_move', 'pokemon_v2_versiongroup', 'version_group_id')
    flavor_text = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='flavor_text')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_move = sgqlc.types.Field('pokemon_v2_move', graphql_name='pokemon_v2_move')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_moveflavortext_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_moveflavortext_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveflavortext))), graphql_name='nodes')


class pokemon_v2_moveflavortext_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_moveflavortext_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveflavortext_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_moveflavortext_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_moveflavortext_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_moveflavortext_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_moveflavortext_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_moveflavortext_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_moveflavortext_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_moveflavortext_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_moveflavortext_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_moveflavortext_variance_fields', graphql_name='variance')


class pokemon_v2_moveflavortext_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_moveflavortext_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'language_id', 'move_id', 'version_group_id')
    flavor_text = sgqlc.types.Field(String, graphql_name='flavor_text')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_moveflavortext_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'language_id', 'move_id', 'version_group_id')
    flavor_text = sgqlc.types.Field(String, graphql_name='flavor_text')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_moveflavortext_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_moveflavortext_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_moveflavortext_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_moveflavortext_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id', 'version_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_moveflavortext_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_moveflavortext_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_moveflavortext_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_movelearnmethod(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_movelearnmethoddescriptions', 'pokemon_v2_movelearnmethoddescriptions_aggregate', 'pokemon_v2_movelearnmethodnames', 'pokemon_v2_movelearnmethodnames_aggregate', 'pokemon_v2_pokemonmoves', 'pokemon_v2_pokemonmoves_aggregate', 'pokemon_v2_versiongroupmovelearnmethods', 'pokemon_v2_versiongroupmovelearnmethods_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_movelearnmethoddescriptions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movelearnmethoddescription'))), graphql_name='pokemon_v2_movelearnmethoddescriptions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethoddescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethoddescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movelearnmethoddescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movelearnmethoddescriptions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movelearnmethoddescription_aggregate'), graphql_name='pokemon_v2_movelearnmethoddescriptions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethoddescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethoddescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movelearnmethoddescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movelearnmethodnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movelearnmethodname'))), graphql_name='pokemon_v2_movelearnmethodnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethodname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethodname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movelearnmethodname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movelearnmethodnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movelearnmethodname_aggregate'), graphql_name='pokemon_v2_movelearnmethodnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethodname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethodname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movelearnmethodname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonmoves = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonmove'))), graphql_name='pokemon_v2_pokemonmoves', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonmove_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonmoves_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonmove_aggregate'), graphql_name='pokemon_v2_pokemonmoves_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonmove_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroupmovelearnmethods = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_versiongroupmovelearnmethod'))), graphql_name='pokemon_v2_versiongroupmovelearnmethods', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupmovelearnmethod_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupmovelearnmethod_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versiongroupmovelearnmethod_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroupmovelearnmethods_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_versiongroupmovelearnmethod_aggregate'), graphql_name='pokemon_v2_versiongroupmovelearnmethods_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupmovelearnmethod_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupmovelearnmethod_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versiongroupmovelearnmethod_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_movelearnmethod_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_movelearnmethod_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethod))), graphql_name='nodes')


class pokemon_v2_movelearnmethod_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movelearnmethod_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethod_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_movelearnmethod_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movelearnmethod_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movelearnmethod_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movelearnmethod_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movelearnmethod_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movelearnmethod_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movelearnmethod_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movelearnmethod_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movelearnmethod_variance_fields', graphql_name='variance')


class pokemon_v2_movelearnmethod_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movelearnmethod_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movelearnmethod_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movelearnmethod_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movelearnmethod_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movelearnmethod_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movelearnmethod_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_movelearnmethod_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movelearnmethod_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movelearnmethod_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movelearnmethoddescription(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_learn_method_id', 'pokemon_v2_language', 'pokemon_v2_movelearnmethod')
    description = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='description')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Int, graphql_name='move_learn_method_id')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_movelearnmethod = sgqlc.types.Field('pokemon_v2_movelearnmethod', graphql_name='pokemon_v2_movelearnmethod')


class pokemon_v2_movelearnmethoddescription_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethoddescription))), graphql_name='nodes')


class pokemon_v2_movelearnmethoddescription_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethoddescription_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription_variance_fields', graphql_name='variance')


class pokemon_v2_movelearnmethoddescription_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethoddescription_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_learn_method_id')
    description = sgqlc.types.Field(String, graphql_name='description')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Int, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethoddescription_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_learn_method_id')
    description = sgqlc.types.Field(String, graphql_name='description')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Int, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethoddescription_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethoddescription_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethoddescription_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethoddescription_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Int, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethoddescription_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethoddescription_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethoddescription_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethodname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id', 'name', 'pokemon_v2_language', 'pokemon_v2_movelearnmethod')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Int, graphql_name='move_learn_method_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_movelearnmethod = sgqlc.types.Field('pokemon_v2_movelearnmethod', graphql_name='pokemon_v2_movelearnmethod')


class pokemon_v2_movelearnmethodname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_movelearnmethodname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethodname))), graphql_name='nodes')


class pokemon_v2_movelearnmethodname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movelearnmethodname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethodname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_movelearnmethodname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movelearnmethodname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movelearnmethodname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movelearnmethodname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movelearnmethodname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movelearnmethodname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movelearnmethodname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movelearnmethodname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movelearnmethodname_variance_fields', graphql_name='variance')


class pokemon_v2_movelearnmethodname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethodname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Int, graphql_name='move_learn_method_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movelearnmethodname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Int, graphql_name='move_learn_method_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movelearnmethodname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethodname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethodname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethodname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Int, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethodname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethodname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')


class pokemon_v2_movelearnmethodname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_learn_method_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')


class pokemon_v2_movemeta(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'pokemon_v2_move', 'pokemon_v2_movemetaailment', 'pokemon_v2_movemetacategory', 'stat_chance')
    ailment_chance = sgqlc.types.Field(Int, graphql_name='ailment_chance')
    crit_rate = sgqlc.types.Field(Int, graphql_name='crit_rate')
    drain = sgqlc.types.Field(Int, graphql_name='drain')
    flinch_chance = sgqlc.types.Field(Int, graphql_name='flinch_chance')
    healing = sgqlc.types.Field(Int, graphql_name='healing')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    max_hits = sgqlc.types.Field(Int, graphql_name='max_hits')
    max_turns = sgqlc.types.Field(Int, graphql_name='max_turns')
    min_hits = sgqlc.types.Field(Int, graphql_name='min_hits')
    min_turns = sgqlc.types.Field(Int, graphql_name='min_turns')
    move_id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='move_id')
    move_meta_ailment_id = sgqlc.types.Field(Int, graphql_name='move_meta_ailment_id')
    move_meta_category_id = sgqlc.types.Field(Int, graphql_name='move_meta_category_id')
    pokemon_v2_move = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_move'), graphql_name='pokemon_v2_move')
    pokemon_v2_movemetaailment = sgqlc.types.Field('pokemon_v2_movemetaailment', graphql_name='pokemon_v2_movemetaailment')
    pokemon_v2_movemetacategory = sgqlc.types.Field('pokemon_v2_movemetacategory', graphql_name='pokemon_v2_movemetacategory')
    stat_chance = sgqlc.types.Field(Int, graphql_name='stat_chance')


class pokemon_v2_movemeta_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_movemeta_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemeta))), graphql_name='nodes')


class pokemon_v2_movemeta_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movemeta_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemeta_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_movemeta_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movemeta_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movemeta_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movemeta_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movemeta_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movemeta_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movemeta_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movemeta_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movemeta_variance_fields', graphql_name='variance')


class pokemon_v2_movemeta_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'stat_chance')
    ailment_chance = sgqlc.types.Field(Float, graphql_name='ailment_chance')
    crit_rate = sgqlc.types.Field(Float, graphql_name='crit_rate')
    drain = sgqlc.types.Field(Float, graphql_name='drain')
    flinch_chance = sgqlc.types.Field(Float, graphql_name='flinch_chance')
    healing = sgqlc.types.Field(Float, graphql_name='healing')
    id = sgqlc.types.Field(Float, graphql_name='id')
    max_hits = sgqlc.types.Field(Float, graphql_name='max_hits')
    max_turns = sgqlc.types.Field(Float, graphql_name='max_turns')
    min_hits = sgqlc.types.Field(Float, graphql_name='min_hits')
    min_turns = sgqlc.types.Field(Float, graphql_name='min_turns')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    move_meta_ailment_id = sgqlc.types.Field(Float, graphql_name='move_meta_ailment_id')
    move_meta_category_id = sgqlc.types.Field(Float, graphql_name='move_meta_category_id')
    stat_chance = sgqlc.types.Field(Float, graphql_name='stat_chance')


class pokemon_v2_movemeta_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'stat_chance')
    ailment_chance = sgqlc.types.Field(Int, graphql_name='ailment_chance')
    crit_rate = sgqlc.types.Field(Int, graphql_name='crit_rate')
    drain = sgqlc.types.Field(Int, graphql_name='drain')
    flinch_chance = sgqlc.types.Field(Int, graphql_name='flinch_chance')
    healing = sgqlc.types.Field(Int, graphql_name='healing')
    id = sgqlc.types.Field(Int, graphql_name='id')
    max_hits = sgqlc.types.Field(Int, graphql_name='max_hits')
    max_turns = sgqlc.types.Field(Int, graphql_name='max_turns')
    min_hits = sgqlc.types.Field(Int, graphql_name='min_hits')
    min_turns = sgqlc.types.Field(Int, graphql_name='min_turns')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    move_meta_ailment_id = sgqlc.types.Field(Int, graphql_name='move_meta_ailment_id')
    move_meta_category_id = sgqlc.types.Field(Int, graphql_name='move_meta_category_id')
    stat_chance = sgqlc.types.Field(Int, graphql_name='stat_chance')


class pokemon_v2_movemeta_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'stat_chance')
    ailment_chance = sgqlc.types.Field(Int, graphql_name='ailment_chance')
    crit_rate = sgqlc.types.Field(Int, graphql_name='crit_rate')
    drain = sgqlc.types.Field(Int, graphql_name='drain')
    flinch_chance = sgqlc.types.Field(Int, graphql_name='flinch_chance')
    healing = sgqlc.types.Field(Int, graphql_name='healing')
    id = sgqlc.types.Field(Int, graphql_name='id')
    max_hits = sgqlc.types.Field(Int, graphql_name='max_hits')
    max_turns = sgqlc.types.Field(Int, graphql_name='max_turns')
    min_hits = sgqlc.types.Field(Int, graphql_name='min_hits')
    min_turns = sgqlc.types.Field(Int, graphql_name='min_turns')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    move_meta_ailment_id = sgqlc.types.Field(Int, graphql_name='move_meta_ailment_id')
    move_meta_category_id = sgqlc.types.Field(Int, graphql_name='move_meta_category_id')
    stat_chance = sgqlc.types.Field(Int, graphql_name='stat_chance')


class pokemon_v2_movemeta_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'stat_chance')
    ailment_chance = sgqlc.types.Field(Float, graphql_name='ailment_chance')
    crit_rate = sgqlc.types.Field(Float, graphql_name='crit_rate')
    drain = sgqlc.types.Field(Float, graphql_name='drain')
    flinch_chance = sgqlc.types.Field(Float, graphql_name='flinch_chance')
    healing = sgqlc.types.Field(Float, graphql_name='healing')
    id = sgqlc.types.Field(Float, graphql_name='id')
    max_hits = sgqlc.types.Field(Float, graphql_name='max_hits')
    max_turns = sgqlc.types.Field(Float, graphql_name='max_turns')
    min_hits = sgqlc.types.Field(Float, graphql_name='min_hits')
    min_turns = sgqlc.types.Field(Float, graphql_name='min_turns')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    move_meta_ailment_id = sgqlc.types.Field(Float, graphql_name='move_meta_ailment_id')
    move_meta_category_id = sgqlc.types.Field(Float, graphql_name='move_meta_category_id')
    stat_chance = sgqlc.types.Field(Float, graphql_name='stat_chance')


class pokemon_v2_movemeta_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'stat_chance')
    ailment_chance = sgqlc.types.Field(Float, graphql_name='ailment_chance')
    crit_rate = sgqlc.types.Field(Float, graphql_name='crit_rate')
    drain = sgqlc.types.Field(Float, graphql_name='drain')
    flinch_chance = sgqlc.types.Field(Float, graphql_name='flinch_chance')
    healing = sgqlc.types.Field(Float, graphql_name='healing')
    id = sgqlc.types.Field(Float, graphql_name='id')
    max_hits = sgqlc.types.Field(Float, graphql_name='max_hits')
    max_turns = sgqlc.types.Field(Float, graphql_name='max_turns')
    min_hits = sgqlc.types.Field(Float, graphql_name='min_hits')
    min_turns = sgqlc.types.Field(Float, graphql_name='min_turns')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    move_meta_ailment_id = sgqlc.types.Field(Float, graphql_name='move_meta_ailment_id')
    move_meta_category_id = sgqlc.types.Field(Float, graphql_name='move_meta_category_id')
    stat_chance = sgqlc.types.Field(Float, graphql_name='stat_chance')


class pokemon_v2_movemeta_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'stat_chance')
    ailment_chance = sgqlc.types.Field(Float, graphql_name='ailment_chance')
    crit_rate = sgqlc.types.Field(Float, graphql_name='crit_rate')
    drain = sgqlc.types.Field(Float, graphql_name='drain')
    flinch_chance = sgqlc.types.Field(Float, graphql_name='flinch_chance')
    healing = sgqlc.types.Field(Float, graphql_name='healing')
    id = sgqlc.types.Field(Float, graphql_name='id')
    max_hits = sgqlc.types.Field(Float, graphql_name='max_hits')
    max_turns = sgqlc.types.Field(Float, graphql_name='max_turns')
    min_hits = sgqlc.types.Field(Float, graphql_name='min_hits')
    min_turns = sgqlc.types.Field(Float, graphql_name='min_turns')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    move_meta_ailment_id = sgqlc.types.Field(Float, graphql_name='move_meta_ailment_id')
    move_meta_category_id = sgqlc.types.Field(Float, graphql_name='move_meta_category_id')
    stat_chance = sgqlc.types.Field(Float, graphql_name='stat_chance')


class pokemon_v2_movemeta_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'stat_chance')
    ailment_chance = sgqlc.types.Field(Int, graphql_name='ailment_chance')
    crit_rate = sgqlc.types.Field(Int, graphql_name='crit_rate')
    drain = sgqlc.types.Field(Int, graphql_name='drain')
    flinch_chance = sgqlc.types.Field(Int, graphql_name='flinch_chance')
    healing = sgqlc.types.Field(Int, graphql_name='healing')
    id = sgqlc.types.Field(Int, graphql_name='id')
    max_hits = sgqlc.types.Field(Int, graphql_name='max_hits')
    max_turns = sgqlc.types.Field(Int, graphql_name='max_turns')
    min_hits = sgqlc.types.Field(Int, graphql_name='min_hits')
    min_turns = sgqlc.types.Field(Int, graphql_name='min_turns')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    move_meta_ailment_id = sgqlc.types.Field(Int, graphql_name='move_meta_ailment_id')
    move_meta_category_id = sgqlc.types.Field(Int, graphql_name='move_meta_category_id')
    stat_chance = sgqlc.types.Field(Int, graphql_name='stat_chance')


class pokemon_v2_movemeta_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'stat_chance')
    ailment_chance = sgqlc.types.Field(Float, graphql_name='ailment_chance')
    crit_rate = sgqlc.types.Field(Float, graphql_name='crit_rate')
    drain = sgqlc.types.Field(Float, graphql_name='drain')
    flinch_chance = sgqlc.types.Field(Float, graphql_name='flinch_chance')
    healing = sgqlc.types.Field(Float, graphql_name='healing')
    id = sgqlc.types.Field(Float, graphql_name='id')
    max_hits = sgqlc.types.Field(Float, graphql_name='max_hits')
    max_turns = sgqlc.types.Field(Float, graphql_name='max_turns')
    min_hits = sgqlc.types.Field(Float, graphql_name='min_hits')
    min_turns = sgqlc.types.Field(Float, graphql_name='min_turns')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    move_meta_ailment_id = sgqlc.types.Field(Float, graphql_name='move_meta_ailment_id')
    move_meta_category_id = sgqlc.types.Field(Float, graphql_name='move_meta_category_id')
    stat_chance = sgqlc.types.Field(Float, graphql_name='stat_chance')


class pokemon_v2_movemeta_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'stat_chance')
    ailment_chance = sgqlc.types.Field(Float, graphql_name='ailment_chance')
    crit_rate = sgqlc.types.Field(Float, graphql_name='crit_rate')
    drain = sgqlc.types.Field(Float, graphql_name='drain')
    flinch_chance = sgqlc.types.Field(Float, graphql_name='flinch_chance')
    healing = sgqlc.types.Field(Float, graphql_name='healing')
    id = sgqlc.types.Field(Float, graphql_name='id')
    max_hits = sgqlc.types.Field(Float, graphql_name='max_hits')
    max_turns = sgqlc.types.Field(Float, graphql_name='max_turns')
    min_hits = sgqlc.types.Field(Float, graphql_name='min_hits')
    min_turns = sgqlc.types.Field(Float, graphql_name='min_turns')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    move_meta_ailment_id = sgqlc.types.Field(Float, graphql_name='move_meta_ailment_id')
    move_meta_category_id = sgqlc.types.Field(Float, graphql_name='move_meta_category_id')
    stat_chance = sgqlc.types.Field(Float, graphql_name='stat_chance')


class pokemon_v2_movemeta_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ailment_chance', 'crit_rate', 'drain', 'flinch_chance', 'healing', 'id', 'max_hits', 'max_turns', 'min_hits', 'min_turns', 'move_id', 'move_meta_ailment_id', 'move_meta_category_id', 'stat_chance')
    ailment_chance = sgqlc.types.Field(Float, graphql_name='ailment_chance')
    crit_rate = sgqlc.types.Field(Float, graphql_name='crit_rate')
    drain = sgqlc.types.Field(Float, graphql_name='drain')
    flinch_chance = sgqlc.types.Field(Float, graphql_name='flinch_chance')
    healing = sgqlc.types.Field(Float, graphql_name='healing')
    id = sgqlc.types.Field(Float, graphql_name='id')
    max_hits = sgqlc.types.Field(Float, graphql_name='max_hits')
    max_turns = sgqlc.types.Field(Float, graphql_name='max_turns')
    min_hits = sgqlc.types.Field(Float, graphql_name='min_hits')
    min_turns = sgqlc.types.Field(Float, graphql_name='min_turns')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    move_meta_ailment_id = sgqlc.types.Field(Float, graphql_name='move_meta_ailment_id')
    move_meta_category_id = sgqlc.types.Field(Float, graphql_name='move_meta_category_id')
    stat_chance = sgqlc.types.Field(Float, graphql_name='stat_chance')


class pokemon_v2_movemetaailment(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_movemeta', 'pokemon_v2_movemeta_aggregate', 'pokemon_v2_movemetaailmentnames', 'pokemon_v2_movemetaailmentnames_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_movemeta = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemeta'))), graphql_name='pokemon_v2_movemeta', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemeta_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemeta_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemeta_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemeta_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movemeta_aggregate'), graphql_name='pokemon_v2_movemeta_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemeta_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemeta_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemeta_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetaailmentnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetaailmentname'))), graphql_name='pokemon_v2_movemetaailmentnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailmentname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailmentname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetaailmentname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetaailmentnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movemetaailmentname_aggregate'), graphql_name='pokemon_v2_movemetaailmentnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailmentname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailmentname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetaailmentname_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_movemetaailment_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_movemetaailment_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailment))), graphql_name='nodes')


class pokemon_v2_movemetaailment_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movemetaailment_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailment_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_movemetaailment_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movemetaailment_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movemetaailment_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movemetaailment_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movemetaailment_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movemetaailment_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movemetaailment_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movemetaailment_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movemetaailment_variance_fields', graphql_name='variance')


class pokemon_v2_movemetaailment_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movemetaailment_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movemetaailment_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movemetaailment_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movemetaailment_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movemetaailment_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movemetaailment_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_movemetaailment_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movemetaailment_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movemetaailment_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movemetaailmentname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_ailment_id', 'name', 'pokemon_v2_language', 'pokemon_v2_movemetaailment')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_meta_ailment_id = sgqlc.types.Field(Int, graphql_name='move_meta_ailment_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_movemetaailment = sgqlc.types.Field('pokemon_v2_movemetaailment', graphql_name='pokemon_v2_movemetaailment')


class pokemon_v2_movemetaailmentname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_movemetaailmentname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailmentname))), graphql_name='nodes')


class pokemon_v2_movemetaailmentname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movemetaailmentname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailmentname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_movemetaailmentname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movemetaailmentname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movemetaailmentname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movemetaailmentname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movemetaailmentname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movemetaailmentname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movemetaailmentname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movemetaailmentname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movemetaailmentname_variance_fields', graphql_name='variance')


class pokemon_v2_movemetaailmentname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_ailment_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_meta_ailment_id = sgqlc.types.Field(Float, graphql_name='move_meta_ailment_id')


class pokemon_v2_movemetaailmentname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_ailment_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_meta_ailment_id = sgqlc.types.Field(Int, graphql_name='move_meta_ailment_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movemetaailmentname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_ailment_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_meta_ailment_id = sgqlc.types.Field(Int, graphql_name='move_meta_ailment_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movemetaailmentname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_ailment_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_meta_ailment_id = sgqlc.types.Field(Float, graphql_name='move_meta_ailment_id')


class pokemon_v2_movemetaailmentname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_ailment_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_meta_ailment_id = sgqlc.types.Field(Float, graphql_name='move_meta_ailment_id')


class pokemon_v2_movemetaailmentname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_ailment_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_meta_ailment_id = sgqlc.types.Field(Float, graphql_name='move_meta_ailment_id')


class pokemon_v2_movemetaailmentname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_ailment_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_meta_ailment_id = sgqlc.types.Field(Int, graphql_name='move_meta_ailment_id')


class pokemon_v2_movemetaailmentname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_ailment_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_meta_ailment_id = sgqlc.types.Field(Float, graphql_name='move_meta_ailment_id')


class pokemon_v2_movemetaailmentname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_ailment_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_meta_ailment_id = sgqlc.types.Field(Float, graphql_name='move_meta_ailment_id')


class pokemon_v2_movemetaailmentname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_ailment_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_meta_ailment_id = sgqlc.types.Field(Float, graphql_name='move_meta_ailment_id')


class pokemon_v2_movemetacategory(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_movemeta', 'pokemon_v2_movemeta_aggregate', 'pokemon_v2_movemetacategorydescriptions', 'pokemon_v2_movemetacategorydescriptions_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_movemeta = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemeta'))), graphql_name='pokemon_v2_movemeta', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemeta_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemeta_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemeta_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemeta_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movemeta_aggregate'), graphql_name='pokemon_v2_movemeta_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemeta_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemeta_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemeta_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetacategorydescriptions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetacategorydescription'))), graphql_name='pokemon_v2_movemetacategorydescriptions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategorydescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategorydescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetacategorydescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetacategorydescriptions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movemetacategorydescription_aggregate'), graphql_name='pokemon_v2_movemetacategorydescriptions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategorydescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategorydescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetacategorydescription_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_movemetacategory_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_movemetacategory_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategory))), graphql_name='nodes')


class pokemon_v2_movemetacategory_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movemetacategory_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategory_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_movemetacategory_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movemetacategory_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movemetacategory_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movemetacategory_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movemetacategory_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movemetacategory_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movemetacategory_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movemetacategory_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movemetacategory_variance_fields', graphql_name='variance')


class pokemon_v2_movemetacategory_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movemetacategory_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movemetacategory_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movemetacategory_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movemetacategory_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movemetacategory_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movemetacategory_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_movemetacategory_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movemetacategory_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movemetacategory_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movemetacategorydescription(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_meta_category_id', 'pokemon_v2_language', 'pokemon_v2_movemetacategory')
    description = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='description')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_meta_category_id = sgqlc.types.Field(Int, graphql_name='move_meta_category_id')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_movemetacategory = sgqlc.types.Field('pokemon_v2_movemetacategory', graphql_name='pokemon_v2_movemetacategory')


class pokemon_v2_movemetacategorydescription_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategorydescription))), graphql_name='nodes')


class pokemon_v2_movemetacategorydescription_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategorydescription_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movemetacategorydescription_variance_fields', graphql_name='variance')


class pokemon_v2_movemetacategorydescription_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_category_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_meta_category_id = sgqlc.types.Field(Float, graphql_name='move_meta_category_id')


class pokemon_v2_movemetacategorydescription_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_meta_category_id')
    description = sgqlc.types.Field(String, graphql_name='description')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_meta_category_id = sgqlc.types.Field(Int, graphql_name='move_meta_category_id')


class pokemon_v2_movemetacategorydescription_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_meta_category_id')
    description = sgqlc.types.Field(String, graphql_name='description')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_meta_category_id = sgqlc.types.Field(Int, graphql_name='move_meta_category_id')


class pokemon_v2_movemetacategorydescription_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_category_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_meta_category_id = sgqlc.types.Field(Float, graphql_name='move_meta_category_id')


class pokemon_v2_movemetacategorydescription_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_category_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_meta_category_id = sgqlc.types.Field(Float, graphql_name='move_meta_category_id')


class pokemon_v2_movemetacategorydescription_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_category_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_meta_category_id = sgqlc.types.Field(Float, graphql_name='move_meta_category_id')


class pokemon_v2_movemetacategorydescription_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_category_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_meta_category_id = sgqlc.types.Field(Int, graphql_name='move_meta_category_id')


class pokemon_v2_movemetacategorydescription_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_category_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_meta_category_id = sgqlc.types.Field(Float, graphql_name='move_meta_category_id')


class pokemon_v2_movemetacategorydescription_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_category_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_meta_category_id = sgqlc.types.Field(Float, graphql_name='move_meta_category_id')


class pokemon_v2_movemetacategorydescription_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_meta_category_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_meta_category_id = sgqlc.types.Field(Float, graphql_name='move_meta_category_id')


class pokemon_v2_movemetastatchange(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('change', 'id', 'move_id', 'pokemon_v2_move', 'pokemon_v2_stat', 'stat_id')
    change = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='change')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    pokemon_v2_move = sgqlc.types.Field('pokemon_v2_move', graphql_name='pokemon_v2_move')
    pokemon_v2_stat = sgqlc.types.Field('pokemon_v2_stat', graphql_name='pokemon_v2_stat')
    stat_id = sgqlc.types.Field(Int, graphql_name='stat_id')


class pokemon_v2_movemetastatchange_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_movemetastatchange_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetastatchange))), graphql_name='nodes')


class pokemon_v2_movemetastatchange_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movemetastatchange_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetastatchange_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_movemetastatchange_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movemetastatchange_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movemetastatchange_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movemetastatchange_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movemetastatchange_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movemetastatchange_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movemetastatchange_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movemetastatchange_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movemetastatchange_variance_fields', graphql_name='variance')


class pokemon_v2_movemetastatchange_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('change', 'id', 'move_id', 'stat_id')
    change = sgqlc.types.Field(Float, graphql_name='change')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_movemetastatchange_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('change', 'id', 'move_id', 'stat_id')
    change = sgqlc.types.Field(Int, graphql_name='change')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    stat_id = sgqlc.types.Field(Int, graphql_name='stat_id')


class pokemon_v2_movemetastatchange_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('change', 'id', 'move_id', 'stat_id')
    change = sgqlc.types.Field(Int, graphql_name='change')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    stat_id = sgqlc.types.Field(Int, graphql_name='stat_id')


class pokemon_v2_movemetastatchange_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('change', 'id', 'move_id', 'stat_id')
    change = sgqlc.types.Field(Float, graphql_name='change')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_movemetastatchange_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('change', 'id', 'move_id', 'stat_id')
    change = sgqlc.types.Field(Float, graphql_name='change')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_movemetastatchange_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('change', 'id', 'move_id', 'stat_id')
    change = sgqlc.types.Field(Float, graphql_name='change')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_movemetastatchange_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('change', 'id', 'move_id', 'stat_id')
    change = sgqlc.types.Field(Int, graphql_name='change')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    stat_id = sgqlc.types.Field(Int, graphql_name='stat_id')


class pokemon_v2_movemetastatchange_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('change', 'id', 'move_id', 'stat_id')
    change = sgqlc.types.Field(Float, graphql_name='change')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_movemetastatchange_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('change', 'id', 'move_id', 'stat_id')
    change = sgqlc.types.Field(Float, graphql_name='change')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_movemetastatchange_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('change', 'id', 'move_id', 'stat_id')
    change = sgqlc.types.Field(Float, graphql_name='change')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_movename(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id', 'name', 'pokemon_v2_language', 'pokemon_v2_move')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_move = sgqlc.types.Field('pokemon_v2_move', graphql_name='pokemon_v2_move')


class pokemon_v2_movename_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_movename_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movename))), graphql_name='nodes')


class pokemon_v2_movename_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movename_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movename_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_movename_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movename_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movename_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movename_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movename_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movename_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movename_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movename_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movename_variance_fields', graphql_name='variance')


class pokemon_v2_movename_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')


class pokemon_v2_movename_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movename_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movename_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')


class pokemon_v2_movename_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')


class pokemon_v2_movename_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')


class pokemon_v2_movename_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')


class pokemon_v2_movename_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')


class pokemon_v2_movename_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')


class pokemon_v2_movename_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')


class pokemon_v2_movetarget(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_moves', 'pokemon_v2_moves_aggregate', 'pokemon_v2_movetargetdescriptions', 'pokemon_v2_movetargetdescriptions_aggregate', 'pokemon_v2_movetargetnames', 'pokemon_v2_movetargetnames_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_moves = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move))), graphql_name='pokemon_v2_moves', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_move_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moves_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_move_aggregate), graphql_name='pokemon_v2_moves_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_move_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movetargetdescriptions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movetargetdescription'))), graphql_name='pokemon_v2_movetargetdescriptions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movetargetdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movetargetdescriptions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movetargetdescription_aggregate'), graphql_name='pokemon_v2_movetargetdescriptions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movetargetdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movetargetnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movetargetname'))), graphql_name='pokemon_v2_movetargetnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movetargetname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movetargetnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movetargetname_aggregate'), graphql_name='pokemon_v2_movetargetnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movetargetname_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_movetarget_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_movetarget_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetarget))), graphql_name='nodes')


class pokemon_v2_movetarget_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movetarget_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetarget_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_movetarget_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movetarget_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movetarget_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movetarget_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movetarget_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movetarget_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movetarget_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movetarget_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movetarget_variance_fields', graphql_name='variance')


class pokemon_v2_movetarget_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movetarget_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movetarget_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movetarget_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movetarget_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movetarget_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movetarget_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_movetarget_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movetarget_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movetarget_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_movetargetdescription(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_target_id', 'pokemon_v2_language', 'pokemon_v2_movetarget')
    description = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='description')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Int, graphql_name='move_target_id')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_movetarget = sgqlc.types.Field('pokemon_v2_movetarget', graphql_name='pokemon_v2_movetarget')


class pokemon_v2_movetargetdescription_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_movetargetdescription_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetdescription))), graphql_name='nodes')


class pokemon_v2_movetargetdescription_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movetargetdescription_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetdescription_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_movetargetdescription_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movetargetdescription_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movetargetdescription_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movetargetdescription_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movetargetdescription_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movetargetdescription_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movetargetdescription_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movetargetdescription_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movetargetdescription_variance_fields', graphql_name='variance')


class pokemon_v2_movetargetdescription_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Float, graphql_name='move_target_id')


class pokemon_v2_movetargetdescription_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_target_id')
    description = sgqlc.types.Field(String, graphql_name='description')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Int, graphql_name='move_target_id')


class pokemon_v2_movetargetdescription_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'move_target_id')
    description = sgqlc.types.Field(String, graphql_name='description')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Int, graphql_name='move_target_id')


class pokemon_v2_movetargetdescription_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Float, graphql_name='move_target_id')


class pokemon_v2_movetargetdescription_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Float, graphql_name='move_target_id')


class pokemon_v2_movetargetdescription_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Float, graphql_name='move_target_id')


class pokemon_v2_movetargetdescription_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Int, graphql_name='move_target_id')


class pokemon_v2_movetargetdescription_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Float, graphql_name='move_target_id')


class pokemon_v2_movetargetdescription_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Float, graphql_name='move_target_id')


class pokemon_v2_movetargetdescription_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Float, graphql_name='move_target_id')


class pokemon_v2_movetargetname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id', 'name', 'pokemon_v2_language', 'pokemon_v2_movetarget')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Int, graphql_name='move_target_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_movetarget = sgqlc.types.Field('pokemon_v2_movetarget', graphql_name='pokemon_v2_movetarget')


class pokemon_v2_movetargetname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_movetargetname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetname))), graphql_name='nodes')


class pokemon_v2_movetargetname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_movetargetname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_movetargetname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_movetargetname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_movetargetname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_movetargetname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_movetargetname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_movetargetname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_movetargetname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_movetargetname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_movetargetname_variance_fields', graphql_name='variance')


class pokemon_v2_movetargetname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Float, graphql_name='move_target_id')


class pokemon_v2_movetargetname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Int, graphql_name='move_target_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movetargetname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Int, graphql_name='move_target_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_movetargetname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Float, graphql_name='move_target_id')


class pokemon_v2_movetargetname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Float, graphql_name='move_target_id')


class pokemon_v2_movetargetname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Float, graphql_name='move_target_id')


class pokemon_v2_movetargetname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Int, graphql_name='move_target_id')


class pokemon_v2_movetargetname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Float, graphql_name='move_target_id')


class pokemon_v2_movetargetname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Float, graphql_name='move_target_id')


class pokemon_v2_movetargetname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'move_target_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    move_target_id = sgqlc.types.Field(Float, graphql_name='move_target_id')


class pokemon_v2_nature(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id', 'name', 'pokemon_v2_berryflavor_by_likes_flavor_id', 'pokemon_v2_stat_by_increased_stat_id', 'pokemon_v2_berryflavor', 'pokemon_v2_naturebattlestylepreferences', 'pokemon_v2_naturebattlestylepreferences_aggregate', 'pokemon_v2_naturenames', 'pokemon_v2_naturenames_aggregate', 'pokemon_v2_naturepokeathlonstats', 'pokemon_v2_naturepokeathlonstats_aggregate', 'pokemon_v2_stat')
    decreased_stat_id = sgqlc.types.Field(Int, graphql_name='decreased_stat_id')
    game_index = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='game_index')
    hates_flavor_id = sgqlc.types.Field(Int, graphql_name='hates_flavor_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    increased_stat_id = sgqlc.types.Field(Int, graphql_name='increased_stat_id')
    likes_flavor_id = sgqlc.types.Field(Int, graphql_name='likes_flavor_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_berryflavor_by_likes_flavor_id = sgqlc.types.Field('pokemon_v2_berryflavor', graphql_name='pokemonV2BerryflavorByLikesFlavorId')
    pokemon_v2_stat_by_increased_stat_id = sgqlc.types.Field('pokemon_v2_stat', graphql_name='pokemonV2StatByIncreasedStatId')
    pokemon_v2_berryflavor = sgqlc.types.Field('pokemon_v2_berryflavor', graphql_name='pokemon_v2_berryflavor')
    pokemon_v2_naturebattlestylepreferences = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_naturebattlestylepreference'))), graphql_name='pokemon_v2_naturebattlestylepreferences', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturebattlestylepreference_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturebattlestylepreference_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturebattlestylepreference_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_naturebattlestylepreferences_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_naturebattlestylepreference_aggregate'), graphql_name='pokemon_v2_naturebattlestylepreferences_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturebattlestylepreference_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturebattlestylepreference_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturebattlestylepreference_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_naturenames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_naturename'))), graphql_name='pokemon_v2_naturenames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_naturenames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_naturename_aggregate'), graphql_name='pokemon_v2_naturenames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_naturepokeathlonstats = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_naturepokeathlonstat'))), graphql_name='pokemon_v2_naturepokeathlonstats', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturepokeathlonstat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturepokeathlonstat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturepokeathlonstat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_naturepokeathlonstats_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_naturepokeathlonstat_aggregate'), graphql_name='pokemon_v2_naturepokeathlonstats_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturepokeathlonstat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturepokeathlonstat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturepokeathlonstat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_stat = sgqlc.types.Field('pokemon_v2_stat', graphql_name='pokemon_v2_stat')


class pokemon_v2_nature_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_nature_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature))), graphql_name='nodes')


class pokemon_v2_nature_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_nature_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_nature_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_nature_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_nature_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_nature_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_nature_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_nature_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_nature_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_nature_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_nature_variance_fields', graphql_name='variance')


class pokemon_v2_nature_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id')
    decreased_stat_id = sgqlc.types.Field(Float, graphql_name='decreased_stat_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    hates_flavor_id = sgqlc.types.Field(Float, graphql_name='hates_flavor_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    increased_stat_id = sgqlc.types.Field(Float, graphql_name='increased_stat_id')
    likes_flavor_id = sgqlc.types.Field(Float, graphql_name='likes_flavor_id')


class pokemon_v2_nature_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id', 'name')
    decreased_stat_id = sgqlc.types.Field(Int, graphql_name='decreased_stat_id')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    hates_flavor_id = sgqlc.types.Field(Int, graphql_name='hates_flavor_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    increased_stat_id = sgqlc.types.Field(Int, graphql_name='increased_stat_id')
    likes_flavor_id = sgqlc.types.Field(Int, graphql_name='likes_flavor_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_nature_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id', 'name')
    decreased_stat_id = sgqlc.types.Field(Int, graphql_name='decreased_stat_id')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    hates_flavor_id = sgqlc.types.Field(Int, graphql_name='hates_flavor_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    increased_stat_id = sgqlc.types.Field(Int, graphql_name='increased_stat_id')
    likes_flavor_id = sgqlc.types.Field(Int, graphql_name='likes_flavor_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_nature_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id')
    decreased_stat_id = sgqlc.types.Field(Float, graphql_name='decreased_stat_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    hates_flavor_id = sgqlc.types.Field(Float, graphql_name='hates_flavor_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    increased_stat_id = sgqlc.types.Field(Float, graphql_name='increased_stat_id')
    likes_flavor_id = sgqlc.types.Field(Float, graphql_name='likes_flavor_id')


class pokemon_v2_nature_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id')
    decreased_stat_id = sgqlc.types.Field(Float, graphql_name='decreased_stat_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    hates_flavor_id = sgqlc.types.Field(Float, graphql_name='hates_flavor_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    increased_stat_id = sgqlc.types.Field(Float, graphql_name='increased_stat_id')
    likes_flavor_id = sgqlc.types.Field(Float, graphql_name='likes_flavor_id')


class pokemon_v2_nature_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id')
    decreased_stat_id = sgqlc.types.Field(Float, graphql_name='decreased_stat_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    hates_flavor_id = sgqlc.types.Field(Float, graphql_name='hates_flavor_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    increased_stat_id = sgqlc.types.Field(Float, graphql_name='increased_stat_id')
    likes_flavor_id = sgqlc.types.Field(Float, graphql_name='likes_flavor_id')


class pokemon_v2_nature_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id')
    decreased_stat_id = sgqlc.types.Field(Int, graphql_name='decreased_stat_id')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    hates_flavor_id = sgqlc.types.Field(Int, graphql_name='hates_flavor_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    increased_stat_id = sgqlc.types.Field(Int, graphql_name='increased_stat_id')
    likes_flavor_id = sgqlc.types.Field(Int, graphql_name='likes_flavor_id')


class pokemon_v2_nature_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id')
    decreased_stat_id = sgqlc.types.Field(Float, graphql_name='decreased_stat_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    hates_flavor_id = sgqlc.types.Field(Float, graphql_name='hates_flavor_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    increased_stat_id = sgqlc.types.Field(Float, graphql_name='increased_stat_id')
    likes_flavor_id = sgqlc.types.Field(Float, graphql_name='likes_flavor_id')


class pokemon_v2_nature_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id')
    decreased_stat_id = sgqlc.types.Field(Float, graphql_name='decreased_stat_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    hates_flavor_id = sgqlc.types.Field(Float, graphql_name='hates_flavor_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    increased_stat_id = sgqlc.types.Field(Float, graphql_name='increased_stat_id')
    likes_flavor_id = sgqlc.types.Field(Float, graphql_name='likes_flavor_id')


class pokemon_v2_nature_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('decreased_stat_id', 'game_index', 'hates_flavor_id', 'id', 'increased_stat_id', 'likes_flavor_id')
    decreased_stat_id = sgqlc.types.Field(Float, graphql_name='decreased_stat_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    hates_flavor_id = sgqlc.types.Field(Float, graphql_name='hates_flavor_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    increased_stat_id = sgqlc.types.Field(Float, graphql_name='increased_stat_id')
    likes_flavor_id = sgqlc.types.Field(Float, graphql_name='likes_flavor_id')


class pokemon_v2_naturebattlestylepreference(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id', 'pokemon_v2_movebattlestyle', 'pokemon_v2_nature')
    high_hp_preference = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='high_hp_preference')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    low_hp_preference = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='low_hp_preference')
    move_battle_style_id = sgqlc.types.Field(Int, graphql_name='move_battle_style_id')
    nature_id = sgqlc.types.Field(Int, graphql_name='nature_id')
    pokemon_v2_movebattlestyle = sgqlc.types.Field('pokemon_v2_movebattlestyle', graphql_name='pokemon_v2_movebattlestyle')
    pokemon_v2_nature = sgqlc.types.Field('pokemon_v2_nature', graphql_name='pokemon_v2_nature')


class pokemon_v2_naturebattlestylepreference_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturebattlestylepreference))), graphql_name='nodes')


class pokemon_v2_naturebattlestylepreference_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturebattlestylepreference_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference_variance_fields', graphql_name='variance')


class pokemon_v2_naturebattlestylepreference_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id')
    high_hp_preference = sgqlc.types.Field(Float, graphql_name='high_hp_preference')
    id = sgqlc.types.Field(Float, graphql_name='id')
    low_hp_preference = sgqlc.types.Field(Float, graphql_name='low_hp_preference')
    move_battle_style_id = sgqlc.types.Field(Float, graphql_name='move_battle_style_id')
    nature_id = sgqlc.types.Field(Float, graphql_name='nature_id')


class pokemon_v2_naturebattlestylepreference_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id')
    high_hp_preference = sgqlc.types.Field(Int, graphql_name='high_hp_preference')
    id = sgqlc.types.Field(Int, graphql_name='id')
    low_hp_preference = sgqlc.types.Field(Int, graphql_name='low_hp_preference')
    move_battle_style_id = sgqlc.types.Field(Int, graphql_name='move_battle_style_id')
    nature_id = sgqlc.types.Field(Int, graphql_name='nature_id')


class pokemon_v2_naturebattlestylepreference_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id')
    high_hp_preference = sgqlc.types.Field(Int, graphql_name='high_hp_preference')
    id = sgqlc.types.Field(Int, graphql_name='id')
    low_hp_preference = sgqlc.types.Field(Int, graphql_name='low_hp_preference')
    move_battle_style_id = sgqlc.types.Field(Int, graphql_name='move_battle_style_id')
    nature_id = sgqlc.types.Field(Int, graphql_name='nature_id')


class pokemon_v2_naturebattlestylepreference_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id')
    high_hp_preference = sgqlc.types.Field(Float, graphql_name='high_hp_preference')
    id = sgqlc.types.Field(Float, graphql_name='id')
    low_hp_preference = sgqlc.types.Field(Float, graphql_name='low_hp_preference')
    move_battle_style_id = sgqlc.types.Field(Float, graphql_name='move_battle_style_id')
    nature_id = sgqlc.types.Field(Float, graphql_name='nature_id')


class pokemon_v2_naturebattlestylepreference_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id')
    high_hp_preference = sgqlc.types.Field(Float, graphql_name='high_hp_preference')
    id = sgqlc.types.Field(Float, graphql_name='id')
    low_hp_preference = sgqlc.types.Field(Float, graphql_name='low_hp_preference')
    move_battle_style_id = sgqlc.types.Field(Float, graphql_name='move_battle_style_id')
    nature_id = sgqlc.types.Field(Float, graphql_name='nature_id')


class pokemon_v2_naturebattlestylepreference_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id')
    high_hp_preference = sgqlc.types.Field(Float, graphql_name='high_hp_preference')
    id = sgqlc.types.Field(Float, graphql_name='id')
    low_hp_preference = sgqlc.types.Field(Float, graphql_name='low_hp_preference')
    move_battle_style_id = sgqlc.types.Field(Float, graphql_name='move_battle_style_id')
    nature_id = sgqlc.types.Field(Float, graphql_name='nature_id')


class pokemon_v2_naturebattlestylepreference_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id')
    high_hp_preference = sgqlc.types.Field(Int, graphql_name='high_hp_preference')
    id = sgqlc.types.Field(Int, graphql_name='id')
    low_hp_preference = sgqlc.types.Field(Int, graphql_name='low_hp_preference')
    move_battle_style_id = sgqlc.types.Field(Int, graphql_name='move_battle_style_id')
    nature_id = sgqlc.types.Field(Int, graphql_name='nature_id')


class pokemon_v2_naturebattlestylepreference_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id')
    high_hp_preference = sgqlc.types.Field(Float, graphql_name='high_hp_preference')
    id = sgqlc.types.Field(Float, graphql_name='id')
    low_hp_preference = sgqlc.types.Field(Float, graphql_name='low_hp_preference')
    move_battle_style_id = sgqlc.types.Field(Float, graphql_name='move_battle_style_id')
    nature_id = sgqlc.types.Field(Float, graphql_name='nature_id')


class pokemon_v2_naturebattlestylepreference_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id')
    high_hp_preference = sgqlc.types.Field(Float, graphql_name='high_hp_preference')
    id = sgqlc.types.Field(Float, graphql_name='id')
    low_hp_preference = sgqlc.types.Field(Float, graphql_name='low_hp_preference')
    move_battle_style_id = sgqlc.types.Field(Float, graphql_name='move_battle_style_id')
    nature_id = sgqlc.types.Field(Float, graphql_name='nature_id')


class pokemon_v2_naturebattlestylepreference_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('high_hp_preference', 'id', 'low_hp_preference', 'move_battle_style_id', 'nature_id')
    high_hp_preference = sgqlc.types.Field(Float, graphql_name='high_hp_preference')
    id = sgqlc.types.Field(Float, graphql_name='id')
    low_hp_preference = sgqlc.types.Field(Float, graphql_name='low_hp_preference')
    move_battle_style_id = sgqlc.types.Field(Float, graphql_name='move_battle_style_id')
    nature_id = sgqlc.types.Field(Float, graphql_name='nature_id')


class pokemon_v2_naturename(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'nature_id', 'pokemon_v2_language', 'pokemon_v2_nature')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    nature_id = sgqlc.types.Field(Int, graphql_name='nature_id')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_nature = sgqlc.types.Field('pokemon_v2_nature', graphql_name='pokemon_v2_nature')


class pokemon_v2_naturename_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_naturename_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturename))), graphql_name='nodes')


class pokemon_v2_naturename_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_naturename_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturename_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_naturename_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_naturename_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_naturename_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_naturename_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_naturename_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_naturename_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_naturename_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_naturename_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_naturename_variance_fields', graphql_name='variance')


class pokemon_v2_naturename_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'nature_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    nature_id = sgqlc.types.Field(Float, graphql_name='nature_id')


class pokemon_v2_naturename_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'nature_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    nature_id = sgqlc.types.Field(Int, graphql_name='nature_id')


class pokemon_v2_naturename_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'nature_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    nature_id = sgqlc.types.Field(Int, graphql_name='nature_id')


class pokemon_v2_naturename_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'nature_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    nature_id = sgqlc.types.Field(Float, graphql_name='nature_id')


class pokemon_v2_naturename_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'nature_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    nature_id = sgqlc.types.Field(Float, graphql_name='nature_id')


class pokemon_v2_naturename_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'nature_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    nature_id = sgqlc.types.Field(Float, graphql_name='nature_id')


class pokemon_v2_naturename_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'nature_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    nature_id = sgqlc.types.Field(Int, graphql_name='nature_id')


class pokemon_v2_naturename_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'nature_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    nature_id = sgqlc.types.Field(Float, graphql_name='nature_id')


class pokemon_v2_naturename_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'nature_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    nature_id = sgqlc.types.Field(Float, graphql_name='nature_id')


class pokemon_v2_naturename_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'nature_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    nature_id = sgqlc.types.Field(Float, graphql_name='nature_id')


class pokemon_v2_naturepokeathlonstat(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'max_change', 'nature_id', 'pokeathlon_stat_id', 'pokemon_v2_nature', 'pokemon_v2_pokeathlonstat')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    max_change = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='max_change')
    nature_id = sgqlc.types.Field(Int, graphql_name='nature_id')
    pokeathlon_stat_id = sgqlc.types.Field(Int, graphql_name='pokeathlon_stat_id')
    pokemon_v2_nature = sgqlc.types.Field('pokemon_v2_nature', graphql_name='pokemon_v2_nature')
    pokemon_v2_pokeathlonstat = sgqlc.types.Field('pokemon_v2_pokeathlonstat', graphql_name='pokemon_v2_pokeathlonstat')


class pokemon_v2_naturepokeathlonstat_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturepokeathlonstat))), graphql_name='nodes')


class pokemon_v2_naturepokeathlonstat_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturepokeathlonstat_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat_variance_fields', graphql_name='variance')


class pokemon_v2_naturepokeathlonstat_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'max_change', 'nature_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    max_change = sgqlc.types.Field(Float, graphql_name='max_change')
    nature_id = sgqlc.types.Field(Float, graphql_name='nature_id')
    pokeathlon_stat_id = sgqlc.types.Field(Float, graphql_name='pokeathlon_stat_id')


class pokemon_v2_naturepokeathlonstat_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'max_change', 'nature_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    max_change = sgqlc.types.Field(Int, graphql_name='max_change')
    nature_id = sgqlc.types.Field(Int, graphql_name='nature_id')
    pokeathlon_stat_id = sgqlc.types.Field(Int, graphql_name='pokeathlon_stat_id')


class pokemon_v2_naturepokeathlonstat_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'max_change', 'nature_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    max_change = sgqlc.types.Field(Int, graphql_name='max_change')
    nature_id = sgqlc.types.Field(Int, graphql_name='nature_id')
    pokeathlon_stat_id = sgqlc.types.Field(Int, graphql_name='pokeathlon_stat_id')


class pokemon_v2_naturepokeathlonstat_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'max_change', 'nature_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    max_change = sgqlc.types.Field(Float, graphql_name='max_change')
    nature_id = sgqlc.types.Field(Float, graphql_name='nature_id')
    pokeathlon_stat_id = sgqlc.types.Field(Float, graphql_name='pokeathlon_stat_id')


class pokemon_v2_naturepokeathlonstat_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'max_change', 'nature_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    max_change = sgqlc.types.Field(Float, graphql_name='max_change')
    nature_id = sgqlc.types.Field(Float, graphql_name='nature_id')
    pokeathlon_stat_id = sgqlc.types.Field(Float, graphql_name='pokeathlon_stat_id')


class pokemon_v2_naturepokeathlonstat_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'max_change', 'nature_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    max_change = sgqlc.types.Field(Float, graphql_name='max_change')
    nature_id = sgqlc.types.Field(Float, graphql_name='nature_id')
    pokeathlon_stat_id = sgqlc.types.Field(Float, graphql_name='pokeathlon_stat_id')


class pokemon_v2_naturepokeathlonstat_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'max_change', 'nature_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    max_change = sgqlc.types.Field(Int, graphql_name='max_change')
    nature_id = sgqlc.types.Field(Int, graphql_name='nature_id')
    pokeathlon_stat_id = sgqlc.types.Field(Int, graphql_name='pokeathlon_stat_id')


class pokemon_v2_naturepokeathlonstat_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'max_change', 'nature_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    max_change = sgqlc.types.Field(Float, graphql_name='max_change')
    nature_id = sgqlc.types.Field(Float, graphql_name='nature_id')
    pokeathlon_stat_id = sgqlc.types.Field(Float, graphql_name='pokeathlon_stat_id')


class pokemon_v2_naturepokeathlonstat_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'max_change', 'nature_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    max_change = sgqlc.types.Field(Float, graphql_name='max_change')
    nature_id = sgqlc.types.Field(Float, graphql_name='nature_id')
    pokeathlon_stat_id = sgqlc.types.Field(Float, graphql_name='pokeathlon_stat_id')


class pokemon_v2_naturepokeathlonstat_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'max_change', 'nature_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    max_change = sgqlc.types.Field(Float, graphql_name='max_change')
    nature_id = sgqlc.types.Field(Float, graphql_name='nature_id')
    pokeathlon_stat_id = sgqlc.types.Field(Float, graphql_name='pokeathlon_stat_id')


class pokemon_v2_palpark(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'pokemon_v2_palparkarea', 'pokemon_v2_pokemonspecy', 'rate')
    base_score = sgqlc.types.Field(Int, graphql_name='base_score')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pal_park_area_id = sgqlc.types.Field(Int, graphql_name='pal_park_area_id')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')
    pokemon_v2_palparkarea = sgqlc.types.Field('pokemon_v2_palparkarea', graphql_name='pokemon_v2_palparkarea')
    pokemon_v2_pokemonspecy = sgqlc.types.Field('pokemon_v2_pokemonspecies', graphql_name='pokemon_v2_pokemonspecy')
    rate = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='rate')


class pokemon_v2_palpark_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_palpark_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palpark))), graphql_name='nodes')


class pokemon_v2_palpark_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_palpark_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palpark_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_palpark_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_palpark_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_palpark_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_palpark_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_palpark_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_palpark_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_palpark_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_palpark_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_palpark_variance_fields', graphql_name='variance')


class pokemon_v2_palpark_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'rate')
    base_score = sgqlc.types.Field(Float, graphql_name='base_score')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pal_park_area_id = sgqlc.types.Field(Float, graphql_name='pal_park_area_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')
    rate = sgqlc.types.Field(Float, graphql_name='rate')


class pokemon_v2_palpark_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'rate')
    base_score = sgqlc.types.Field(Int, graphql_name='base_score')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pal_park_area_id = sgqlc.types.Field(Int, graphql_name='pal_park_area_id')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')
    rate = sgqlc.types.Field(Int, graphql_name='rate')


class pokemon_v2_palpark_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'rate')
    base_score = sgqlc.types.Field(Int, graphql_name='base_score')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pal_park_area_id = sgqlc.types.Field(Int, graphql_name='pal_park_area_id')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')
    rate = sgqlc.types.Field(Int, graphql_name='rate')


class pokemon_v2_palpark_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'rate')
    base_score = sgqlc.types.Field(Float, graphql_name='base_score')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pal_park_area_id = sgqlc.types.Field(Float, graphql_name='pal_park_area_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')
    rate = sgqlc.types.Field(Float, graphql_name='rate')


class pokemon_v2_palpark_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'rate')
    base_score = sgqlc.types.Field(Float, graphql_name='base_score')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pal_park_area_id = sgqlc.types.Field(Float, graphql_name='pal_park_area_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')
    rate = sgqlc.types.Field(Float, graphql_name='rate')


class pokemon_v2_palpark_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'rate')
    base_score = sgqlc.types.Field(Float, graphql_name='base_score')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pal_park_area_id = sgqlc.types.Field(Float, graphql_name='pal_park_area_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')
    rate = sgqlc.types.Field(Float, graphql_name='rate')


class pokemon_v2_palpark_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'rate')
    base_score = sgqlc.types.Field(Int, graphql_name='base_score')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pal_park_area_id = sgqlc.types.Field(Int, graphql_name='pal_park_area_id')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')
    rate = sgqlc.types.Field(Int, graphql_name='rate')


class pokemon_v2_palpark_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'rate')
    base_score = sgqlc.types.Field(Float, graphql_name='base_score')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pal_park_area_id = sgqlc.types.Field(Float, graphql_name='pal_park_area_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')
    rate = sgqlc.types.Field(Float, graphql_name='rate')


class pokemon_v2_palpark_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'rate')
    base_score = sgqlc.types.Field(Float, graphql_name='base_score')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pal_park_area_id = sgqlc.types.Field(Float, graphql_name='pal_park_area_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')
    rate = sgqlc.types.Field(Float, graphql_name='rate')


class pokemon_v2_palpark_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_score', 'id', 'pal_park_area_id', 'pokemon_species_id', 'rate')
    base_score = sgqlc.types.Field(Float, graphql_name='base_score')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pal_park_area_id = sgqlc.types.Field(Float, graphql_name='pal_park_area_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')
    rate = sgqlc.types.Field(Float, graphql_name='rate')


class pokemon_v2_palparkarea(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_palparkareanames', 'pokemon_v2_palparkareanames_aggregate', 'pokemon_v2_palparks', 'pokemon_v2_palparks_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_palparkareanames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_palparkareaname'))), graphql_name='pokemon_v2_palparkareanames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkareaname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkareaname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_palparkareaname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_palparkareanames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_palparkareaname_aggregate'), graphql_name='pokemon_v2_palparkareanames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkareaname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkareaname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_palparkareaname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_palparks = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palpark))), graphql_name='pokemon_v2_palparks', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palpark_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palpark_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_palpark_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_palparks_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_palpark_aggregate), graphql_name='pokemon_v2_palparks_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palpark_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palpark_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_palpark_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_palparkarea_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_palparkarea_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkarea))), graphql_name='nodes')


class pokemon_v2_palparkarea_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_palparkarea_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkarea_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_palparkarea_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_palparkarea_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_palparkarea_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_palparkarea_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_palparkarea_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_palparkarea_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_palparkarea_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_palparkarea_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_palparkarea_variance_fields', graphql_name='variance')


class pokemon_v2_palparkarea_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_palparkarea_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_palparkarea_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_palparkarea_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_palparkarea_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_palparkarea_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_palparkarea_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_palparkarea_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_palparkarea_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_palparkarea_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_palparkareaname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pal_park_area_id', 'pokemon_v2_language', 'pokemon_v2_palparkarea')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pal_park_area_id = sgqlc.types.Field(Int, graphql_name='pal_park_area_id')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_palparkarea = sgqlc.types.Field('pokemon_v2_palparkarea', graphql_name='pokemon_v2_palparkarea')


class pokemon_v2_palparkareaname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_palparkareaname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkareaname))), graphql_name='nodes')


class pokemon_v2_palparkareaname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_palparkareaname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkareaname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_palparkareaname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_palparkareaname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_palparkareaname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_palparkareaname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_palparkareaname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_palparkareaname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_palparkareaname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_palparkareaname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_palparkareaname_variance_fields', graphql_name='variance')


class pokemon_v2_palparkareaname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pal_park_area_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pal_park_area_id = sgqlc.types.Field(Float, graphql_name='pal_park_area_id')


class pokemon_v2_palparkareaname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pal_park_area_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    pal_park_area_id = sgqlc.types.Field(Int, graphql_name='pal_park_area_id')


class pokemon_v2_palparkareaname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pal_park_area_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    pal_park_area_id = sgqlc.types.Field(Int, graphql_name='pal_park_area_id')


class pokemon_v2_palparkareaname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pal_park_area_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pal_park_area_id = sgqlc.types.Field(Float, graphql_name='pal_park_area_id')


class pokemon_v2_palparkareaname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pal_park_area_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pal_park_area_id = sgqlc.types.Field(Float, graphql_name='pal_park_area_id')


class pokemon_v2_palparkareaname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pal_park_area_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pal_park_area_id = sgqlc.types.Field(Float, graphql_name='pal_park_area_id')


class pokemon_v2_palparkareaname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pal_park_area_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pal_park_area_id = sgqlc.types.Field(Int, graphql_name='pal_park_area_id')


class pokemon_v2_palparkareaname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pal_park_area_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pal_park_area_id = sgqlc.types.Field(Float, graphql_name='pal_park_area_id')


class pokemon_v2_palparkareaname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pal_park_area_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pal_park_area_id = sgqlc.types.Field(Float, graphql_name='pal_park_area_id')


class pokemon_v2_palparkareaname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pal_park_area_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pal_park_area_id = sgqlc.types.Field(Float, graphql_name='pal_park_area_id')


class pokemon_v2_pokeathlonstat(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_naturepokeathlonstats', 'pokemon_v2_naturepokeathlonstats_aggregate', 'pokemon_v2_pokeathlonstatnames', 'pokemon_v2_pokeathlonstatnames_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_naturepokeathlonstats = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturepokeathlonstat))), graphql_name='pokemon_v2_naturepokeathlonstats', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturepokeathlonstat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturepokeathlonstat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturepokeathlonstat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_naturepokeathlonstats_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_naturepokeathlonstat_aggregate), graphql_name='pokemon_v2_naturepokeathlonstats_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturepokeathlonstat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturepokeathlonstat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturepokeathlonstat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokeathlonstatnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokeathlonstatname'))), graphql_name='pokemon_v2_pokeathlonstatnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstatname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstatname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokeathlonstatname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokeathlonstatnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokeathlonstatname_aggregate'), graphql_name='pokemon_v2_pokeathlonstatnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstatname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstatname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokeathlonstatname_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_pokeathlonstat_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokeathlonstat_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstat))), graphql_name='nodes')


class pokemon_v2_pokeathlonstat_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokeathlonstat_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstat_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokeathlonstat_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokeathlonstat_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokeathlonstat_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokeathlonstat_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokeathlonstat_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokeathlonstat_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokeathlonstat_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokeathlonstat_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokeathlonstat_variance_fields', graphql_name='variance')


class pokemon_v2_pokeathlonstat_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokeathlonstat_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_pokeathlonstat_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_pokeathlonstat_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokeathlonstat_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokeathlonstat_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokeathlonstat_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_pokeathlonstat_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokeathlonstat_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokeathlonstat_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokeathlonstatname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokeathlon_stat_id', 'pokemon_v2_language', 'pokemon_v2_pokeathlonstat')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokeathlon_stat_id = sgqlc.types.Field(Int, graphql_name='pokeathlon_stat_id')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_pokeathlonstat = sgqlc.types.Field('pokemon_v2_pokeathlonstat', graphql_name='pokemon_v2_pokeathlonstat')


class pokemon_v2_pokeathlonstatname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstatname))), graphql_name='nodes')


class pokemon_v2_pokeathlonstatname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstatname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokeathlonstatname_variance_fields', graphql_name='variance')


class pokemon_v2_pokeathlonstatname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokeathlon_stat_id = sgqlc.types.Field(Float, graphql_name='pokeathlon_stat_id')


class pokemon_v2_pokeathlonstatname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    pokeathlon_stat_id = sgqlc.types.Field(Int, graphql_name='pokeathlon_stat_id')


class pokemon_v2_pokeathlonstatname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    pokeathlon_stat_id = sgqlc.types.Field(Int, graphql_name='pokeathlon_stat_id')


class pokemon_v2_pokeathlonstatname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokeathlon_stat_id = sgqlc.types.Field(Float, graphql_name='pokeathlon_stat_id')


class pokemon_v2_pokeathlonstatname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokeathlon_stat_id = sgqlc.types.Field(Float, graphql_name='pokeathlon_stat_id')


class pokemon_v2_pokeathlonstatname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokeathlon_stat_id = sgqlc.types.Field(Float, graphql_name='pokeathlon_stat_id')


class pokemon_v2_pokeathlonstatname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokeathlon_stat_id = sgqlc.types.Field(Int, graphql_name='pokeathlon_stat_id')


class pokemon_v2_pokeathlonstatname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokeathlon_stat_id = sgqlc.types.Field(Float, graphql_name='pokeathlon_stat_id')


class pokemon_v2_pokeathlonstatname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokeathlon_stat_id = sgqlc.types.Field(Float, graphql_name='pokeathlon_stat_id')


class pokemon_v2_pokeathlonstatname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokeathlon_stat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokeathlon_stat_id = sgqlc.types.Field(Float, graphql_name='pokeathlon_stat_id')


class pokemon_v2_pokedex(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'is_main_series', 'name', 'pokemon_v2_pokedexdescriptions', 'pokemon_v2_pokedexdescriptions_aggregate', 'pokemon_v2_pokedexnames', 'pokemon_v2_pokedexnames_aggregate', 'pokemon_v2_pokedexversiongroups', 'pokemon_v2_pokedexversiongroups_aggregate', 'pokemon_v2_pokemondexnumbers', 'pokemon_v2_pokemondexnumbers_aggregate', 'pokemon_v2_region', 'region_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    is_main_series = sgqlc.types.Field(sgqlc.types.non_null(Boolean), graphql_name='is_main_series')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_pokedexdescriptions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokedexdescription'))), graphql_name='pokemon_v2_pokedexdescriptions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexdescriptions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokedexdescription_aggregate'), graphql_name='pokemon_v2_pokedexdescriptions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokedexname'))), graphql_name='pokemon_v2_pokedexnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokedexname_aggregate'), graphql_name='pokemon_v2_pokedexnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexversiongroups = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokedexversiongroup'))), graphql_name='pokemon_v2_pokedexversiongroups', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexversiongroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexversiongroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexversiongroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexversiongroups_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokedexversiongroup_aggregate'), graphql_name='pokemon_v2_pokedexversiongroups_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexversiongroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexversiongroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexversiongroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemondexnumbers = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemondexnumber'))), graphql_name='pokemon_v2_pokemondexnumbers', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemondexnumber_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemondexnumber_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemondexnumber_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemondexnumbers_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemondexnumber_aggregate'), graphql_name='pokemon_v2_pokemondexnumbers_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemondexnumber_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemondexnumber_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemondexnumber_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_region = sgqlc.types.Field('pokemon_v2_region', graphql_name='pokemon_v2_region')
    region_id = sgqlc.types.Field(Int, graphql_name='region_id')


class pokemon_v2_pokedex_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokedex_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedex))), graphql_name='nodes')


class pokemon_v2_pokedex_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokedex_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedex_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokedex_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokedex_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokedex_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokedex_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokedex_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokedex_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokedex_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokedex_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokedex_variance_fields', graphql_name='variance')


class pokemon_v2_pokedex_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_pokedex_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'region_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')
    region_id = sgqlc.types.Field(Int, graphql_name='region_id')


class pokemon_v2_pokedex_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'region_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')
    region_id = sgqlc.types.Field(Int, graphql_name='region_id')


class pokemon_v2_pokedex_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_pokedex_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_pokedex_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_pokedex_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    region_id = sgqlc.types.Field(Int, graphql_name='region_id')


class pokemon_v2_pokedex_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_pokedex_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_pokedex_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_pokedexdescription(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'pokedex_id', 'pokemon_v2_language', 'pokemon_v2_pokedex')
    description = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='description')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(Int, graphql_name='pokedex_id')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_pokedex = sgqlc.types.Field('pokemon_v2_pokedex', graphql_name='pokemon_v2_pokedex')


class pokemon_v2_pokedexdescription_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokedexdescription_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexdescription))), graphql_name='nodes')


class pokemon_v2_pokedexdescription_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokedexdescription_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexdescription_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokedexdescription_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokedexdescription_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokedexdescription_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokedexdescription_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokedexdescription_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokedexdescription_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokedexdescription_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokedexdescription_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokedexdescription_variance_fields', graphql_name='variance')


class pokemon_v2_pokedexdescription_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')


class pokemon_v2_pokedexdescription_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'pokedex_id')
    description = sgqlc.types.Field(String, graphql_name='description')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(Int, graphql_name='pokedex_id')


class pokemon_v2_pokedexdescription_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'pokedex_id')
    description = sgqlc.types.Field(String, graphql_name='description')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(Int, graphql_name='pokedex_id')


class pokemon_v2_pokedexdescription_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')


class pokemon_v2_pokedexdescription_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')


class pokemon_v2_pokedexdescription_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')


class pokemon_v2_pokedexdescription_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(Int, graphql_name='pokedex_id')


class pokemon_v2_pokedexdescription_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')


class pokemon_v2_pokedexdescription_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')


class pokemon_v2_pokedexdescription_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')


class pokemon_v2_pokedexname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokedex_id', 'pokemon_v2_language', 'pokemon_v2_pokedex')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokedex_id = sgqlc.types.Field(Int, graphql_name='pokedex_id')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_pokedex = sgqlc.types.Field('pokemon_v2_pokedex', graphql_name='pokemon_v2_pokedex')


class pokemon_v2_pokedexname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokedexname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexname))), graphql_name='nodes')


class pokemon_v2_pokedexname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokedexname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokedexname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokedexname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokedexname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokedexname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokedexname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokedexname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokedexname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokedexname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokedexname_variance_fields', graphql_name='variance')


class pokemon_v2_pokedexname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')


class pokemon_v2_pokedexname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokedex_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    pokedex_id = sgqlc.types.Field(Int, graphql_name='pokedex_id')


class pokemon_v2_pokedexname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokedex_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    pokedex_id = sgqlc.types.Field(Int, graphql_name='pokedex_id')


class pokemon_v2_pokedexname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')


class pokemon_v2_pokedexname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')


class pokemon_v2_pokedexname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')


class pokemon_v2_pokedexname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(Int, graphql_name='pokedex_id')


class pokemon_v2_pokedexname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')


class pokemon_v2_pokedexname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')


class pokemon_v2_pokedexname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokedex_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')


class pokemon_v2_pokedexversiongroup(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokemon_v2_pokedex', 'pokemon_v2_versiongroup', 'version_group_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokedex_id = sgqlc.types.Field(Int, graphql_name='pokedex_id')
    pokemon_v2_pokedex = sgqlc.types.Field('pokemon_v2_pokedex', graphql_name='pokemon_v2_pokedex')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_pokedexversiongroup_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexversiongroup))), graphql_name='nodes')


class pokemon_v2_pokedexversiongroup_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexversiongroup_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokedexversiongroup_variance_fields', graphql_name='variance')


class pokemon_v2_pokedexversiongroup_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_pokedexversiongroup_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'version_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokedex_id = sgqlc.types.Field(Int, graphql_name='pokedex_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_pokedexversiongroup_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'version_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokedex_id = sgqlc.types.Field(Int, graphql_name='pokedex_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_pokedexversiongroup_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_pokedexversiongroup_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_pokedexversiongroup_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_pokedexversiongroup_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'version_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokedex_id = sgqlc.types.Field(Int, graphql_name='pokedex_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_pokedexversiongroup_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_pokedexversiongroup_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_pokedexversiongroup_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_pokemon(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_experience', 'height', 'id', 'is_default', 'name', 'order', 'pokemon_species_id', 'pokemon_v2_encounters', 'pokemon_v2_encounters_aggregate', 'pokemon_v2_pokemonabilities', 'pokemon_v2_pokemonabilities_aggregate', 'pokemon_v2_pokemonforms', 'pokemon_v2_pokemonforms_aggregate', 'pokemon_v2_pokemongameindices', 'pokemon_v2_pokemongameindices_aggregate', 'pokemon_v2_pokemonitems', 'pokemon_v2_pokemonitems_aggregate', 'pokemon_v2_pokemonmoves', 'pokemon_v2_pokemonmoves_aggregate', 'pokemon_v2_pokemonspecy', 'pokemon_v2_pokemonsprites', 'pokemon_v2_pokemonsprites_aggregate', 'pokemon_v2_pokemonstats', 'pokemon_v2_pokemonstats_aggregate', 'pokemon_v2_pokemontypepasts', 'pokemon_v2_pokemontypepasts_aggregate', 'pokemon_v2_pokemontypes', 'pokemon_v2_pokemontypes_aggregate', 'weight')
    base_experience = sgqlc.types.Field(Int, graphql_name='base_experience')
    height = sgqlc.types.Field(Int, graphql_name='height')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    is_default = sgqlc.types.Field(sgqlc.types.non_null(Boolean), graphql_name='is_default')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    order = sgqlc.types.Field(Int, graphql_name='order')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')
    pokemon_v2_encounters = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter))), graphql_name='pokemon_v2_encounters', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounter_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounters_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_encounter_aggregate), graphql_name='pokemon_v2_encounters_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounter_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonabilities = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonability'))), graphql_name='pokemon_v2_pokemonabilities', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonability_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonability_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonability_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonabilities_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonability_aggregate'), graphql_name='pokemon_v2_pokemonabilities_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonability_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonability_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonability_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonforms = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonform'))), graphql_name='pokemon_v2_pokemonforms', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonform_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonform_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonform_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonforms_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonform_aggregate'), graphql_name='pokemon_v2_pokemonforms_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonform_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonform_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonform_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemongameindices = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemongameindex'))), graphql_name='pokemon_v2_pokemongameindices', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemongameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemongameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemongameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemongameindices_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemongameindex_aggregate'), graphql_name='pokemon_v2_pokemongameindices_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemongameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemongameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemongameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonitems = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonitem'))), graphql_name='pokemon_v2_pokemonitems', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonitem_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonitem_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonitem_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonitems_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonitem_aggregate'), graphql_name='pokemon_v2_pokemonitems_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonitem_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonitem_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonitem_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonmoves = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonmove'))), graphql_name='pokemon_v2_pokemonmoves', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonmove_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonmoves_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonmove_aggregate'), graphql_name='pokemon_v2_pokemonmoves_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonmove_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspecy = sgqlc.types.Field('pokemon_v2_pokemonspecies', graphql_name='pokemon_v2_pokemonspecy')
    pokemon_v2_pokemonsprites = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonsprites'))), graphql_name='pokemon_v2_pokemonsprites', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonsprites_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonsprites_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonsprites_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonsprites_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonsprites_aggregate'), graphql_name='pokemon_v2_pokemonsprites_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonsprites_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonsprites_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonsprites_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonstats = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonstat'))), graphql_name='pokemon_v2_pokemonstats', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonstat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonstat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonstat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonstats_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonstat_aggregate'), graphql_name='pokemon_v2_pokemonstats_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonstat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonstat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonstat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemontypepasts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemontypepast'))), graphql_name='pokemon_v2_pokemontypepasts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontypepast_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontypepast_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemontypepast_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemontypepasts_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemontypepast_aggregate'), graphql_name='pokemon_v2_pokemontypepasts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontypepast_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontypepast_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemontypepast_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemontypes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemontype'))), graphql_name='pokemon_v2_pokemontypes', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontype_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontype_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemontype_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemontypes_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemontype_aggregate'), graphql_name='pokemon_v2_pokemontypes_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontype_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontype_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemontype_bool_exp, graphql_name='where', default=None)),
))
    )
    weight = sgqlc.types.Field(Int, graphql_name='weight')


class pokemon_v2_pokemon_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemon_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemon))), graphql_name='nodes')


class pokemon_v2_pokemon_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemon_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemon_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemon_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemon_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemon_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemon_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemon_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemon_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemon_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemon_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemon_variance_fields', graphql_name='variance')


class pokemon_v2_pokemon_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_experience', 'height', 'id', 'order', 'pokemon_species_id', 'weight')
    base_experience = sgqlc.types.Field(Float, graphql_name='base_experience')
    height = sgqlc.types.Field(Float, graphql_name='height')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')
    weight = sgqlc.types.Field(Float, graphql_name='weight')


class pokemon_v2_pokemon_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_experience', 'height', 'id', 'name', 'order', 'pokemon_species_id', 'weight')
    base_experience = sgqlc.types.Field(Int, graphql_name='base_experience')
    height = sgqlc.types.Field(Int, graphql_name='height')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')
    order = sgqlc.types.Field(Int, graphql_name='order')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')
    weight = sgqlc.types.Field(Int, graphql_name='weight')


class pokemon_v2_pokemon_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_experience', 'height', 'id', 'name', 'order', 'pokemon_species_id', 'weight')
    base_experience = sgqlc.types.Field(Int, graphql_name='base_experience')
    height = sgqlc.types.Field(Int, graphql_name='height')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')
    order = sgqlc.types.Field(Int, graphql_name='order')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')
    weight = sgqlc.types.Field(Int, graphql_name='weight')


class pokemon_v2_pokemon_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_experience', 'height', 'id', 'order', 'pokemon_species_id', 'weight')
    base_experience = sgqlc.types.Field(Float, graphql_name='base_experience')
    height = sgqlc.types.Field(Float, graphql_name='height')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')
    weight = sgqlc.types.Field(Float, graphql_name='weight')


class pokemon_v2_pokemon_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_experience', 'height', 'id', 'order', 'pokemon_species_id', 'weight')
    base_experience = sgqlc.types.Field(Float, graphql_name='base_experience')
    height = sgqlc.types.Field(Float, graphql_name='height')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')
    weight = sgqlc.types.Field(Float, graphql_name='weight')


class pokemon_v2_pokemon_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_experience', 'height', 'id', 'order', 'pokemon_species_id', 'weight')
    base_experience = sgqlc.types.Field(Float, graphql_name='base_experience')
    height = sgqlc.types.Field(Float, graphql_name='height')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')
    weight = sgqlc.types.Field(Float, graphql_name='weight')


class pokemon_v2_pokemon_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_experience', 'height', 'id', 'order', 'pokemon_species_id', 'weight')
    base_experience = sgqlc.types.Field(Int, graphql_name='base_experience')
    height = sgqlc.types.Field(Int, graphql_name='height')
    id = sgqlc.types.Field(Int, graphql_name='id')
    order = sgqlc.types.Field(Int, graphql_name='order')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')
    weight = sgqlc.types.Field(Int, graphql_name='weight')


class pokemon_v2_pokemon_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_experience', 'height', 'id', 'order', 'pokemon_species_id', 'weight')
    base_experience = sgqlc.types.Field(Float, graphql_name='base_experience')
    height = sgqlc.types.Field(Float, graphql_name='height')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')
    weight = sgqlc.types.Field(Float, graphql_name='weight')


class pokemon_v2_pokemon_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_experience', 'height', 'id', 'order', 'pokemon_species_id', 'weight')
    base_experience = sgqlc.types.Field(Float, graphql_name='base_experience')
    height = sgqlc.types.Field(Float, graphql_name='height')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')
    weight = sgqlc.types.Field(Float, graphql_name='weight')


class pokemon_v2_pokemon_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_experience', 'height', 'id', 'order', 'pokemon_species_id', 'weight')
    base_experience = sgqlc.types.Field(Float, graphql_name='base_experience')
    height = sgqlc.types.Field(Float, graphql_name='height')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')
    weight = sgqlc.types.Field(Float, graphql_name='weight')


class pokemon_v2_pokemonability(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'is_hidden', 'pokemon_id', 'pokemon_v2_ability', 'pokemon_v2_pokemon', 'slot')
    ability_id = sgqlc.types.Field(Int, graphql_name='ability_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    is_hidden = sgqlc.types.Field(sgqlc.types.non_null(Boolean), graphql_name='is_hidden')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    pokemon_v2_ability = sgqlc.types.Field('pokemon_v2_ability', graphql_name='pokemon_v2_ability')
    pokemon_v2_pokemon = sgqlc.types.Field('pokemon_v2_pokemon', graphql_name='pokemon_v2_pokemon')
    slot = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='slot')


class pokemon_v2_pokemonability_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemonability_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonability))), graphql_name='nodes')


class pokemon_v2_pokemonability_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonability_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonability_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemonability_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonability_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonability_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonability_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonability_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonability_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonability_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonability_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonability_variance_fields', graphql_name='variance')


class pokemon_v2_pokemonability_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'pokemon_id', 'slot')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')


class pokemon_v2_pokemonability_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'pokemon_id', 'slot')
    ability_id = sgqlc.types.Field(Int, graphql_name='ability_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Int, graphql_name='slot')


class pokemon_v2_pokemonability_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'pokemon_id', 'slot')
    ability_id = sgqlc.types.Field(Int, graphql_name='ability_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Int, graphql_name='slot')


class pokemon_v2_pokemonability_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'pokemon_id', 'slot')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')


class pokemon_v2_pokemonability_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'pokemon_id', 'slot')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')


class pokemon_v2_pokemonability_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'pokemon_id', 'slot')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')


class pokemon_v2_pokemonability_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'pokemon_id', 'slot')
    ability_id = sgqlc.types.Field(Int, graphql_name='ability_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Int, graphql_name='slot')


class pokemon_v2_pokemonability_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'pokemon_id', 'slot')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')


class pokemon_v2_pokemonability_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'pokemon_id', 'slot')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')


class pokemon_v2_pokemonability_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('ability_id', 'id', 'pokemon_id', 'slot')
    ability_id = sgqlc.types.Field(Float, graphql_name='ability_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')


class pokemon_v2_pokemoncolor(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_pokemoncolornames', 'pokemon_v2_pokemoncolornames_aggregate', 'pokemon_v2_pokemonspecies', 'pokemon_v2_pokemonspecies_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_pokemoncolornames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemoncolorname'))), graphql_name='pokemon_v2_pokemoncolornames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolorname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolorname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemoncolorname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemoncolornames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemoncolorname_aggregate'), graphql_name='pokemon_v2_pokemoncolornames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolorname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolorname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemoncolorname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspecies = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspecies'))), graphql_name='pokemon_v2_pokemonspecies', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspecies_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspecies_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonspecies_aggregate'), graphql_name='pokemon_v2_pokemonspecies_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspecies_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_pokemoncolor_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemoncolor_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolor))), graphql_name='nodes')


class pokemon_v2_pokemoncolor_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemoncolor_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolor_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemoncolor_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemoncolor_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemoncolor_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemoncolor_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemoncolor_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemoncolor_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemoncolor_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemoncolor_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemoncolor_variance_fields', graphql_name='variance')


class pokemon_v2_pokemoncolor_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokemoncolor_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_pokemoncolor_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_pokemoncolor_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokemoncolor_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokemoncolor_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokemoncolor_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_pokemoncolor_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokemoncolor_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokemoncolor_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokemoncolorname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_color_id', 'pokemon_v2_language', 'pokemon_v2_pokemoncolor')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_color_id = sgqlc.types.Field(Int, graphql_name='pokemon_color_id')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_pokemoncolor = sgqlc.types.Field('pokemon_v2_pokemoncolor', graphql_name='pokemon_v2_pokemoncolor')


class pokemon_v2_pokemoncolorname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemoncolorname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolorname))), graphql_name='nodes')


class pokemon_v2_pokemoncolorname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemoncolorname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolorname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemoncolorname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemoncolorname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemoncolorname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemoncolorname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemoncolorname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemoncolorname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemoncolorname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemoncolorname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemoncolorname_variance_fields', graphql_name='variance')


class pokemon_v2_pokemoncolorname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_color_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_color_id = sgqlc.types.Field(Float, graphql_name='pokemon_color_id')


class pokemon_v2_pokemoncolorname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_color_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    pokemon_color_id = sgqlc.types.Field(Int, graphql_name='pokemon_color_id')


class pokemon_v2_pokemoncolorname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_color_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    pokemon_color_id = sgqlc.types.Field(Int, graphql_name='pokemon_color_id')


class pokemon_v2_pokemoncolorname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_color_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_color_id = sgqlc.types.Field(Float, graphql_name='pokemon_color_id')


class pokemon_v2_pokemoncolorname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_color_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_color_id = sgqlc.types.Field(Float, graphql_name='pokemon_color_id')


class pokemon_v2_pokemoncolorname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_color_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_color_id = sgqlc.types.Field(Float, graphql_name='pokemon_color_id')


class pokemon_v2_pokemoncolorname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_color_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_color_id = sgqlc.types.Field(Int, graphql_name='pokemon_color_id')


class pokemon_v2_pokemoncolorname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_color_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_color_id = sgqlc.types.Field(Float, graphql_name='pokemon_color_id')


class pokemon_v2_pokemoncolorname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_color_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_color_id = sgqlc.types.Field(Float, graphql_name='pokemon_color_id')


class pokemon_v2_pokemoncolorname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_color_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_color_id = sgqlc.types.Field(Float, graphql_name='pokemon_color_id')


class pokemon_v2_pokemondexnumber(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id', 'pokemon_v2_pokedex', 'pokemon_v2_pokemonspecy')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokedex_id = sgqlc.types.Field(Int, graphql_name='pokedex_id')
    pokedex_number = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='pokedex_number')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')
    pokemon_v2_pokedex = sgqlc.types.Field('pokemon_v2_pokedex', graphql_name='pokemon_v2_pokedex')
    pokemon_v2_pokemonspecy = sgqlc.types.Field('pokemon_v2_pokemonspecies', graphql_name='pokemon_v2_pokemonspecy')


class pokemon_v2_pokemondexnumber_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemondexnumber_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemondexnumber))), graphql_name='nodes')


class pokemon_v2_pokemondexnumber_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemondexnumber_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemondexnumber_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemondexnumber_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemondexnumber_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemondexnumber_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemondexnumber_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemondexnumber_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemondexnumber_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemondexnumber_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemondexnumber_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemondexnumber_variance_fields', graphql_name='variance')


class pokemon_v2_pokemondexnumber_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')
    pokedex_number = sgqlc.types.Field(Float, graphql_name='pokedex_number')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemondexnumber_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokedex_id = sgqlc.types.Field(Int, graphql_name='pokedex_id')
    pokedex_number = sgqlc.types.Field(Int, graphql_name='pokedex_number')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')


class pokemon_v2_pokemondexnumber_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokedex_id = sgqlc.types.Field(Int, graphql_name='pokedex_id')
    pokedex_number = sgqlc.types.Field(Int, graphql_name='pokedex_number')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')


class pokemon_v2_pokemondexnumber_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')
    pokedex_number = sgqlc.types.Field(Float, graphql_name='pokedex_number')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemondexnumber_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')
    pokedex_number = sgqlc.types.Field(Float, graphql_name='pokedex_number')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemondexnumber_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')
    pokedex_number = sgqlc.types.Field(Float, graphql_name='pokedex_number')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemondexnumber_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokedex_id = sgqlc.types.Field(Int, graphql_name='pokedex_id')
    pokedex_number = sgqlc.types.Field(Int, graphql_name='pokedex_number')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')


class pokemon_v2_pokemondexnumber_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')
    pokedex_number = sgqlc.types.Field(Float, graphql_name='pokedex_number')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemondexnumber_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')
    pokedex_number = sgqlc.types.Field(Float, graphql_name='pokedex_number')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemondexnumber_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokedex_id', 'pokedex_number', 'pokemon_species_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokedex_id = sgqlc.types.Field(Float, graphql_name='pokedex_id')
    pokedex_number = sgqlc.types.Field(Float, graphql_name='pokedex_number')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonegggroup(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'pokemon_species_id', 'pokemon_v2_egggroup', 'pokemon_v2_pokemonspecy')
    egg_group_id = sgqlc.types.Field(Int, graphql_name='egg_group_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')
    pokemon_v2_egggroup = sgqlc.types.Field('pokemon_v2_egggroup', graphql_name='pokemon_v2_egggroup')
    pokemon_v2_pokemonspecy = sgqlc.types.Field('pokemon_v2_pokemonspecies', graphql_name='pokemon_v2_pokemonspecy')


class pokemon_v2_pokemonegggroup_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemonegggroup_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonegggroup))), graphql_name='nodes')


class pokemon_v2_pokemonegggroup_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonegggroup_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonegggroup_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemonegggroup_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonegggroup_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonegggroup_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonegggroup_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonegggroup_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonegggroup_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonegggroup_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonegggroup_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonegggroup_variance_fields', graphql_name='variance')


class pokemon_v2_pokemonegggroup_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'pokemon_species_id')
    egg_group_id = sgqlc.types.Field(Float, graphql_name='egg_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonegggroup_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'pokemon_species_id')
    egg_group_id = sgqlc.types.Field(Int, graphql_name='egg_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonegggroup_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'pokemon_species_id')
    egg_group_id = sgqlc.types.Field(Int, graphql_name='egg_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonegggroup_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'pokemon_species_id')
    egg_group_id = sgqlc.types.Field(Float, graphql_name='egg_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonegggroup_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'pokemon_species_id')
    egg_group_id = sgqlc.types.Field(Float, graphql_name='egg_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonegggroup_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'pokemon_species_id')
    egg_group_id = sgqlc.types.Field(Float, graphql_name='egg_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonegggroup_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'pokemon_species_id')
    egg_group_id = sgqlc.types.Field(Int, graphql_name='egg_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonegggroup_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'pokemon_species_id')
    egg_group_id = sgqlc.types.Field(Float, graphql_name='egg_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonegggroup_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'pokemon_species_id')
    egg_group_id = sgqlc.types.Field(Float, graphql_name='egg_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonegggroup_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('egg_group_id', 'id', 'pokemon_species_id')
    egg_group_id = sgqlc.types.Field(Float, graphql_name='egg_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonevolution(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'needs_overworld_rain', 'party_species_id', 'party_type_id', 'pokemon_v2_item_by_held_item_id', 'pokemon_v2_pokemonspecy_by_party_species_id', 'pokemon_v2_pokemonspecy_by_trade_species_id', 'pokemon_v2_type_by_party_type_id', 'pokemon_v2_evolutiontrigger', 'pokemon_v2_gender', 'pokemon_v2_item', 'pokemon_v2_location', 'pokemon_v2_move', 'pokemon_v2_pokemonspecy', 'pokemon_v2_type', 'relative_physical_stats', 'time_of_day', 'trade_species_id', 'turn_upside_down')
    evolution_item_id = sgqlc.types.Field(Int, graphql_name='evolution_item_id')
    evolution_trigger_id = sgqlc.types.Field(Int, graphql_name='evolution_trigger_id')
    evolved_species_id = sgqlc.types.Field(Int, graphql_name='evolved_species_id')
    gender_id = sgqlc.types.Field(Int, graphql_name='gender_id')
    held_item_id = sgqlc.types.Field(Int, graphql_name='held_item_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    known_move_id = sgqlc.types.Field(Int, graphql_name='known_move_id')
    known_move_type_id = sgqlc.types.Field(Int, graphql_name='known_move_type_id')
    location_id = sgqlc.types.Field(Int, graphql_name='location_id')
    min_affection = sgqlc.types.Field(Int, graphql_name='min_affection')
    min_beauty = sgqlc.types.Field(Int, graphql_name='min_beauty')
    min_happiness = sgqlc.types.Field(Int, graphql_name='min_happiness')
    min_level = sgqlc.types.Field(Int, graphql_name='min_level')
    needs_overworld_rain = sgqlc.types.Field(sgqlc.types.non_null(Boolean), graphql_name='needs_overworld_rain')
    party_species_id = sgqlc.types.Field(Int, graphql_name='party_species_id')
    party_type_id = sgqlc.types.Field(Int, graphql_name='party_type_id')
    pokemon_v2_item_by_held_item_id = sgqlc.types.Field('pokemon_v2_item', graphql_name='pokemonV2ItemByHeldItemId')
    pokemon_v2_pokemonspecy_by_party_species_id = sgqlc.types.Field('pokemon_v2_pokemonspecies', graphql_name='pokemonV2PokemonspecyByPartySpeciesId')
    pokemon_v2_pokemonspecy_by_trade_species_id = sgqlc.types.Field('pokemon_v2_pokemonspecies', graphql_name='pokemonV2PokemonspecyByTradeSpeciesId')
    pokemon_v2_type_by_party_type_id = sgqlc.types.Field('pokemon_v2_type', graphql_name='pokemonV2TypeByPartyTypeId')
    pokemon_v2_evolutiontrigger = sgqlc.types.Field('pokemon_v2_evolutiontrigger', graphql_name='pokemon_v2_evolutiontrigger')
    pokemon_v2_gender = sgqlc.types.Field('pokemon_v2_gender', graphql_name='pokemon_v2_gender')
    pokemon_v2_item = sgqlc.types.Field('pokemon_v2_item', graphql_name='pokemon_v2_item')
    pokemon_v2_location = sgqlc.types.Field('pokemon_v2_location', graphql_name='pokemon_v2_location')
    pokemon_v2_move = sgqlc.types.Field('pokemon_v2_move', graphql_name='pokemon_v2_move')
    pokemon_v2_pokemonspecy = sgqlc.types.Field('pokemon_v2_pokemonspecies', graphql_name='pokemon_v2_pokemonspecy')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type', graphql_name='pokemon_v2_type')
    relative_physical_stats = sgqlc.types.Field(Int, graphql_name='relative_physical_stats')
    time_of_day = sgqlc.types.Field(String, graphql_name='time_of_day')
    trade_species_id = sgqlc.types.Field(Int, graphql_name='trade_species_id')
    turn_upside_down = sgqlc.types.Field(sgqlc.types.non_null(Boolean), graphql_name='turn_upside_down')


class pokemon_v2_pokemonevolution_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemonevolution_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution))), graphql_name='nodes')


class pokemon_v2_pokemonevolution_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonevolution_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemonevolution_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonevolution_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonevolution_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonevolution_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonevolution_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonevolution_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonevolution_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonevolution_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonevolution_variance_fields', graphql_name='variance')


class pokemon_v2_pokemonevolution_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'party_species_id', 'party_type_id', 'relative_physical_stats', 'trade_species_id')
    evolution_item_id = sgqlc.types.Field(Float, graphql_name='evolution_item_id')
    evolution_trigger_id = sgqlc.types.Field(Float, graphql_name='evolution_trigger_id')
    evolved_species_id = sgqlc.types.Field(Float, graphql_name='evolved_species_id')
    gender_id = sgqlc.types.Field(Float, graphql_name='gender_id')
    held_item_id = sgqlc.types.Field(Float, graphql_name='held_item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    known_move_id = sgqlc.types.Field(Float, graphql_name='known_move_id')
    known_move_type_id = sgqlc.types.Field(Float, graphql_name='known_move_type_id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')
    min_affection = sgqlc.types.Field(Float, graphql_name='min_affection')
    min_beauty = sgqlc.types.Field(Float, graphql_name='min_beauty')
    min_happiness = sgqlc.types.Field(Float, graphql_name='min_happiness')
    min_level = sgqlc.types.Field(Float, graphql_name='min_level')
    party_species_id = sgqlc.types.Field(Float, graphql_name='party_species_id')
    party_type_id = sgqlc.types.Field(Float, graphql_name='party_type_id')
    relative_physical_stats = sgqlc.types.Field(Float, graphql_name='relative_physical_stats')
    trade_species_id = sgqlc.types.Field(Float, graphql_name='trade_species_id')


class pokemon_v2_pokemonevolution_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'party_species_id', 'party_type_id', 'relative_physical_stats', 'time_of_day', 'trade_species_id')
    evolution_item_id = sgqlc.types.Field(Int, graphql_name='evolution_item_id')
    evolution_trigger_id = sgqlc.types.Field(Int, graphql_name='evolution_trigger_id')
    evolved_species_id = sgqlc.types.Field(Int, graphql_name='evolved_species_id')
    gender_id = sgqlc.types.Field(Int, graphql_name='gender_id')
    held_item_id = sgqlc.types.Field(Int, graphql_name='held_item_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    known_move_id = sgqlc.types.Field(Int, graphql_name='known_move_id')
    known_move_type_id = sgqlc.types.Field(Int, graphql_name='known_move_type_id')
    location_id = sgqlc.types.Field(Int, graphql_name='location_id')
    min_affection = sgqlc.types.Field(Int, graphql_name='min_affection')
    min_beauty = sgqlc.types.Field(Int, graphql_name='min_beauty')
    min_happiness = sgqlc.types.Field(Int, graphql_name='min_happiness')
    min_level = sgqlc.types.Field(Int, graphql_name='min_level')
    party_species_id = sgqlc.types.Field(Int, graphql_name='party_species_id')
    party_type_id = sgqlc.types.Field(Int, graphql_name='party_type_id')
    relative_physical_stats = sgqlc.types.Field(Int, graphql_name='relative_physical_stats')
    time_of_day = sgqlc.types.Field(String, graphql_name='time_of_day')
    trade_species_id = sgqlc.types.Field(Int, graphql_name='trade_species_id')


class pokemon_v2_pokemonevolution_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'party_species_id', 'party_type_id', 'relative_physical_stats', 'time_of_day', 'trade_species_id')
    evolution_item_id = sgqlc.types.Field(Int, graphql_name='evolution_item_id')
    evolution_trigger_id = sgqlc.types.Field(Int, graphql_name='evolution_trigger_id')
    evolved_species_id = sgqlc.types.Field(Int, graphql_name='evolved_species_id')
    gender_id = sgqlc.types.Field(Int, graphql_name='gender_id')
    held_item_id = sgqlc.types.Field(Int, graphql_name='held_item_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    known_move_id = sgqlc.types.Field(Int, graphql_name='known_move_id')
    known_move_type_id = sgqlc.types.Field(Int, graphql_name='known_move_type_id')
    location_id = sgqlc.types.Field(Int, graphql_name='location_id')
    min_affection = sgqlc.types.Field(Int, graphql_name='min_affection')
    min_beauty = sgqlc.types.Field(Int, graphql_name='min_beauty')
    min_happiness = sgqlc.types.Field(Int, graphql_name='min_happiness')
    min_level = sgqlc.types.Field(Int, graphql_name='min_level')
    party_species_id = sgqlc.types.Field(Int, graphql_name='party_species_id')
    party_type_id = sgqlc.types.Field(Int, graphql_name='party_type_id')
    relative_physical_stats = sgqlc.types.Field(Int, graphql_name='relative_physical_stats')
    time_of_day = sgqlc.types.Field(String, graphql_name='time_of_day')
    trade_species_id = sgqlc.types.Field(Int, graphql_name='trade_species_id')


class pokemon_v2_pokemonevolution_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'party_species_id', 'party_type_id', 'relative_physical_stats', 'trade_species_id')
    evolution_item_id = sgqlc.types.Field(Float, graphql_name='evolution_item_id')
    evolution_trigger_id = sgqlc.types.Field(Float, graphql_name='evolution_trigger_id')
    evolved_species_id = sgqlc.types.Field(Float, graphql_name='evolved_species_id')
    gender_id = sgqlc.types.Field(Float, graphql_name='gender_id')
    held_item_id = sgqlc.types.Field(Float, graphql_name='held_item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    known_move_id = sgqlc.types.Field(Float, graphql_name='known_move_id')
    known_move_type_id = sgqlc.types.Field(Float, graphql_name='known_move_type_id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')
    min_affection = sgqlc.types.Field(Float, graphql_name='min_affection')
    min_beauty = sgqlc.types.Field(Float, graphql_name='min_beauty')
    min_happiness = sgqlc.types.Field(Float, graphql_name='min_happiness')
    min_level = sgqlc.types.Field(Float, graphql_name='min_level')
    party_species_id = sgqlc.types.Field(Float, graphql_name='party_species_id')
    party_type_id = sgqlc.types.Field(Float, graphql_name='party_type_id')
    relative_physical_stats = sgqlc.types.Field(Float, graphql_name='relative_physical_stats')
    trade_species_id = sgqlc.types.Field(Float, graphql_name='trade_species_id')


class pokemon_v2_pokemonevolution_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'party_species_id', 'party_type_id', 'relative_physical_stats', 'trade_species_id')
    evolution_item_id = sgqlc.types.Field(Float, graphql_name='evolution_item_id')
    evolution_trigger_id = sgqlc.types.Field(Float, graphql_name='evolution_trigger_id')
    evolved_species_id = sgqlc.types.Field(Float, graphql_name='evolved_species_id')
    gender_id = sgqlc.types.Field(Float, graphql_name='gender_id')
    held_item_id = sgqlc.types.Field(Float, graphql_name='held_item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    known_move_id = sgqlc.types.Field(Float, graphql_name='known_move_id')
    known_move_type_id = sgqlc.types.Field(Float, graphql_name='known_move_type_id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')
    min_affection = sgqlc.types.Field(Float, graphql_name='min_affection')
    min_beauty = sgqlc.types.Field(Float, graphql_name='min_beauty')
    min_happiness = sgqlc.types.Field(Float, graphql_name='min_happiness')
    min_level = sgqlc.types.Field(Float, graphql_name='min_level')
    party_species_id = sgqlc.types.Field(Float, graphql_name='party_species_id')
    party_type_id = sgqlc.types.Field(Float, graphql_name='party_type_id')
    relative_physical_stats = sgqlc.types.Field(Float, graphql_name='relative_physical_stats')
    trade_species_id = sgqlc.types.Field(Float, graphql_name='trade_species_id')


class pokemon_v2_pokemonevolution_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'party_species_id', 'party_type_id', 'relative_physical_stats', 'trade_species_id')
    evolution_item_id = sgqlc.types.Field(Float, graphql_name='evolution_item_id')
    evolution_trigger_id = sgqlc.types.Field(Float, graphql_name='evolution_trigger_id')
    evolved_species_id = sgqlc.types.Field(Float, graphql_name='evolved_species_id')
    gender_id = sgqlc.types.Field(Float, graphql_name='gender_id')
    held_item_id = sgqlc.types.Field(Float, graphql_name='held_item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    known_move_id = sgqlc.types.Field(Float, graphql_name='known_move_id')
    known_move_type_id = sgqlc.types.Field(Float, graphql_name='known_move_type_id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')
    min_affection = sgqlc.types.Field(Float, graphql_name='min_affection')
    min_beauty = sgqlc.types.Field(Float, graphql_name='min_beauty')
    min_happiness = sgqlc.types.Field(Float, graphql_name='min_happiness')
    min_level = sgqlc.types.Field(Float, graphql_name='min_level')
    party_species_id = sgqlc.types.Field(Float, graphql_name='party_species_id')
    party_type_id = sgqlc.types.Field(Float, graphql_name='party_type_id')
    relative_physical_stats = sgqlc.types.Field(Float, graphql_name='relative_physical_stats')
    trade_species_id = sgqlc.types.Field(Float, graphql_name='trade_species_id')


class pokemon_v2_pokemonevolution_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'party_species_id', 'party_type_id', 'relative_physical_stats', 'trade_species_id')
    evolution_item_id = sgqlc.types.Field(Int, graphql_name='evolution_item_id')
    evolution_trigger_id = sgqlc.types.Field(Int, graphql_name='evolution_trigger_id')
    evolved_species_id = sgqlc.types.Field(Int, graphql_name='evolved_species_id')
    gender_id = sgqlc.types.Field(Int, graphql_name='gender_id')
    held_item_id = sgqlc.types.Field(Int, graphql_name='held_item_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    known_move_id = sgqlc.types.Field(Int, graphql_name='known_move_id')
    known_move_type_id = sgqlc.types.Field(Int, graphql_name='known_move_type_id')
    location_id = sgqlc.types.Field(Int, graphql_name='location_id')
    min_affection = sgqlc.types.Field(Int, graphql_name='min_affection')
    min_beauty = sgqlc.types.Field(Int, graphql_name='min_beauty')
    min_happiness = sgqlc.types.Field(Int, graphql_name='min_happiness')
    min_level = sgqlc.types.Field(Int, graphql_name='min_level')
    party_species_id = sgqlc.types.Field(Int, graphql_name='party_species_id')
    party_type_id = sgqlc.types.Field(Int, graphql_name='party_type_id')
    relative_physical_stats = sgqlc.types.Field(Int, graphql_name='relative_physical_stats')
    trade_species_id = sgqlc.types.Field(Int, graphql_name='trade_species_id')


class pokemon_v2_pokemonevolution_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'party_species_id', 'party_type_id', 'relative_physical_stats', 'trade_species_id')
    evolution_item_id = sgqlc.types.Field(Float, graphql_name='evolution_item_id')
    evolution_trigger_id = sgqlc.types.Field(Float, graphql_name='evolution_trigger_id')
    evolved_species_id = sgqlc.types.Field(Float, graphql_name='evolved_species_id')
    gender_id = sgqlc.types.Field(Float, graphql_name='gender_id')
    held_item_id = sgqlc.types.Field(Float, graphql_name='held_item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    known_move_id = sgqlc.types.Field(Float, graphql_name='known_move_id')
    known_move_type_id = sgqlc.types.Field(Float, graphql_name='known_move_type_id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')
    min_affection = sgqlc.types.Field(Float, graphql_name='min_affection')
    min_beauty = sgqlc.types.Field(Float, graphql_name='min_beauty')
    min_happiness = sgqlc.types.Field(Float, graphql_name='min_happiness')
    min_level = sgqlc.types.Field(Float, graphql_name='min_level')
    party_species_id = sgqlc.types.Field(Float, graphql_name='party_species_id')
    party_type_id = sgqlc.types.Field(Float, graphql_name='party_type_id')
    relative_physical_stats = sgqlc.types.Field(Float, graphql_name='relative_physical_stats')
    trade_species_id = sgqlc.types.Field(Float, graphql_name='trade_species_id')


class pokemon_v2_pokemonevolution_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'party_species_id', 'party_type_id', 'relative_physical_stats', 'trade_species_id')
    evolution_item_id = sgqlc.types.Field(Float, graphql_name='evolution_item_id')
    evolution_trigger_id = sgqlc.types.Field(Float, graphql_name='evolution_trigger_id')
    evolved_species_id = sgqlc.types.Field(Float, graphql_name='evolved_species_id')
    gender_id = sgqlc.types.Field(Float, graphql_name='gender_id')
    held_item_id = sgqlc.types.Field(Float, graphql_name='held_item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    known_move_id = sgqlc.types.Field(Float, graphql_name='known_move_id')
    known_move_type_id = sgqlc.types.Field(Float, graphql_name='known_move_type_id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')
    min_affection = sgqlc.types.Field(Float, graphql_name='min_affection')
    min_beauty = sgqlc.types.Field(Float, graphql_name='min_beauty')
    min_happiness = sgqlc.types.Field(Float, graphql_name='min_happiness')
    min_level = sgqlc.types.Field(Float, graphql_name='min_level')
    party_species_id = sgqlc.types.Field(Float, graphql_name='party_species_id')
    party_type_id = sgqlc.types.Field(Float, graphql_name='party_type_id')
    relative_physical_stats = sgqlc.types.Field(Float, graphql_name='relative_physical_stats')
    trade_species_id = sgqlc.types.Field(Float, graphql_name='trade_species_id')


class pokemon_v2_pokemonevolution_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('evolution_item_id', 'evolution_trigger_id', 'evolved_species_id', 'gender_id', 'held_item_id', 'id', 'known_move_id', 'known_move_type_id', 'location_id', 'min_affection', 'min_beauty', 'min_happiness', 'min_level', 'party_species_id', 'party_type_id', 'relative_physical_stats', 'trade_species_id')
    evolution_item_id = sgqlc.types.Field(Float, graphql_name='evolution_item_id')
    evolution_trigger_id = sgqlc.types.Field(Float, graphql_name='evolution_trigger_id')
    evolved_species_id = sgqlc.types.Field(Float, graphql_name='evolved_species_id')
    gender_id = sgqlc.types.Field(Float, graphql_name='gender_id')
    held_item_id = sgqlc.types.Field(Float, graphql_name='held_item_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    known_move_id = sgqlc.types.Field(Float, graphql_name='known_move_id')
    known_move_type_id = sgqlc.types.Field(Float, graphql_name='known_move_type_id')
    location_id = sgqlc.types.Field(Float, graphql_name='location_id')
    min_affection = sgqlc.types.Field(Float, graphql_name='min_affection')
    min_beauty = sgqlc.types.Field(Float, graphql_name='min_beauty')
    min_happiness = sgqlc.types.Field(Float, graphql_name='min_happiness')
    min_level = sgqlc.types.Field(Float, graphql_name='min_level')
    party_species_id = sgqlc.types.Field(Float, graphql_name='party_species_id')
    party_type_id = sgqlc.types.Field(Float, graphql_name='party_type_id')
    relative_physical_stats = sgqlc.types.Field(Float, graphql_name='relative_physical_stats')
    trade_species_id = sgqlc.types.Field(Float, graphql_name='trade_species_id')


class pokemon_v2_pokemonform(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('form_name', 'form_order', 'id', 'is_battle_only', 'is_default', 'is_mega', 'name', 'order', 'pokemon_id', 'pokemon_v2_pokemon', 'pokemon_v2_pokemonformgenerations', 'pokemon_v2_pokemonformgenerations_aggregate', 'pokemon_v2_pokemonformnames', 'pokemon_v2_pokemonformnames_aggregate', 'pokemon_v2_pokemonformsprites', 'pokemon_v2_pokemonformsprites_aggregate', 'pokemon_v2_pokemonformtypes', 'pokemon_v2_pokemonformtypes_aggregate', 'pokemon_v2_versiongroup', 'version_group_id')
    form_name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='form_name')
    form_order = sgqlc.types.Field(Int, graphql_name='form_order')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    is_battle_only = sgqlc.types.Field(sgqlc.types.non_null(Boolean), graphql_name='is_battle_only')
    is_default = sgqlc.types.Field(sgqlc.types.non_null(Boolean), graphql_name='is_default')
    is_mega = sgqlc.types.Field(sgqlc.types.non_null(Boolean), graphql_name='is_mega')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    order = sgqlc.types.Field(Int, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    pokemon_v2_pokemon = sgqlc.types.Field('pokemon_v2_pokemon', graphql_name='pokemon_v2_pokemon')
    pokemon_v2_pokemonformgenerations = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonformgeneration'))), graphql_name='pokemon_v2_pokemonformgenerations', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformgeneration_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformgeneration_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformgeneration_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformgenerations_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonformgeneration_aggregate'), graphql_name='pokemon_v2_pokemonformgenerations_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformgeneration_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformgeneration_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformgeneration_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonformname'))), graphql_name='pokemon_v2_pokemonformnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonformname_aggregate'), graphql_name='pokemon_v2_pokemonformnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformsprites = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonformsprites'))), graphql_name='pokemon_v2_pokemonformsprites', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformsprites_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformsprites_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformsprites_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformsprites_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonformsprites_aggregate'), graphql_name='pokemon_v2_pokemonformsprites_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformsprites_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformsprites_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformsprites_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformtypes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonformtype'))), graphql_name='pokemon_v2_pokemonformtypes', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformtype_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformtype_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformtype_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformtypes_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonformtype_aggregate'), graphql_name='pokemon_v2_pokemonformtypes_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformtype_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformtype_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformtype_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_pokemonform_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemonform_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonform))), graphql_name='nodes')


class pokemon_v2_pokemonform_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonform_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonform_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemonform_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonform_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonform_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonform_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonform_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonform_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonform_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonform_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonform_variance_fields', graphql_name='variance')


class pokemon_v2_pokemonform_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('form_order', 'id', 'order', 'pokemon_id', 'version_group_id')
    form_order = sgqlc.types.Field(Float, graphql_name='form_order')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_pokemonform_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('form_name', 'form_order', 'id', 'name', 'order', 'pokemon_id', 'version_group_id')
    form_name = sgqlc.types.Field(String, graphql_name='form_name')
    form_order = sgqlc.types.Field(Int, graphql_name='form_order')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')
    order = sgqlc.types.Field(Int, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_pokemonform_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('form_name', 'form_order', 'id', 'name', 'order', 'pokemon_id', 'version_group_id')
    form_name = sgqlc.types.Field(String, graphql_name='form_name')
    form_order = sgqlc.types.Field(Int, graphql_name='form_order')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')
    order = sgqlc.types.Field(Int, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_pokemonform_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('form_order', 'id', 'order', 'pokemon_id', 'version_group_id')
    form_order = sgqlc.types.Field(Float, graphql_name='form_order')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_pokemonform_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('form_order', 'id', 'order', 'pokemon_id', 'version_group_id')
    form_order = sgqlc.types.Field(Float, graphql_name='form_order')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_pokemonform_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('form_order', 'id', 'order', 'pokemon_id', 'version_group_id')
    form_order = sgqlc.types.Field(Float, graphql_name='form_order')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_pokemonform_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('form_order', 'id', 'order', 'pokemon_id', 'version_group_id')
    form_order = sgqlc.types.Field(Int, graphql_name='form_order')
    id = sgqlc.types.Field(Int, graphql_name='id')
    order = sgqlc.types.Field(Int, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_pokemonform_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('form_order', 'id', 'order', 'pokemon_id', 'version_group_id')
    form_order = sgqlc.types.Field(Float, graphql_name='form_order')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_pokemonform_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('form_order', 'id', 'order', 'pokemon_id', 'version_group_id')
    form_order = sgqlc.types.Field(Float, graphql_name='form_order')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_pokemonform_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('form_order', 'id', 'order', 'pokemon_id', 'version_group_id')
    form_order = sgqlc.types.Field(Float, graphql_name='form_order')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_pokemonformgeneration(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_form_id', 'pokemon_v2_generation', 'pokemon_v2_pokemonform')
    game_index = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='game_index')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Int, graphql_name='pokemon_form_id')
    pokemon_v2_generation = sgqlc.types.Field('pokemon_v2_generation', graphql_name='pokemon_v2_generation')
    pokemon_v2_pokemonform = sgqlc.types.Field('pokemon_v2_pokemonform', graphql_name='pokemon_v2_pokemonform')


class pokemon_v2_pokemonformgeneration_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformgeneration))), graphql_name='nodes')


class pokemon_v2_pokemonformgeneration_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformgeneration_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonformgeneration_variance_fields', graphql_name='variance')


class pokemon_v2_pokemonformgeneration_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_form_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformgeneration_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_form_id')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Int, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformgeneration_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_form_id')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Int, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformgeneration_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_form_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformgeneration_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_form_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformgeneration_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_form_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformgeneration_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_form_id')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Int, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformgeneration_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_form_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformgeneration_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_form_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformgeneration_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_form_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_form_id', 'pokemon_name', 'pokemon_v2_language', 'pokemon_v2_pokemonform')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_form_id = sgqlc.types.Field(Int, graphql_name='pokemon_form_id')
    pokemon_name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='pokemon_name')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_pokemonform = sgqlc.types.Field('pokemon_v2_pokemonform', graphql_name='pokemon_v2_pokemonform')


class pokemon_v2_pokemonformname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemonformname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformname))), graphql_name='nodes')


class pokemon_v2_pokemonformname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonformname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemonformname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonformname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonformname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonformname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonformname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonformname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonformname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonformname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonformname_variance_fields', graphql_name='variance')


class pokemon_v2_pokemonformname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_form_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_form_id', 'pokemon_name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    pokemon_form_id = sgqlc.types.Field(Int, graphql_name='pokemon_form_id')
    pokemon_name = sgqlc.types.Field(String, graphql_name='pokemon_name')


class pokemon_v2_pokemonformname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_form_id', 'pokemon_name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    pokemon_form_id = sgqlc.types.Field(Int, graphql_name='pokemon_form_id')
    pokemon_name = sgqlc.types.Field(String, graphql_name='pokemon_name')


class pokemon_v2_pokemonformname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_form_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_form_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_form_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_form_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_form_id = sgqlc.types.Field(Int, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_form_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_form_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_form_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformsprites(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'pokemon_v2_pokemonform', 'sprites')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Int, graphql_name='pokemon_form_id')
    pokemon_v2_pokemonform = sgqlc.types.Field('pokemon_v2_pokemonform', graphql_name='pokemon_v2_pokemonform')
    sprites = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='sprites')


class pokemon_v2_pokemonformsprites_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemonformsprites_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformsprites))), graphql_name='nodes')


class pokemon_v2_pokemonformsprites_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonformsprites_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformsprites_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemonformsprites_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonformsprites_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonformsprites_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonformsprites_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonformsprites_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonformsprites_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonformsprites_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonformsprites_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonformsprites_variance_fields', graphql_name='variance')


class pokemon_v2_pokemonformsprites_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformsprites_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'sprites')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Int, graphql_name='pokemon_form_id')
    sprites = sgqlc.types.Field(String, graphql_name='sprites')


class pokemon_v2_pokemonformsprites_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'sprites')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Int, graphql_name='pokemon_form_id')
    sprites = sgqlc.types.Field(String, graphql_name='sprites')


class pokemon_v2_pokemonformsprites_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformsprites_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformsprites_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformsprites_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Int, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformsprites_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformsprites_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformsprites_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')


class pokemon_v2_pokemonformtype(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'pokemon_v2_pokemonform', 'pokemon_v2_type', 'slot', 'type_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Int, graphql_name='pokemon_form_id')
    pokemon_v2_pokemonform = sgqlc.types.Field('pokemon_v2_pokemonform', graphql_name='pokemon_v2_pokemonform')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type', graphql_name='pokemon_v2_type')
    slot = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='slot')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_pokemonformtype_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemonformtype_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformtype))), graphql_name='nodes')


class pokemon_v2_pokemonformtype_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonformtype_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformtype_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemonformtype_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonformtype_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonformtype_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonformtype_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonformtype_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonformtype_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonformtype_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonformtype_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonformtype_variance_fields', graphql_name='variance')


class pokemon_v2_pokemonformtype_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'slot', 'type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_pokemonformtype_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'slot', 'type_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Int, graphql_name='pokemon_form_id')
    slot = sgqlc.types.Field(Int, graphql_name='slot')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_pokemonformtype_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'slot', 'type_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Int, graphql_name='pokemon_form_id')
    slot = sgqlc.types.Field(Int, graphql_name='slot')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_pokemonformtype_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'slot', 'type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_pokemonformtype_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'slot', 'type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_pokemonformtype_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'slot', 'type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_pokemonformtype_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'slot', 'type_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Int, graphql_name='pokemon_form_id')
    slot = sgqlc.types.Field(Int, graphql_name='slot')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_pokemonformtype_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'slot', 'type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_pokemonformtype_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'slot', 'type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_pokemonformtype_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_form_id', 'slot', 'type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_form_id = sgqlc.types.Field(Float, graphql_name='pokemon_form_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_pokemongameindex(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'pokemon_id', 'pokemon_v2_pokemon', 'pokemon_v2_version', 'version_id')
    game_index = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='game_index')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    pokemon_v2_pokemon = sgqlc.types.Field('pokemon_v2_pokemon', graphql_name='pokemon_v2_pokemon')
    pokemon_v2_version = sgqlc.types.Field('pokemon_v2_version', graphql_name='pokemon_v2_version')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_pokemongameindex_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemongameindex_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemongameindex))), graphql_name='nodes')


class pokemon_v2_pokemongameindex_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemongameindex_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemongameindex_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemongameindex_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemongameindex_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemongameindex_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemongameindex_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemongameindex_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemongameindex_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemongameindex_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemongameindex_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemongameindex_variance_fields', graphql_name='variance')


class pokemon_v2_pokemongameindex_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'pokemon_id', 'version_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_pokemongameindex_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'pokemon_id', 'version_id')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_pokemongameindex_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'pokemon_id', 'version_id')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_pokemongameindex_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'pokemon_id', 'version_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_pokemongameindex_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'pokemon_id', 'version_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_pokemongameindex_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'pokemon_id', 'version_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_pokemongameindex_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'pokemon_id', 'version_id')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_pokemongameindex_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'pokemon_id', 'version_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_pokemongameindex_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'pokemon_id', 'version_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_pokemongameindex_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'pokemon_id', 'version_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_pokemonhabitat(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_pokemonhabitatnames', 'pokemon_v2_pokemonhabitatnames_aggregate', 'pokemon_v2_pokemonspecies', 'pokemon_v2_pokemonspecies_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_pokemonhabitatnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonhabitatname'))), graphql_name='pokemon_v2_pokemonhabitatnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitatname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitatname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonhabitatname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonhabitatnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonhabitatname_aggregate'), graphql_name='pokemon_v2_pokemonhabitatnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitatname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitatname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonhabitatname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspecies = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspecies'))), graphql_name='pokemon_v2_pokemonspecies', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspecies_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspecies_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonspecies_aggregate'), graphql_name='pokemon_v2_pokemonspecies_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspecies_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_pokemonhabitat_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemonhabitat_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitat))), graphql_name='nodes')


class pokemon_v2_pokemonhabitat_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonhabitat_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitat_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemonhabitat_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonhabitat_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonhabitat_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonhabitat_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonhabitat_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonhabitat_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonhabitat_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonhabitat_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonhabitat_variance_fields', graphql_name='variance')


class pokemon_v2_pokemonhabitat_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokemonhabitat_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_pokemonhabitat_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_pokemonhabitat_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokemonhabitat_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokemonhabitat_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokemonhabitat_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_pokemonhabitat_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokemonhabitat_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokemonhabitat_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokemonhabitatname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_habitat_id', 'pokemon_v2_language', 'pokemon_v2_pokemonhabitat')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_habitat_id = sgqlc.types.Field(Int, graphql_name='pokemon_habitat_id')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_pokemonhabitat = sgqlc.types.Field('pokemon_v2_pokemonhabitat', graphql_name='pokemon_v2_pokemonhabitat')


class pokemon_v2_pokemonhabitatname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitatname))), graphql_name='nodes')


class pokemon_v2_pokemonhabitatname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitatname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonhabitatname_variance_fields', graphql_name='variance')


class pokemon_v2_pokemonhabitatname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_habitat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_habitat_id = sgqlc.types.Field(Float, graphql_name='pokemon_habitat_id')


class pokemon_v2_pokemonhabitatname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_habitat_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    pokemon_habitat_id = sgqlc.types.Field(Int, graphql_name='pokemon_habitat_id')


class pokemon_v2_pokemonhabitatname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_habitat_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    pokemon_habitat_id = sgqlc.types.Field(Int, graphql_name='pokemon_habitat_id')


class pokemon_v2_pokemonhabitatname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_habitat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_habitat_id = sgqlc.types.Field(Float, graphql_name='pokemon_habitat_id')


class pokemon_v2_pokemonhabitatname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_habitat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_habitat_id = sgqlc.types.Field(Float, graphql_name='pokemon_habitat_id')


class pokemon_v2_pokemonhabitatname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_habitat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_habitat_id = sgqlc.types.Field(Float, graphql_name='pokemon_habitat_id')


class pokemon_v2_pokemonhabitatname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_habitat_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_habitat_id = sgqlc.types.Field(Int, graphql_name='pokemon_habitat_id')


class pokemon_v2_pokemonhabitatname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_habitat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_habitat_id = sgqlc.types.Field(Float, graphql_name='pokemon_habitat_id')


class pokemon_v2_pokemonhabitatname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_habitat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_habitat_id = sgqlc.types.Field(Float, graphql_name='pokemon_habitat_id')


class pokemon_v2_pokemonhabitatname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_habitat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_habitat_id = sgqlc.types.Field(Float, graphql_name='pokemon_habitat_id')


class pokemon_v2_pokemonitem(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_id', 'pokemon_v2_item', 'pokemon_v2_pokemon', 'pokemon_v2_version', 'rarity', 'version_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    pokemon_v2_item = sgqlc.types.Field('pokemon_v2_item', graphql_name='pokemon_v2_item')
    pokemon_v2_pokemon = sgqlc.types.Field('pokemon_v2_pokemon', graphql_name='pokemon_v2_pokemon')
    pokemon_v2_version = sgqlc.types.Field('pokemon_v2_version', graphql_name='pokemon_v2_version')
    rarity = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='rarity')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_pokemonitem_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemonitem_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonitem))), graphql_name='nodes')


class pokemon_v2_pokemonitem_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonitem_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonitem_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemonitem_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonitem_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonitem_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonitem_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonitem_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonitem_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonitem_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonitem_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonitem_variance_fields', graphql_name='variance')


class pokemon_v2_pokemonitem_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_id', 'rarity', 'version_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    rarity = sgqlc.types.Field(Float, graphql_name='rarity')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_pokemonitem_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_id', 'rarity', 'version_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    rarity = sgqlc.types.Field(Int, graphql_name='rarity')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_pokemonitem_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_id', 'rarity', 'version_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    rarity = sgqlc.types.Field(Int, graphql_name='rarity')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_pokemonitem_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_id', 'rarity', 'version_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    rarity = sgqlc.types.Field(Float, graphql_name='rarity')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_pokemonitem_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_id', 'rarity', 'version_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    rarity = sgqlc.types.Field(Float, graphql_name='rarity')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_pokemonitem_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_id', 'rarity', 'version_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    rarity = sgqlc.types.Field(Float, graphql_name='rarity')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_pokemonitem_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_id', 'rarity', 'version_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    item_id = sgqlc.types.Field(Int, graphql_name='item_id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    rarity = sgqlc.types.Field(Int, graphql_name='rarity')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_pokemonitem_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_id', 'rarity', 'version_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    rarity = sgqlc.types.Field(Float, graphql_name='rarity')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_pokemonitem_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_id', 'rarity', 'version_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    rarity = sgqlc.types.Field(Float, graphql_name='rarity')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_pokemonitem_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'item_id', 'pokemon_id', 'rarity', 'version_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    item_id = sgqlc.types.Field(Float, graphql_name='item_id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    rarity = sgqlc.types.Field(Float, graphql_name='rarity')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_pokemonmove(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'pokemon_v2_move', 'pokemon_v2_movelearnmethod', 'pokemon_v2_pokemon', 'pokemon_v2_versiongroup', 'version_group_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    level = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='level')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    move_learn_method_id = sgqlc.types.Field(Int, graphql_name='move_learn_method_id')
    order = sgqlc.types.Field(Int, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    pokemon_v2_move = sgqlc.types.Field('pokemon_v2_move', graphql_name='pokemon_v2_move')
    pokemon_v2_movelearnmethod = sgqlc.types.Field('pokemon_v2_movelearnmethod', graphql_name='pokemon_v2_movelearnmethod')
    pokemon_v2_pokemon = sgqlc.types.Field('pokemon_v2_pokemon', graphql_name='pokemon_v2_pokemon')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_pokemonmove_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemonmove_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove))), graphql_name='nodes')


class pokemon_v2_pokemonmove_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonmove_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemonmove_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonmove_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonmove_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonmove_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonmove_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonmove_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonmove_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonmove_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonmove_variance_fields', graphql_name='variance')


class pokemon_v2_pokemonmove_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    level = sgqlc.types.Field(Float, graphql_name='level')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_pokemonmove_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'version_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    level = sgqlc.types.Field(Int, graphql_name='level')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    move_learn_method_id = sgqlc.types.Field(Int, graphql_name='move_learn_method_id')
    order = sgqlc.types.Field(Int, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_pokemonmove_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'version_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    level = sgqlc.types.Field(Int, graphql_name='level')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    move_learn_method_id = sgqlc.types.Field(Int, graphql_name='move_learn_method_id')
    order = sgqlc.types.Field(Int, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_pokemonmove_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    level = sgqlc.types.Field(Float, graphql_name='level')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_pokemonmove_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    level = sgqlc.types.Field(Float, graphql_name='level')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_pokemonmove_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    level = sgqlc.types.Field(Float, graphql_name='level')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_pokemonmove_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'version_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    level = sgqlc.types.Field(Int, graphql_name='level')
    move_id = sgqlc.types.Field(Int, graphql_name='move_id')
    move_learn_method_id = sgqlc.types.Field(Int, graphql_name='move_learn_method_id')
    order = sgqlc.types.Field(Int, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_pokemonmove_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    level = sgqlc.types.Field(Float, graphql_name='level')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_pokemonmove_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    level = sgqlc.types.Field(Float, graphql_name='level')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_pokemonmove_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'level', 'move_id', 'move_learn_method_id', 'order', 'pokemon_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    level = sgqlc.types.Field(Float, graphql_name='level')
    move_id = sgqlc.types.Field(Float, graphql_name='move_id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_pokemonshape(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_pokemonshapenames', 'pokemon_v2_pokemonshapenames_aggregate', 'pokemon_v2_pokemonspecies', 'pokemon_v2_pokemonspecies_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_pokemonshapenames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonshapename'))), graphql_name='pokemon_v2_pokemonshapenames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshapename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshapename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonshapename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonshapenames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonshapename_aggregate'), graphql_name='pokemon_v2_pokemonshapenames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshapename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshapename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonshapename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspecies = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspecies'))), graphql_name='pokemon_v2_pokemonspecies', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspecies_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspecies_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonspecies_aggregate'), graphql_name='pokemon_v2_pokemonspecies_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspecies_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_pokemonshape_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemonshape_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshape))), graphql_name='nodes')


class pokemon_v2_pokemonshape_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonshape_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshape_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemonshape_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonshape_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonshape_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonshape_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonshape_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonshape_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonshape_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonshape_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonshape_variance_fields', graphql_name='variance')


class pokemon_v2_pokemonshape_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokemonshape_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_pokemonshape_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_pokemonshape_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokemonshape_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokemonshape_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokemonshape_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_pokemonshape_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokemonshape_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokemonshape_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_pokemonshapename(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('awesome_name', 'id', 'language_id', 'name', 'pokemon_shape_id', 'pokemon_v2_language', 'pokemon_v2_pokemonshape')
    awesome_name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='awesome_name')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_shape_id = sgqlc.types.Field(Int, graphql_name='pokemon_shape_id')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_pokemonshape = sgqlc.types.Field('pokemon_v2_pokemonshape', graphql_name='pokemon_v2_pokemonshape')


class pokemon_v2_pokemonshapename_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemonshapename_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshapename))), graphql_name='nodes')


class pokemon_v2_pokemonshapename_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonshapename_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshapename_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemonshapename_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonshapename_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonshapename_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonshapename_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonshapename_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonshapename_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonshapename_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonshapename_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonshapename_variance_fields', graphql_name='variance')


class pokemon_v2_pokemonshapename_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_shape_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_shape_id = sgqlc.types.Field(Float, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonshapename_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('awesome_name', 'id', 'language_id', 'name', 'pokemon_shape_id')
    awesome_name = sgqlc.types.Field(String, graphql_name='awesome_name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    pokemon_shape_id = sgqlc.types.Field(Int, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonshapename_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('awesome_name', 'id', 'language_id', 'name', 'pokemon_shape_id')
    awesome_name = sgqlc.types.Field(String, graphql_name='awesome_name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    pokemon_shape_id = sgqlc.types.Field(Int, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonshapename_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_shape_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_shape_id = sgqlc.types.Field(Float, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonshapename_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_shape_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_shape_id = sgqlc.types.Field(Float, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonshapename_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_shape_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_shape_id = sgqlc.types.Field(Float, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonshapename_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_shape_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_shape_id = sgqlc.types.Field(Int, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonshapename_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_shape_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_shape_id = sgqlc.types.Field(Float, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonshapename_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_shape_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_shape_id = sgqlc.types.Field(Float, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonshapename_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_shape_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_shape_id = sgqlc.types.Field(Float, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonspecies(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'forms_switchable', 'gender_rate', 'generation_id', 'growth_rate_id', 'has_gender_differences', 'hatch_counter', 'id', 'is_baby', 'is_legendary', 'is_mythical', 'name', 'order', 'pokemon_v2_pokemonevolutions_by_party_species_id', 'pokemon_v2_pokemonevolutions_by_party_species_id_aggregate', 'pokemon_v2_pokemonevolutions_by_trade_species_id', 'pokemon_v2_pokemonevolutions_by_trade_species_id_aggregate', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id', 'pokemon_v2_evolutionchain', 'pokemon_v2_generation', 'pokemon_v2_growthrate', 'pokemon_v2_palparks', 'pokemon_v2_palparks_aggregate', 'pokemon_v2_pokemoncolor', 'pokemon_v2_pokemondexnumbers', 'pokemon_v2_pokemondexnumbers_aggregate', 'pokemon_v2_pokemonegggroups', 'pokemon_v2_pokemonegggroups_aggregate', 'pokemon_v2_pokemonevolutions', 'pokemon_v2_pokemonevolutions_aggregate', 'pokemon_v2_pokemonhabitat', 'pokemon_v2_pokemons', 'pokemon_v2_pokemons_aggregate', 'pokemon_v2_pokemonshape', 'pokemon_v2_pokemonspecies', 'pokemon_v2_pokemonspecies_aggregate', 'pokemon_v2_pokemonspeciesdescriptions', 'pokemon_v2_pokemonspeciesdescriptions_aggregate', 'pokemon_v2_pokemonspeciesflavortexts', 'pokemon_v2_pokemonspeciesflavortexts_aggregate', 'pokemon_v2_pokemonspeciesnames', 'pokemon_v2_pokemonspeciesnames_aggregate', 'pokemon_v2_pokemonspecy')
    base_happiness = sgqlc.types.Field(Int, graphql_name='base_happiness')
    capture_rate = sgqlc.types.Field(Int, graphql_name='capture_rate')
    evolution_chain_id = sgqlc.types.Field(Int, graphql_name='evolution_chain_id')
    evolves_from_species_id = sgqlc.types.Field(Int, graphql_name='evolves_from_species_id')
    forms_switchable = sgqlc.types.Field(sgqlc.types.non_null(Boolean), graphql_name='forms_switchable')
    gender_rate = sgqlc.types.Field(Int, graphql_name='gender_rate')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    growth_rate_id = sgqlc.types.Field(Int, graphql_name='growth_rate_id')
    has_gender_differences = sgqlc.types.Field(sgqlc.types.non_null(Boolean), graphql_name='has_gender_differences')
    hatch_counter = sgqlc.types.Field(Int, graphql_name='hatch_counter')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    is_baby = sgqlc.types.Field(sgqlc.types.non_null(Boolean), graphql_name='is_baby')
    is_legendary = sgqlc.types.Field(sgqlc.types.non_null(Boolean), graphql_name='is_legendary')
    is_mythical = sgqlc.types.Field(sgqlc.types.non_null(Boolean), graphql_name='is_mythical')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    order = sgqlc.types.Field(Int, graphql_name='order')
    pokemon_v2_pokemonevolutions_by_party_species_id = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution))), graphql_name='pokemonV2PokemonevolutionsByPartySpeciesId', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonevolutions_by_party_species_id_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_pokemonevolution_aggregate), graphql_name='pokemonV2PokemonevolutionsByPartySpeciesId_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonevolutions_by_trade_species_id = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution))), graphql_name='pokemonV2PokemonevolutionsByTradeSpeciesId', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonevolutions_by_trade_species_id_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_pokemonevolution_aggregate), graphql_name='pokemonV2PokemonevolutionsByTradeSpeciesId_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_color_id = sgqlc.types.Field(Int, graphql_name='pokemon_color_id')
    pokemon_habitat_id = sgqlc.types.Field(Int, graphql_name='pokemon_habitat_id')
    pokemon_shape_id = sgqlc.types.Field(Int, graphql_name='pokemon_shape_id')
    pokemon_v2_evolutionchain = sgqlc.types.Field('pokemon_v2_evolutionchain', graphql_name='pokemon_v2_evolutionchain')
    pokemon_v2_generation = sgqlc.types.Field('pokemon_v2_generation', graphql_name='pokemon_v2_generation')
    pokemon_v2_growthrate = sgqlc.types.Field('pokemon_v2_growthrate', graphql_name='pokemon_v2_growthrate')
    pokemon_v2_palparks = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palpark))), graphql_name='pokemon_v2_palparks', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palpark_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palpark_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_palpark_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_palparks_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_palpark_aggregate), graphql_name='pokemon_v2_palparks_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palpark_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palpark_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_palpark_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemoncolor = sgqlc.types.Field('pokemon_v2_pokemoncolor', graphql_name='pokemon_v2_pokemoncolor')
    pokemon_v2_pokemondexnumbers = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemondexnumber))), graphql_name='pokemon_v2_pokemondexnumbers', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemondexnumber_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemondexnumber_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemondexnumber_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemondexnumbers_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_pokemondexnumber_aggregate), graphql_name='pokemon_v2_pokemondexnumbers_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemondexnumber_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemondexnumber_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemondexnumber_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonegggroups = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonegggroup))), graphql_name='pokemon_v2_pokemonegggroups', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonegggroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonegggroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonegggroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonegggroups_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_pokemonegggroup_aggregate), graphql_name='pokemon_v2_pokemonegggroups_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonegggroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonegggroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonegggroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonevolutions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution))), graphql_name='pokemon_v2_pokemonevolutions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonevolutions_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_pokemonevolution_aggregate), graphql_name='pokemon_v2_pokemonevolutions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonhabitat = sgqlc.types.Field('pokemon_v2_pokemonhabitat', graphql_name='pokemon_v2_pokemonhabitat')
    pokemon_v2_pokemons = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemon))), graphql_name='pokemon_v2_pokemons', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemon_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemon_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemon_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemons_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_pokemon_aggregate), graphql_name='pokemon_v2_pokemons_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemon_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemon_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemon_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonshape = sgqlc.types.Field('pokemon_v2_pokemonshape', graphql_name='pokemon_v2_pokemonshape')
    pokemon_v2_pokemonspecies = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspecies'))), graphql_name='pokemon_v2_pokemonspecies', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspecies_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspecies_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonspecies_aggregate'), graphql_name='pokemon_v2_pokemonspecies_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspecies_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesdescriptions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspeciesdescription'))), graphql_name='pokemon_v2_pokemonspeciesdescriptions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesdescriptions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonspeciesdescription_aggregate'), graphql_name='pokemon_v2_pokemonspeciesdescriptions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesflavortexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspeciesflavortext'))), graphql_name='pokemon_v2_pokemonspeciesflavortexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesflavortexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonspeciesflavortext_aggregate'), graphql_name='pokemon_v2_pokemonspeciesflavortexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspeciesname'))), graphql_name='pokemon_v2_pokemonspeciesnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonspeciesname_aggregate'), graphql_name='pokemon_v2_pokemonspeciesnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspecy = sgqlc.types.Field('pokemon_v2_pokemonspecies', graphql_name='pokemon_v2_pokemonspecy')


class pokemon_v2_pokemonspecies_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemonspecies_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies))), graphql_name='nodes')


class pokemon_v2_pokemonspecies_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonspecies_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemonspecies_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonspecies_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonspecies_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonspecies_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonspecies_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonspecies_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonspecies_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonspecies_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonspecies_variance_fields', graphql_name='variance')


class pokemon_v2_pokemonspecies_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'gender_rate', 'generation_id', 'growth_rate_id', 'hatch_counter', 'id', 'order', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id')
    base_happiness = sgqlc.types.Field(Float, graphql_name='base_happiness')
    capture_rate = sgqlc.types.Field(Float, graphql_name='capture_rate')
    evolution_chain_id = sgqlc.types.Field(Float, graphql_name='evolution_chain_id')
    evolves_from_species_id = sgqlc.types.Field(Float, graphql_name='evolves_from_species_id')
    gender_rate = sgqlc.types.Field(Float, graphql_name='gender_rate')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    hatch_counter = sgqlc.types.Field(Float, graphql_name='hatch_counter')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_color_id = sgqlc.types.Field(Float, graphql_name='pokemon_color_id')
    pokemon_habitat_id = sgqlc.types.Field(Float, graphql_name='pokemon_habitat_id')
    pokemon_shape_id = sgqlc.types.Field(Float, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonspecies_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'gender_rate', 'generation_id', 'growth_rate_id', 'hatch_counter', 'id', 'name', 'order', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id')
    base_happiness = sgqlc.types.Field(Int, graphql_name='base_happiness')
    capture_rate = sgqlc.types.Field(Int, graphql_name='capture_rate')
    evolution_chain_id = sgqlc.types.Field(Int, graphql_name='evolution_chain_id')
    evolves_from_species_id = sgqlc.types.Field(Int, graphql_name='evolves_from_species_id')
    gender_rate = sgqlc.types.Field(Int, graphql_name='gender_rate')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    growth_rate_id = sgqlc.types.Field(Int, graphql_name='growth_rate_id')
    hatch_counter = sgqlc.types.Field(Int, graphql_name='hatch_counter')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')
    order = sgqlc.types.Field(Int, graphql_name='order')
    pokemon_color_id = sgqlc.types.Field(Int, graphql_name='pokemon_color_id')
    pokemon_habitat_id = sgqlc.types.Field(Int, graphql_name='pokemon_habitat_id')
    pokemon_shape_id = sgqlc.types.Field(Int, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonspecies_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'gender_rate', 'generation_id', 'growth_rate_id', 'hatch_counter', 'id', 'name', 'order', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id')
    base_happiness = sgqlc.types.Field(Int, graphql_name='base_happiness')
    capture_rate = sgqlc.types.Field(Int, graphql_name='capture_rate')
    evolution_chain_id = sgqlc.types.Field(Int, graphql_name='evolution_chain_id')
    evolves_from_species_id = sgqlc.types.Field(Int, graphql_name='evolves_from_species_id')
    gender_rate = sgqlc.types.Field(Int, graphql_name='gender_rate')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    growth_rate_id = sgqlc.types.Field(Int, graphql_name='growth_rate_id')
    hatch_counter = sgqlc.types.Field(Int, graphql_name='hatch_counter')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')
    order = sgqlc.types.Field(Int, graphql_name='order')
    pokemon_color_id = sgqlc.types.Field(Int, graphql_name='pokemon_color_id')
    pokemon_habitat_id = sgqlc.types.Field(Int, graphql_name='pokemon_habitat_id')
    pokemon_shape_id = sgqlc.types.Field(Int, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonspecies_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'gender_rate', 'generation_id', 'growth_rate_id', 'hatch_counter', 'id', 'order', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id')
    base_happiness = sgqlc.types.Field(Float, graphql_name='base_happiness')
    capture_rate = sgqlc.types.Field(Float, graphql_name='capture_rate')
    evolution_chain_id = sgqlc.types.Field(Float, graphql_name='evolution_chain_id')
    evolves_from_species_id = sgqlc.types.Field(Float, graphql_name='evolves_from_species_id')
    gender_rate = sgqlc.types.Field(Float, graphql_name='gender_rate')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    hatch_counter = sgqlc.types.Field(Float, graphql_name='hatch_counter')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_color_id = sgqlc.types.Field(Float, graphql_name='pokemon_color_id')
    pokemon_habitat_id = sgqlc.types.Field(Float, graphql_name='pokemon_habitat_id')
    pokemon_shape_id = sgqlc.types.Field(Float, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonspecies_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'gender_rate', 'generation_id', 'growth_rate_id', 'hatch_counter', 'id', 'order', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id')
    base_happiness = sgqlc.types.Field(Float, graphql_name='base_happiness')
    capture_rate = sgqlc.types.Field(Float, graphql_name='capture_rate')
    evolution_chain_id = sgqlc.types.Field(Float, graphql_name='evolution_chain_id')
    evolves_from_species_id = sgqlc.types.Field(Float, graphql_name='evolves_from_species_id')
    gender_rate = sgqlc.types.Field(Float, graphql_name='gender_rate')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    hatch_counter = sgqlc.types.Field(Float, graphql_name='hatch_counter')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_color_id = sgqlc.types.Field(Float, graphql_name='pokemon_color_id')
    pokemon_habitat_id = sgqlc.types.Field(Float, graphql_name='pokemon_habitat_id')
    pokemon_shape_id = sgqlc.types.Field(Float, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonspecies_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'gender_rate', 'generation_id', 'growth_rate_id', 'hatch_counter', 'id', 'order', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id')
    base_happiness = sgqlc.types.Field(Float, graphql_name='base_happiness')
    capture_rate = sgqlc.types.Field(Float, graphql_name='capture_rate')
    evolution_chain_id = sgqlc.types.Field(Float, graphql_name='evolution_chain_id')
    evolves_from_species_id = sgqlc.types.Field(Float, graphql_name='evolves_from_species_id')
    gender_rate = sgqlc.types.Field(Float, graphql_name='gender_rate')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    hatch_counter = sgqlc.types.Field(Float, graphql_name='hatch_counter')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_color_id = sgqlc.types.Field(Float, graphql_name='pokemon_color_id')
    pokemon_habitat_id = sgqlc.types.Field(Float, graphql_name='pokemon_habitat_id')
    pokemon_shape_id = sgqlc.types.Field(Float, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonspecies_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'gender_rate', 'generation_id', 'growth_rate_id', 'hatch_counter', 'id', 'order', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id')
    base_happiness = sgqlc.types.Field(Int, graphql_name='base_happiness')
    capture_rate = sgqlc.types.Field(Int, graphql_name='capture_rate')
    evolution_chain_id = sgqlc.types.Field(Int, graphql_name='evolution_chain_id')
    evolves_from_species_id = sgqlc.types.Field(Int, graphql_name='evolves_from_species_id')
    gender_rate = sgqlc.types.Field(Int, graphql_name='gender_rate')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    growth_rate_id = sgqlc.types.Field(Int, graphql_name='growth_rate_id')
    hatch_counter = sgqlc.types.Field(Int, graphql_name='hatch_counter')
    id = sgqlc.types.Field(Int, graphql_name='id')
    order = sgqlc.types.Field(Int, graphql_name='order')
    pokemon_color_id = sgqlc.types.Field(Int, graphql_name='pokemon_color_id')
    pokemon_habitat_id = sgqlc.types.Field(Int, graphql_name='pokemon_habitat_id')
    pokemon_shape_id = sgqlc.types.Field(Int, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonspecies_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'gender_rate', 'generation_id', 'growth_rate_id', 'hatch_counter', 'id', 'order', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id')
    base_happiness = sgqlc.types.Field(Float, graphql_name='base_happiness')
    capture_rate = sgqlc.types.Field(Float, graphql_name='capture_rate')
    evolution_chain_id = sgqlc.types.Field(Float, graphql_name='evolution_chain_id')
    evolves_from_species_id = sgqlc.types.Field(Float, graphql_name='evolves_from_species_id')
    gender_rate = sgqlc.types.Field(Float, graphql_name='gender_rate')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    hatch_counter = sgqlc.types.Field(Float, graphql_name='hatch_counter')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_color_id = sgqlc.types.Field(Float, graphql_name='pokemon_color_id')
    pokemon_habitat_id = sgqlc.types.Field(Float, graphql_name='pokemon_habitat_id')
    pokemon_shape_id = sgqlc.types.Field(Float, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonspecies_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'gender_rate', 'generation_id', 'growth_rate_id', 'hatch_counter', 'id', 'order', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id')
    base_happiness = sgqlc.types.Field(Float, graphql_name='base_happiness')
    capture_rate = sgqlc.types.Field(Float, graphql_name='capture_rate')
    evolution_chain_id = sgqlc.types.Field(Float, graphql_name='evolution_chain_id')
    evolves_from_species_id = sgqlc.types.Field(Float, graphql_name='evolves_from_species_id')
    gender_rate = sgqlc.types.Field(Float, graphql_name='gender_rate')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    hatch_counter = sgqlc.types.Field(Float, graphql_name='hatch_counter')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_color_id = sgqlc.types.Field(Float, graphql_name='pokemon_color_id')
    pokemon_habitat_id = sgqlc.types.Field(Float, graphql_name='pokemon_habitat_id')
    pokemon_shape_id = sgqlc.types.Field(Float, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonspecies_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_happiness', 'capture_rate', 'evolution_chain_id', 'evolves_from_species_id', 'gender_rate', 'generation_id', 'growth_rate_id', 'hatch_counter', 'id', 'order', 'pokemon_color_id', 'pokemon_habitat_id', 'pokemon_shape_id')
    base_happiness = sgqlc.types.Field(Float, graphql_name='base_happiness')
    capture_rate = sgqlc.types.Field(Float, graphql_name='capture_rate')
    evolution_chain_id = sgqlc.types.Field(Float, graphql_name='evolution_chain_id')
    evolves_from_species_id = sgqlc.types.Field(Float, graphql_name='evolves_from_species_id')
    gender_rate = sgqlc.types.Field(Float, graphql_name='gender_rate')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    growth_rate_id = sgqlc.types.Field(Float, graphql_name='growth_rate_id')
    hatch_counter = sgqlc.types.Field(Float, graphql_name='hatch_counter')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')
    pokemon_color_id = sgqlc.types.Field(Float, graphql_name='pokemon_color_id')
    pokemon_habitat_id = sgqlc.types.Field(Float, graphql_name='pokemon_habitat_id')
    pokemon_shape_id = sgqlc.types.Field(Float, graphql_name='pokemon_shape_id')


class pokemon_v2_pokemonspeciesdescription(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'pokemon_species_id', 'pokemon_v2_language', 'pokemon_v2_pokemonspecy')
    description = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='description')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_pokemonspecy = sgqlc.types.Field(pokemon_v2_pokemonspecies, graphql_name='pokemon_v2_pokemonspecy')


class pokemon_v2_pokemonspeciesdescription_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesdescription))), graphql_name='nodes')


class pokemon_v2_pokemonspeciesdescription_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesdescription_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription_variance_fields', graphql_name='variance')


class pokemon_v2_pokemonspeciesdescription_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesdescription_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'pokemon_species_id')
    description = sgqlc.types.Field(String, graphql_name='description')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesdescription_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('description', 'id', 'language_id', 'pokemon_species_id')
    description = sgqlc.types.Field(String, graphql_name='description')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesdescription_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesdescription_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesdescription_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesdescription_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesdescription_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesdescription_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesdescription_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesflavortext(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'language_id', 'pokemon_species_id', 'pokemon_v2_language', 'pokemon_v2_pokemonspecy', 'pokemon_v2_version', 'version_id')
    flavor_text = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='flavor_text')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_pokemonspecy = sgqlc.types.Field(pokemon_v2_pokemonspecies, graphql_name='pokemon_v2_pokemonspecy')
    pokemon_v2_version = sgqlc.types.Field('pokemon_v2_version', graphql_name='pokemon_v2_version')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_pokemonspeciesflavortext_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext))), graphql_name='nodes')


class pokemon_v2_pokemonspeciesflavortext_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext_variance_fields', graphql_name='variance')


class pokemon_v2_pokemonspeciesflavortext_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id', 'version_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_pokemonspeciesflavortext_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'language_id', 'pokemon_species_id', 'version_id')
    flavor_text = sgqlc.types.Field(String, graphql_name='flavor_text')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_pokemonspeciesflavortext_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'language_id', 'pokemon_species_id', 'version_id')
    flavor_text = sgqlc.types.Field(String, graphql_name='flavor_text')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_pokemonspeciesflavortext_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id', 'version_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_pokemonspeciesflavortext_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id', 'version_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_pokemonspeciesflavortext_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id', 'version_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_pokemonspeciesflavortext_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id', 'version_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_pokemonspeciesflavortext_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id', 'version_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_pokemonspeciesflavortext_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id', 'version_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_pokemonspeciesflavortext_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id', 'version_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_pokemonspeciesname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('genus', 'id', 'language_id', 'name', 'pokemon_species_id', 'pokemon_v2_language', 'pokemon_v2_pokemonspecy')
    genus = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='genus')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_pokemonspecy = sgqlc.types.Field(pokemon_v2_pokemonspecies, graphql_name='pokemon_v2_pokemonspecy')


class pokemon_v2_pokemonspeciesname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesname))), graphql_name='nodes')


class pokemon_v2_pokemonspeciesname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonspeciesname_variance_fields', graphql_name='variance')


class pokemon_v2_pokemonspeciesname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('genus', 'id', 'language_id', 'name', 'pokemon_species_id')
    genus = sgqlc.types.Field(String, graphql_name='genus')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('genus', 'id', 'language_id', 'name', 'pokemon_species_id')
    genus = sgqlc.types.Field(String, graphql_name='genus')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Int, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonspeciesname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'pokemon_species_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    pokemon_species_id = sgqlc.types.Field(Float, graphql_name='pokemon_species_id')


class pokemon_v2_pokemonsprites(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'pokemon_v2_pokemon', 'sprites')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    pokemon_v2_pokemon = sgqlc.types.Field('pokemon_v2_pokemon', graphql_name='pokemon_v2_pokemon')
    sprites = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='sprites')


class pokemon_v2_pokemonsprites_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemonsprites_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonsprites))), graphql_name='nodes')


class pokemon_v2_pokemonsprites_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonsprites_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonsprites_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemonsprites_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonsprites_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonsprites_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonsprites_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonsprites_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonsprites_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonsprites_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonsprites_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonsprites_variance_fields', graphql_name='variance')


class pokemon_v2_pokemonsprites_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')


class pokemon_v2_pokemonsprites_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'sprites')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    sprites = sgqlc.types.Field(String, graphql_name='sprites')


class pokemon_v2_pokemonsprites_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'sprites')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    sprites = sgqlc.types.Field(String, graphql_name='sprites')


class pokemon_v2_pokemonsprites_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')


class pokemon_v2_pokemonsprites_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')


class pokemon_v2_pokemonsprites_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')


class pokemon_v2_pokemonsprites_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')


class pokemon_v2_pokemonsprites_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')


class pokemon_v2_pokemonsprites_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')


class pokemon_v2_pokemonsprites_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')


class pokemon_v2_pokemonstat(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_stat', 'effort', 'id', 'pokemon_id', 'pokemon_v2_pokemon', 'pokemon_v2_stat', 'stat_id')
    base_stat = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='base_stat')
    effort = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='effort')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    pokemon_v2_pokemon = sgqlc.types.Field('pokemon_v2_pokemon', graphql_name='pokemon_v2_pokemon')
    pokemon_v2_stat = sgqlc.types.Field('pokemon_v2_stat', graphql_name='pokemon_v2_stat')
    stat_id = sgqlc.types.Field(Int, graphql_name='stat_id')


class pokemon_v2_pokemonstat_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemonstat_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonstat))), graphql_name='nodes')


class pokemon_v2_pokemonstat_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemonstat_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonstat_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemonstat_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemonstat_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemonstat_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemonstat_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemonstat_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemonstat_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemonstat_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemonstat_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemonstat_variance_fields', graphql_name='variance')


class pokemon_v2_pokemonstat_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_stat', 'effort', 'id', 'pokemon_id', 'stat_id')
    base_stat = sgqlc.types.Field(Float, graphql_name='base_stat')
    effort = sgqlc.types.Field(Float, graphql_name='effort')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_pokemonstat_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_stat', 'effort', 'id', 'pokemon_id', 'stat_id')
    base_stat = sgqlc.types.Field(Int, graphql_name='base_stat')
    effort = sgqlc.types.Field(Int, graphql_name='effort')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    stat_id = sgqlc.types.Field(Int, graphql_name='stat_id')


class pokemon_v2_pokemonstat_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_stat', 'effort', 'id', 'pokemon_id', 'stat_id')
    base_stat = sgqlc.types.Field(Int, graphql_name='base_stat')
    effort = sgqlc.types.Field(Int, graphql_name='effort')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    stat_id = sgqlc.types.Field(Int, graphql_name='stat_id')


class pokemon_v2_pokemonstat_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_stat', 'effort', 'id', 'pokemon_id', 'stat_id')
    base_stat = sgqlc.types.Field(Float, graphql_name='base_stat')
    effort = sgqlc.types.Field(Float, graphql_name='effort')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_pokemonstat_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_stat', 'effort', 'id', 'pokemon_id', 'stat_id')
    base_stat = sgqlc.types.Field(Float, graphql_name='base_stat')
    effort = sgqlc.types.Field(Float, graphql_name='effort')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_pokemonstat_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_stat', 'effort', 'id', 'pokemon_id', 'stat_id')
    base_stat = sgqlc.types.Field(Float, graphql_name='base_stat')
    effort = sgqlc.types.Field(Float, graphql_name='effort')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_pokemonstat_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_stat', 'effort', 'id', 'pokemon_id', 'stat_id')
    base_stat = sgqlc.types.Field(Int, graphql_name='base_stat')
    effort = sgqlc.types.Field(Int, graphql_name='effort')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    stat_id = sgqlc.types.Field(Int, graphql_name='stat_id')


class pokemon_v2_pokemonstat_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_stat', 'effort', 'id', 'pokemon_id', 'stat_id')
    base_stat = sgqlc.types.Field(Float, graphql_name='base_stat')
    effort = sgqlc.types.Field(Float, graphql_name='effort')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_pokemonstat_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_stat', 'effort', 'id', 'pokemon_id', 'stat_id')
    base_stat = sgqlc.types.Field(Float, graphql_name='base_stat')
    effort = sgqlc.types.Field(Float, graphql_name='effort')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_pokemonstat_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('base_stat', 'effort', 'id', 'pokemon_id', 'stat_id')
    base_stat = sgqlc.types.Field(Float, graphql_name='base_stat')
    effort = sgqlc.types.Field(Float, graphql_name='effort')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_pokemontype(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'pokemon_v2_pokemon', 'pokemon_v2_type', 'slot', 'type_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    pokemon_v2_pokemon = sgqlc.types.Field('pokemon_v2_pokemon', graphql_name='pokemon_v2_pokemon')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type', graphql_name='pokemon_v2_type')
    slot = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='slot')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_pokemontype_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemontype_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontype))), graphql_name='nodes')


class pokemon_v2_pokemontype_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemontype_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontype_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemontype_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemontype_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemontype_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemontype_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemontype_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemontype_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemontype_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemontype_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemontype_variance_fields', graphql_name='variance')


class pokemon_v2_pokemontype_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'slot', 'type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_pokemontype_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'slot', 'type_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Int, graphql_name='slot')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_pokemontype_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'slot', 'type_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Int, graphql_name='slot')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_pokemontype_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'slot', 'type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_pokemontype_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'slot', 'type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_pokemontype_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'slot', 'type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_pokemontype_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'slot', 'type_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Int, graphql_name='slot')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_pokemontype_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'slot', 'type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_pokemontype_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'slot', 'type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_pokemontype_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_id', 'slot', 'type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_pokemontypepast(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'pokemon_id', 'pokemon_v2_generation', 'pokemon_v2_pokemon', 'pokemon_v2_type', 'slot', 'type_id')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    pokemon_v2_generation = sgqlc.types.Field('pokemon_v2_generation', graphql_name='pokemon_v2_generation')
    pokemon_v2_pokemon = sgqlc.types.Field('pokemon_v2_pokemon', graphql_name='pokemon_v2_pokemon')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type', graphql_name='pokemon_v2_type')
    slot = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='slot')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_pokemontypepast_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_pokemontypepast_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontypepast))), graphql_name='nodes')


class pokemon_v2_pokemontypepast_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_pokemontypepast_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontypepast_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_pokemontypepast_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_pokemontypepast_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_pokemontypepast_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_pokemontypepast_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_pokemontypepast_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_pokemontypepast_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_pokemontypepast_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_pokemontypepast_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_pokemontypepast_variance_fields', graphql_name='variance')


class pokemon_v2_pokemontypepast_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'pokemon_id', 'slot', 'type_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_pokemontypepast_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'pokemon_id', 'slot', 'type_id')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Int, graphql_name='slot')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_pokemontypepast_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'pokemon_id', 'slot', 'type_id')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Int, graphql_name='slot')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_pokemontypepast_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'pokemon_id', 'slot', 'type_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_pokemontypepast_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'pokemon_id', 'slot', 'type_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_pokemontypepast_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'pokemon_id', 'slot', 'type_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_pokemontypepast_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'pokemon_id', 'slot', 'type_id')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Int, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Int, graphql_name='slot')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_pokemontypepast_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'pokemon_id', 'slot', 'type_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_pokemontypepast_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'pokemon_id', 'slot', 'type_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_pokemontypepast_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'pokemon_id', 'slot', 'type_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    pokemon_id = sgqlc.types.Field(Float, graphql_name='pokemon_id')
    slot = sgqlc.types.Field(Float, graphql_name='slot')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_region(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_generations', 'pokemon_v2_generations_aggregate', 'pokemon_v2_locations', 'pokemon_v2_locations_aggregate', 'pokemon_v2_pokedexes', 'pokemon_v2_pokedexes_aggregate', 'pokemon_v2_regionnames', 'pokemon_v2_regionnames_aggregate', 'pokemon_v2_versiongroupregions', 'pokemon_v2_versiongroupregions_aggregate')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_generations = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generation))), graphql_name='pokemon_v2_generations', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generation_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generation_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_generation_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_generations_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_generation_aggregate), graphql_name='pokemon_v2_generations_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generation_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generation_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_generation_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locations = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_location))), graphql_name='pokemon_v2_locations', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_location_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_location_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_location_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locations_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_location_aggregate), graphql_name='pokemon_v2_locations_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_location_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_location_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_location_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedex))), graphql_name='pokemon_v2_pokedexes', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexes_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_pokedex_aggregate), graphql_name='pokemon_v2_pokedexes_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_regionnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_regionname'))), graphql_name='pokemon_v2_regionnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_regionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_regionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_regionname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_regionnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_regionname_aggregate'), graphql_name='pokemon_v2_regionnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_regionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_regionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_regionname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroupregions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_versiongroupregion'))), graphql_name='pokemon_v2_versiongroupregions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupregion_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupregion_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versiongroupregion_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroupregions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_versiongroupregion_aggregate'), graphql_name='pokemon_v2_versiongroupregions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupregion_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupregion_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versiongroupregion_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_region_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_region_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_region))), graphql_name='nodes')


class pokemon_v2_region_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_region_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_region_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_region_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_region_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_region_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_region_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_region_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_region_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_region_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_region_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_region_variance_fields', graphql_name='variance')


class pokemon_v2_region_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_region_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_region_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_region_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_region_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_region_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_region_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_region_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_region_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_region_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id',)
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_regionname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_v2_language', 'pokemon_v2_region', 'region_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_region = sgqlc.types.Field('pokemon_v2_region', graphql_name='pokemon_v2_region')
    region_id = sgqlc.types.Field(Int, graphql_name='region_id')


class pokemon_v2_regionname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_regionname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_regionname))), graphql_name='nodes')


class pokemon_v2_regionname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_regionname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_regionname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_regionname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_regionname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_regionname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_regionname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_regionname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_regionname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_regionname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_regionname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_regionname_variance_fields', graphql_name='variance')


class pokemon_v2_regionname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_regionname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'region_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    region_id = sgqlc.types.Field(Int, graphql_name='region_id')


class pokemon_v2_regionname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'region_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    region_id = sgqlc.types.Field(Int, graphql_name='region_id')


class pokemon_v2_regionname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_regionname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_regionname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_regionname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'region_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    region_id = sgqlc.types.Field(Int, graphql_name='region_id')


class pokemon_v2_regionname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_regionname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_regionname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'region_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')


class pokemon_v2_stat(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'is_battle_only', 'move_damage_class_id', 'name', 'pokemon_v2_natures_by_increased_stat_id', 'pokemon_v2_natures_by_increased_stat_id_aggregate', 'pokemon_v2_characteristics', 'pokemon_v2_characteristics_aggregate', 'pokemon_v2_movedamageclass', 'pokemon_v2_movemetastatchanges', 'pokemon_v2_movemetastatchanges_aggregate', 'pokemon_v2_natures', 'pokemon_v2_natures_aggregate', 'pokemon_v2_pokemonstats', 'pokemon_v2_pokemonstats_aggregate', 'pokemon_v2_statnames', 'pokemon_v2_statnames_aggregate')
    game_index = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='game_index')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    is_battle_only = sgqlc.types.Field(sgqlc.types.non_null(Boolean), graphql_name='is_battle_only')
    move_damage_class_id = sgqlc.types.Field(Int, graphql_name='move_damage_class_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_natures_by_increased_stat_id = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature))), graphql_name='pokemonV2NaturesByIncreasedStatId', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_nature_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_natures_by_increased_stat_id_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_nature_aggregate), graphql_name='pokemonV2NaturesByIncreasedStatId_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_nature_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_characteristics = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristic))), graphql_name='pokemon_v2_characteristics', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristic_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristic_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_characteristic_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_characteristics_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_characteristic_aggregate), graphql_name='pokemon_v2_characteristics_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristic_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristic_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_characteristic_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movedamageclass = sgqlc.types.Field('pokemon_v2_movedamageclass', graphql_name='pokemon_v2_movedamageclass')
    pokemon_v2_movemetastatchanges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetastatchange))), graphql_name='pokemon_v2_movemetastatchanges', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetastatchange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetastatchange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetastatchange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetastatchanges_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_movemetastatchange_aggregate), graphql_name='pokemon_v2_movemetastatchanges_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetastatchange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetastatchange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetastatchange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_natures = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature))), graphql_name='pokemon_v2_natures', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_nature_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_natures_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_nature_aggregate), graphql_name='pokemon_v2_natures_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_nature_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonstats = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonstat))), graphql_name='pokemon_v2_pokemonstats', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonstat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonstat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonstat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonstats_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_pokemonstat_aggregate), graphql_name='pokemon_v2_pokemonstats_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonstat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonstat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonstat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_statnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_statname'))), graphql_name='pokemon_v2_statnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_statname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_statname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_statname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_statnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_statname_aggregate'), graphql_name='pokemon_v2_statnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_statname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_statname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_statname_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_stat_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_stat_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_stat))), graphql_name='nodes')


class pokemon_v2_stat_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_stat_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_stat_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_stat_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_stat_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_stat_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_stat_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_stat_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_stat_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_stat_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_stat_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_stat_variance_fields', graphql_name='variance')


class pokemon_v2_stat_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'move_damage_class_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_stat_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'move_damage_class_id', 'name')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Int, graphql_name='move_damage_class_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_stat_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'move_damage_class_id', 'name')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Int, graphql_name='move_damage_class_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_stat_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'move_damage_class_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_stat_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'move_damage_class_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_stat_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'move_damage_class_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_stat_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'move_damage_class_id')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Int, graphql_name='move_damage_class_id')


class pokemon_v2_stat_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'move_damage_class_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_stat_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'move_damage_class_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_stat_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'id', 'move_damage_class_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_statname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_v2_language', 'pokemon_v2_stat', 'stat_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_stat = sgqlc.types.Field('pokemon_v2_stat', graphql_name='pokemon_v2_stat')
    stat_id = sgqlc.types.Field(Int, graphql_name='stat_id')


class pokemon_v2_statname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_statname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_statname))), graphql_name='nodes')


class pokemon_v2_statname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_statname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_statname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_statname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_statname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_statname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_statname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_statname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_statname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_statname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_statname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_statname_variance_fields', graphql_name='variance')


class pokemon_v2_statname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'stat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_statname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'stat_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    stat_id = sgqlc.types.Field(Int, graphql_name='stat_id')


class pokemon_v2_statname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'stat_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    stat_id = sgqlc.types.Field(Int, graphql_name='stat_id')


class pokemon_v2_statname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'stat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_statname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'stat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_statname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'stat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_statname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'stat_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    stat_id = sgqlc.types.Field(Int, graphql_name='stat_id')


class pokemon_v2_statname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'stat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_statname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'stat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_statname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'stat_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    stat_id = sgqlc.types.Field(Float, graphql_name='stat_id')


class pokemon_v2_supercontestcombo(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'pokemon_v2_move_by_second_move_id', 'pokemon_v2_move', 'second_move_id')
    first_move_id = sgqlc.types.Field(Int, graphql_name='first_move_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokemon_v2_move_by_second_move_id = sgqlc.types.Field('pokemon_v2_move', graphql_name='pokemonV2MoveBySecondMoveId')
    pokemon_v2_move = sgqlc.types.Field('pokemon_v2_move', graphql_name='pokemon_v2_move')
    second_move_id = sgqlc.types.Field(Int, graphql_name='second_move_id')


class pokemon_v2_supercontestcombo_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_supercontestcombo_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontestcombo))), graphql_name='nodes')


class pokemon_v2_supercontestcombo_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_supercontestcombo_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontestcombo_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_supercontestcombo_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_supercontestcombo_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_supercontestcombo_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_supercontestcombo_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_supercontestcombo_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_supercontestcombo_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_supercontestcombo_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_supercontestcombo_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_supercontestcombo_variance_fields', graphql_name='variance')


class pokemon_v2_supercontestcombo_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(Float, graphql_name='first_move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    second_move_id = sgqlc.types.Field(Float, graphql_name='second_move_id')


class pokemon_v2_supercontestcombo_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(Int, graphql_name='first_move_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    second_move_id = sgqlc.types.Field(Int, graphql_name='second_move_id')


class pokemon_v2_supercontestcombo_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(Int, graphql_name='first_move_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    second_move_id = sgqlc.types.Field(Int, graphql_name='second_move_id')


class pokemon_v2_supercontestcombo_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(Float, graphql_name='first_move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    second_move_id = sgqlc.types.Field(Float, graphql_name='second_move_id')


class pokemon_v2_supercontestcombo_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(Float, graphql_name='first_move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    second_move_id = sgqlc.types.Field(Float, graphql_name='second_move_id')


class pokemon_v2_supercontestcombo_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(Float, graphql_name='first_move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    second_move_id = sgqlc.types.Field(Float, graphql_name='second_move_id')


class pokemon_v2_supercontestcombo_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(Int, graphql_name='first_move_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    second_move_id = sgqlc.types.Field(Int, graphql_name='second_move_id')


class pokemon_v2_supercontestcombo_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(Float, graphql_name='first_move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    second_move_id = sgqlc.types.Field(Float, graphql_name='second_move_id')


class pokemon_v2_supercontestcombo_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(Float, graphql_name='first_move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    second_move_id = sgqlc.types.Field(Float, graphql_name='second_move_id')


class pokemon_v2_supercontestcombo_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('first_move_id', 'id', 'second_move_id')
    first_move_id = sgqlc.types.Field(Float, graphql_name='first_move_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    second_move_id = sgqlc.types.Field(Float, graphql_name='second_move_id')


class pokemon_v2_supercontesteffect(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id', 'pokemon_v2_moves', 'pokemon_v2_moves_aggregate', 'pokemon_v2_supercontesteffectflavortexts', 'pokemon_v2_supercontesteffectflavortexts_aggregate')
    appeal = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='appeal')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokemon_v2_moves = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move))), graphql_name='pokemon_v2_moves', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_move_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moves_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_move_aggregate), graphql_name='pokemon_v2_moves_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_move_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_supercontesteffectflavortexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_supercontesteffectflavortext'))), graphql_name='pokemon_v2_supercontesteffectflavortexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffectflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffectflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_supercontesteffectflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_supercontesteffectflavortexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_supercontesteffectflavortext_aggregate'), graphql_name='pokemon_v2_supercontesteffectflavortexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffectflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffectflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_supercontesteffectflavortext_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_supercontesteffect_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_supercontesteffect_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffect))), graphql_name='nodes')


class pokemon_v2_supercontesteffect_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_supercontesteffect_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffect_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_supercontesteffect_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_supercontesteffect_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_supercontesteffect_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_supercontesteffect_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_supercontesteffect_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_supercontesteffect_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_supercontesteffect_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_supercontesteffect_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_supercontesteffect_variance_fields', graphql_name='variance')


class pokemon_v2_supercontesteffect_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id')
    appeal = sgqlc.types.Field(Float, graphql_name='appeal')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_supercontesteffect_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id')
    appeal = sgqlc.types.Field(Int, graphql_name='appeal')
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_supercontesteffect_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id')
    appeal = sgqlc.types.Field(Int, graphql_name='appeal')
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_supercontesteffect_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id')
    appeal = sgqlc.types.Field(Float, graphql_name='appeal')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_supercontesteffect_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id')
    appeal = sgqlc.types.Field(Float, graphql_name='appeal')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_supercontesteffect_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id')
    appeal = sgqlc.types.Field(Float, graphql_name='appeal')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_supercontesteffect_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id')
    appeal = sgqlc.types.Field(Int, graphql_name='appeal')
    id = sgqlc.types.Field(Int, graphql_name='id')


class pokemon_v2_supercontesteffect_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id')
    appeal = sgqlc.types.Field(Float, graphql_name='appeal')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_supercontesteffect_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id')
    appeal = sgqlc.types.Field(Float, graphql_name='appeal')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_supercontesteffect_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('appeal', 'id')
    appeal = sgqlc.types.Field(Float, graphql_name='appeal')
    id = sgqlc.types.Field(Float, graphql_name='id')


class pokemon_v2_supercontesteffectflavortext(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'language_id', 'pokemon_v2_language', 'pokemon_v2_supercontesteffect', 'super_contest_effect_id')
    flavor_text = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='flavor_text')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_supercontesteffect = sgqlc.types.Field('pokemon_v2_supercontesteffect', graphql_name='pokemon_v2_supercontesteffect')
    super_contest_effect_id = sgqlc.types.Field(Int, graphql_name='super_contest_effect_id')


class pokemon_v2_supercontesteffectflavortext_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffectflavortext))), graphql_name='nodes')


class pokemon_v2_supercontesteffectflavortext_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffectflavortext_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext_variance_fields', graphql_name='variance')


class pokemon_v2_supercontesteffectflavortext_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'super_contest_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    super_contest_effect_id = sgqlc.types.Field(Float, graphql_name='super_contest_effect_id')


class pokemon_v2_supercontesteffectflavortext_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'language_id', 'super_contest_effect_id')
    flavor_text = sgqlc.types.Field(String, graphql_name='flavor_text')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    super_contest_effect_id = sgqlc.types.Field(Int, graphql_name='super_contest_effect_id')


class pokemon_v2_supercontesteffectflavortext_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('flavor_text', 'id', 'language_id', 'super_contest_effect_id')
    flavor_text = sgqlc.types.Field(String, graphql_name='flavor_text')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    super_contest_effect_id = sgqlc.types.Field(Int, graphql_name='super_contest_effect_id')


class pokemon_v2_supercontesteffectflavortext_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'super_contest_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    super_contest_effect_id = sgqlc.types.Field(Float, graphql_name='super_contest_effect_id')


class pokemon_v2_supercontesteffectflavortext_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'super_contest_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    super_contest_effect_id = sgqlc.types.Field(Float, graphql_name='super_contest_effect_id')


class pokemon_v2_supercontesteffectflavortext_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'super_contest_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    super_contest_effect_id = sgqlc.types.Field(Float, graphql_name='super_contest_effect_id')


class pokemon_v2_supercontesteffectflavortext_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'super_contest_effect_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    super_contest_effect_id = sgqlc.types.Field(Int, graphql_name='super_contest_effect_id')


class pokemon_v2_supercontesteffectflavortext_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'super_contest_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    super_contest_effect_id = sgqlc.types.Field(Float, graphql_name='super_contest_effect_id')


class pokemon_v2_supercontesteffectflavortext_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'super_contest_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    super_contest_effect_id = sgqlc.types.Field(Float, graphql_name='super_contest_effect_id')


class pokemon_v2_supercontesteffectflavortext_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'super_contest_effect_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    super_contest_effect_id = sgqlc.types.Field(Float, graphql_name='super_contest_effect_id')


class pokemon_v2_type(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'move_damage_class_id', 'name', 'pokemon_v2_pokemonevolutions_by_party_type_id', 'pokemon_v2_pokemonevolutions_by_party_type_id_aggregate', 'pokemon_v2_typeefficacies_by_target_type_id', 'pokemon_v2_typeefficacies_by_target_type_id_aggregate', 'pokemon_v2_berries', 'pokemon_v2_berries_aggregate', 'pokemon_v2_generation', 'pokemon_v2_movechanges', 'pokemon_v2_movechanges_aggregate', 'pokemon_v2_movedamageclass', 'pokemon_v2_moves', 'pokemon_v2_moves_aggregate', 'pokemon_v2_pokemonevolutions', 'pokemon_v2_pokemonevolutions_aggregate', 'pokemon_v2_pokemonformtypes', 'pokemon_v2_pokemonformtypes_aggregate', 'pokemon_v2_pokemontypepasts', 'pokemon_v2_pokemontypepasts_aggregate', 'pokemon_v2_pokemontypes', 'pokemon_v2_pokemontypes_aggregate', 'pokemon_v2_typeefficacies', 'pokemon_v2_typeefficacies_aggregate', 'pokemon_v2_typegameindices', 'pokemon_v2_typegameindices_aggregate', 'pokemon_v2_typenames', 'pokemon_v2_typenames_aggregate')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Int, graphql_name='move_damage_class_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_pokemonevolutions_by_party_type_id = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution))), graphql_name='pokemonV2PokemonevolutionsByPartyTypeId', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonevolutions_by_party_type_id_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_pokemonevolution_aggregate), graphql_name='pokemonV2PokemonevolutionsByPartyTypeId_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_typeefficacies_by_target_type_id = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_typeefficacy'))), graphql_name='pokemonV2TypeefficaciesByTargetTypeId', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typeefficacy_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typeefficacy_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typeefficacy_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_typeefficacies_by_target_type_id_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_typeefficacy_aggregate'), graphql_name='pokemonV2TypeefficaciesByTargetTypeId_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typeefficacy_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typeefficacy_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typeefficacy_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berries = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry))), graphql_name='pokemon_v2_berries', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berry_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berries_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_berry_aggregate), graphql_name='pokemon_v2_berries_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berry_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_generation = sgqlc.types.Field('pokemon_v2_generation', graphql_name='pokemon_v2_generation')
    pokemon_v2_movechanges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange))), graphql_name='pokemon_v2_movechanges', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movechange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movechanges_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_movechange_aggregate), graphql_name='pokemon_v2_movechanges_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movechange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movedamageclass = sgqlc.types.Field('pokemon_v2_movedamageclass', graphql_name='pokemon_v2_movedamageclass')
    pokemon_v2_moves = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move))), graphql_name='pokemon_v2_moves', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_move_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moves_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_move_aggregate), graphql_name='pokemon_v2_moves_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_move_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonevolutions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution))), graphql_name='pokemon_v2_pokemonevolutions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonevolutions_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_pokemonevolution_aggregate), graphql_name='pokemon_v2_pokemonevolutions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformtypes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformtype))), graphql_name='pokemon_v2_pokemonformtypes', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformtype_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformtype_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformtype_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformtypes_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_pokemonformtype_aggregate), graphql_name='pokemon_v2_pokemonformtypes_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformtype_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformtype_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformtype_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemontypepasts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontypepast))), graphql_name='pokemon_v2_pokemontypepasts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontypepast_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontypepast_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemontypepast_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemontypepasts_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_pokemontypepast_aggregate), graphql_name='pokemon_v2_pokemontypepasts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontypepast_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontypepast_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemontypepast_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemontypes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontype))), graphql_name='pokemon_v2_pokemontypes', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontype_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontype_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemontype_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemontypes_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_pokemontype_aggregate), graphql_name='pokemon_v2_pokemontypes_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontype_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontype_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemontype_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_typeefficacies = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_typeefficacy'))), graphql_name='pokemon_v2_typeefficacies', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typeefficacy_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typeefficacy_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typeefficacy_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_typeefficacies_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_typeefficacy_aggregate'), graphql_name='pokemon_v2_typeefficacies_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typeefficacy_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typeefficacy_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typeefficacy_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_typegameindices = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_typegameindex'))), graphql_name='pokemon_v2_typegameindices', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typegameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typegameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typegameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_typegameindices_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_typegameindex_aggregate'), graphql_name='pokemon_v2_typegameindices_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typegameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typegameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typegameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_typenames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_typename'))), graphql_name='pokemon_v2_typenames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_typenames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_typename_aggregate'), graphql_name='pokemon_v2_typenames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typename_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_type_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_type_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_type))), graphql_name='nodes')


class pokemon_v2_type_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_type_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_type_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_type_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_type_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_type_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_type_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_type_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_type_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_type_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_type_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_type_variance_fields', graphql_name='variance')


class pokemon_v2_type_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'move_damage_class_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_type_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'move_damage_class_id', 'name')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Int, graphql_name='move_damage_class_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_type_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'move_damage_class_id', 'name')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Int, graphql_name='move_damage_class_id')
    name = sgqlc.types.Field(String, graphql_name='name')


class pokemon_v2_type_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'move_damage_class_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_type_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'move_damage_class_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_type_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'move_damage_class_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_type_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'move_damage_class_id')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Int, graphql_name='move_damage_class_id')


class pokemon_v2_type_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'move_damage_class_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_type_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'move_damage_class_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_type_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'move_damage_class_id')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_damage_class_id = sgqlc.types.Field(Float, graphql_name='move_damage_class_id')


class pokemon_v2_typeefficacy(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('damage_factor', 'damage_type_id', 'id', 'pokemon_v2_type_by_target_type_id', 'pokemon_v2_type', 'target_type_id')
    damage_factor = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='damage_factor')
    damage_type_id = sgqlc.types.Field(Int, graphql_name='damage_type_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokemon_v2_type_by_target_type_id = sgqlc.types.Field('pokemon_v2_type', graphql_name='pokemonV2TypeByTargetTypeId')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type', graphql_name='pokemon_v2_type')
    target_type_id = sgqlc.types.Field(Int, graphql_name='target_type_id')


class pokemon_v2_typeefficacy_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_typeefficacy_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typeefficacy))), graphql_name='nodes')


class pokemon_v2_typeefficacy_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_typeefficacy_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typeefficacy_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_typeefficacy_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_typeefficacy_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_typeefficacy_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_typeefficacy_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_typeefficacy_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_typeefficacy_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_typeefficacy_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_typeefficacy_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_typeefficacy_variance_fields', graphql_name='variance')


class pokemon_v2_typeefficacy_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('damage_factor', 'damage_type_id', 'id', 'target_type_id')
    damage_factor = sgqlc.types.Field(Float, graphql_name='damage_factor')
    damage_type_id = sgqlc.types.Field(Float, graphql_name='damage_type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    target_type_id = sgqlc.types.Field(Float, graphql_name='target_type_id')


class pokemon_v2_typeefficacy_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('damage_factor', 'damage_type_id', 'id', 'target_type_id')
    damage_factor = sgqlc.types.Field(Int, graphql_name='damage_factor')
    damage_type_id = sgqlc.types.Field(Int, graphql_name='damage_type_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    target_type_id = sgqlc.types.Field(Int, graphql_name='target_type_id')


class pokemon_v2_typeefficacy_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('damage_factor', 'damage_type_id', 'id', 'target_type_id')
    damage_factor = sgqlc.types.Field(Int, graphql_name='damage_factor')
    damage_type_id = sgqlc.types.Field(Int, graphql_name='damage_type_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    target_type_id = sgqlc.types.Field(Int, graphql_name='target_type_id')


class pokemon_v2_typeefficacy_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('damage_factor', 'damage_type_id', 'id', 'target_type_id')
    damage_factor = sgqlc.types.Field(Float, graphql_name='damage_factor')
    damage_type_id = sgqlc.types.Field(Float, graphql_name='damage_type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    target_type_id = sgqlc.types.Field(Float, graphql_name='target_type_id')


class pokemon_v2_typeefficacy_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('damage_factor', 'damage_type_id', 'id', 'target_type_id')
    damage_factor = sgqlc.types.Field(Float, graphql_name='damage_factor')
    damage_type_id = sgqlc.types.Field(Float, graphql_name='damage_type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    target_type_id = sgqlc.types.Field(Float, graphql_name='target_type_id')


class pokemon_v2_typeefficacy_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('damage_factor', 'damage_type_id', 'id', 'target_type_id')
    damage_factor = sgqlc.types.Field(Float, graphql_name='damage_factor')
    damage_type_id = sgqlc.types.Field(Float, graphql_name='damage_type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    target_type_id = sgqlc.types.Field(Float, graphql_name='target_type_id')


class pokemon_v2_typeefficacy_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('damage_factor', 'damage_type_id', 'id', 'target_type_id')
    damage_factor = sgqlc.types.Field(Int, graphql_name='damage_factor')
    damage_type_id = sgqlc.types.Field(Int, graphql_name='damage_type_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    target_type_id = sgqlc.types.Field(Int, graphql_name='target_type_id')


class pokemon_v2_typeefficacy_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('damage_factor', 'damage_type_id', 'id', 'target_type_id')
    damage_factor = sgqlc.types.Field(Float, graphql_name='damage_factor')
    damage_type_id = sgqlc.types.Field(Float, graphql_name='damage_type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    target_type_id = sgqlc.types.Field(Float, graphql_name='target_type_id')


class pokemon_v2_typeefficacy_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('damage_factor', 'damage_type_id', 'id', 'target_type_id')
    damage_factor = sgqlc.types.Field(Float, graphql_name='damage_factor')
    damage_type_id = sgqlc.types.Field(Float, graphql_name='damage_type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    target_type_id = sgqlc.types.Field(Float, graphql_name='target_type_id')


class pokemon_v2_typeefficacy_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('damage_factor', 'damage_type_id', 'id', 'target_type_id')
    damage_factor = sgqlc.types.Field(Float, graphql_name='damage_factor')
    damage_type_id = sgqlc.types.Field(Float, graphql_name='damage_type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    target_type_id = sgqlc.types.Field(Float, graphql_name='target_type_id')


class pokemon_v2_typegameindex(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'pokemon_v2_generation', 'pokemon_v2_type', 'type_id')
    game_index = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='game_index')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokemon_v2_generation = sgqlc.types.Field('pokemon_v2_generation', graphql_name='pokemon_v2_generation')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type', graphql_name='pokemon_v2_type')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_typegameindex_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_typegameindex_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typegameindex))), graphql_name='nodes')


class pokemon_v2_typegameindex_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_typegameindex_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typegameindex_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_typegameindex_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_typegameindex_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_typegameindex_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_typegameindex_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_typegameindex_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_typegameindex_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_typegameindex_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_typegameindex_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_typegameindex_variance_fields', graphql_name='variance')


class pokemon_v2_typegameindex_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'type_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_typegameindex_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'type_id')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_typegameindex_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'type_id')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_typegameindex_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'type_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_typegameindex_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'type_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_typegameindex_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'type_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_typegameindex_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'type_id')
    game_index = sgqlc.types.Field(Int, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_typegameindex_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'type_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_typegameindex_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'type_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_typegameindex_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('game_index', 'generation_id', 'id', 'type_id')
    game_index = sgqlc.types.Field(Float, graphql_name='game_index')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_typename(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_v2_language', 'pokemon_v2_type', 'type_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_type = sgqlc.types.Field('pokemon_v2_type', graphql_name='pokemon_v2_type')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_typename_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_typename_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typename))), graphql_name='nodes')


class pokemon_v2_typename_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_typename_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typename_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_typename_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_typename_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_typename_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_typename_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_typename_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_typename_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_typename_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_typename_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_typename_variance_fields', graphql_name='variance')


class pokemon_v2_typename_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_typename_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'type_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_typename_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'type_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_typename_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_typename_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_typename_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_typename_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'type_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    type_id = sgqlc.types.Field(Int, graphql_name='type_id')


class pokemon_v2_typename_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_typename_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_typename_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'type_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    type_id = sgqlc.types.Field(Float, graphql_name='type_id')


class pokemon_v2_version(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'pokemon_v2_encounters', 'pokemon_v2_encounters_aggregate', 'pokemon_v2_locationareaencounterrates', 'pokemon_v2_locationareaencounterrates_aggregate', 'pokemon_v2_pokemongameindices', 'pokemon_v2_pokemongameindices_aggregate', 'pokemon_v2_pokemonitems', 'pokemon_v2_pokemonitems_aggregate', 'pokemon_v2_pokemonspeciesflavortexts', 'pokemon_v2_pokemonspeciesflavortexts_aggregate', 'pokemon_v2_versiongroup', 'pokemon_v2_versionnames', 'pokemon_v2_versionnames_aggregate', 'version_group_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_encounters = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter))), graphql_name='pokemon_v2_encounters', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounter_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounters_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_encounter_aggregate), graphql_name='pokemon_v2_encounters_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounter_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationareaencounterrates = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate))), graphql_name='pokemon_v2_locationareaencounterrates', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationareaencounterrate_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationareaencounterrates_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate_aggregate), graphql_name='pokemon_v2_locationareaencounterrates_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationareaencounterrate_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemongameindices = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemongameindex))), graphql_name='pokemon_v2_pokemongameindices', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemongameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemongameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemongameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemongameindices_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_pokemongameindex_aggregate), graphql_name='pokemon_v2_pokemongameindices_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemongameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemongameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemongameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonitems = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonitem))), graphql_name='pokemon_v2_pokemonitems', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonitem_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonitem_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonitem_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonitems_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_pokemonitem_aggregate), graphql_name='pokemon_v2_pokemonitems_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonitem_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonitem_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonitem_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesflavortexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext))), graphql_name='pokemon_v2_pokemonspeciesflavortexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesflavortexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext_aggregate), graphql_name='pokemon_v2_pokemonspeciesflavortexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup', graphql_name='pokemon_v2_versiongroup')
    pokemon_v2_versionnames = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_versionname'))), graphql_name='pokemon_v2_versionnames', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versionname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versionnames_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_versionname_aggregate'), graphql_name='pokemon_v2_versionnames_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versionname_bool_exp, graphql_name='where', default=None)),
))
    )
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_version_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_version_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_version))), graphql_name='nodes')


class pokemon_v2_version_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_version_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_version_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_version_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_version_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_version_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_version_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_version_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_version_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_version_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_version_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_version_variance_fields', graphql_name='variance')


class pokemon_v2_version_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_version_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'version_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_version_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'name', 'version_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_version_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_version_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_version_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_version_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'version_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_version_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_version_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_version_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_versiongroup(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'name', 'order', 'pokemon_v2_abilitychanges', 'pokemon_v2_abilitychanges_aggregate', 'pokemon_v2_abilityflavortexts', 'pokemon_v2_abilityflavortexts_aggregate', 'pokemon_v2_encounterslots', 'pokemon_v2_encounterslots_aggregate', 'pokemon_v2_generation', 'pokemon_v2_itemflavortexts', 'pokemon_v2_itemflavortexts_aggregate', 'pokemon_v2_machines', 'pokemon_v2_machines_aggregate', 'pokemon_v2_movechanges', 'pokemon_v2_movechanges_aggregate', 'pokemon_v2_moveeffectchanges', 'pokemon_v2_moveeffectchanges_aggregate', 'pokemon_v2_moveflavortexts', 'pokemon_v2_moveflavortexts_aggregate', 'pokemon_v2_pokedexversiongroups', 'pokemon_v2_pokedexversiongroups_aggregate', 'pokemon_v2_pokemonforms', 'pokemon_v2_pokemonforms_aggregate', 'pokemon_v2_pokemonmoves', 'pokemon_v2_pokemonmoves_aggregate', 'pokemon_v2_versiongroupmovelearnmethods', 'pokemon_v2_versiongroupmovelearnmethods_aggregate', 'pokemon_v2_versiongroupregions', 'pokemon_v2_versiongroupregions_aggregate', 'pokemon_v2_versions', 'pokemon_v2_versions_aggregate')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    order = sgqlc.types.Field(Int, graphql_name='order')
    pokemon_v2_abilitychanges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychange))), graphql_name='pokemon_v2_abilitychanges', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilitychange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilitychanges_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_abilitychange_aggregate), graphql_name='pokemon_v2_abilitychanges_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilitychange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilityflavortexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext))), graphql_name='pokemon_v2_abilityflavortexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilityflavortexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_abilityflavortext_aggregate), graphql_name='pokemon_v2_abilityflavortexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterslots = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterslot))), graphql_name='pokemon_v2_encounterslots', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterslot_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterslot_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterslot_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterslots_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_encounterslot_aggregate), graphql_name='pokemon_v2_encounterslots_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterslot_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterslot_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterslot_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_generation = sgqlc.types.Field('pokemon_v2_generation', graphql_name='pokemon_v2_generation')
    pokemon_v2_itemflavortexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext))), graphql_name='pokemon_v2_itemflavortexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemflavortexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_itemflavortext_aggregate), graphql_name='pokemon_v2_itemflavortexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_machines = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine))), graphql_name='pokemon_v2_machines', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_machine_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_machines_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_machine_aggregate), graphql_name='pokemon_v2_machines_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_machine_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movechanges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange))), graphql_name='pokemon_v2_movechanges', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movechange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movechanges_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_movechange_aggregate), graphql_name='pokemon_v2_movechanges_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movechange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffectchanges = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchange))), graphql_name='pokemon_v2_moveeffectchanges', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffectchange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffectchanges_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_moveeffectchange_aggregate), graphql_name='pokemon_v2_moveeffectchanges_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffectchange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveflavortexts = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveflavortext))), graphql_name='pokemon_v2_moveflavortexts', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveflavortexts_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_moveflavortext_aggregate), graphql_name='pokemon_v2_moveflavortexts_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexversiongroups = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexversiongroup))), graphql_name='pokemon_v2_pokedexversiongroups', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexversiongroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexversiongroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexversiongroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexversiongroups_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_pokedexversiongroup_aggregate), graphql_name='pokemon_v2_pokedexversiongroups_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexversiongroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexversiongroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexversiongroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonforms = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonform))), graphql_name='pokemon_v2_pokemonforms', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonform_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonform_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonform_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonforms_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_pokemonform_aggregate), graphql_name='pokemon_v2_pokemonforms_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonform_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonform_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonform_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonmoves = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove))), graphql_name='pokemon_v2_pokemonmoves', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonmove_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonmoves_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_pokemonmove_aggregate), graphql_name='pokemon_v2_pokemonmoves_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonmove_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroupmovelearnmethods = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_versiongroupmovelearnmethod'))), graphql_name='pokemon_v2_versiongroupmovelearnmethods', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupmovelearnmethod_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupmovelearnmethod_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versiongroupmovelearnmethod_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroupmovelearnmethods_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_versiongroupmovelearnmethod_aggregate'), graphql_name='pokemon_v2_versiongroupmovelearnmethods_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupmovelearnmethod_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupmovelearnmethod_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versiongroupmovelearnmethod_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroupregions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_versiongroupregion'))), graphql_name='pokemon_v2_versiongroupregions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupregion_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupregion_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versiongroupregion_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroupregions_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_versiongroupregion_aggregate'), graphql_name='pokemon_v2_versiongroupregions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupregion_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupregion_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versiongroupregion_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versions = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_version))), graphql_name='pokemon_v2_versions', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_version_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_version_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_version_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versions_aggregate = sgqlc.types.Field(sgqlc.types.non_null(pokemon_v2_version_aggregate), graphql_name='pokemon_v2_versions_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_version_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_version_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_version_bool_exp, graphql_name='where', default=None)),
))
    )


class pokemon_v2_versiongroup_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_versiongroup_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroup))), graphql_name='nodes')


class pokemon_v2_versiongroup_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_versiongroup_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroup_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_versiongroup_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_versiongroup_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_versiongroup_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_versiongroup_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_versiongroup_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_versiongroup_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_versiongroup_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_versiongroup_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_versiongroup_variance_fields', graphql_name='variance')


class pokemon_v2_versiongroup_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'order')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')


class pokemon_v2_versiongroup_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'name', 'order')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')
    order = sgqlc.types.Field(Int, graphql_name='order')


class pokemon_v2_versiongroup_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'name', 'order')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    name = sgqlc.types.Field(String, graphql_name='name')
    order = sgqlc.types.Field(Int, graphql_name='order')


class pokemon_v2_versiongroup_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'order')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')


class pokemon_v2_versiongroup_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'order')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')


class pokemon_v2_versiongroup_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'order')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')


class pokemon_v2_versiongroup_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'order')
    generation_id = sgqlc.types.Field(Int, graphql_name='generation_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    order = sgqlc.types.Field(Int, graphql_name='order')


class pokemon_v2_versiongroup_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'order')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')


class pokemon_v2_versiongroup_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'order')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')


class pokemon_v2_versiongroup_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('generation_id', 'id', 'order')
    generation_id = sgqlc.types.Field(Float, graphql_name='generation_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    order = sgqlc.types.Field(Float, graphql_name='order')


class pokemon_v2_versiongroupmovelearnmethod(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_learn_method_id', 'pokemon_v2_movelearnmethod', 'pokemon_v2_versiongroup', 'version_group_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    move_learn_method_id = sgqlc.types.Field(Int, graphql_name='move_learn_method_id')
    pokemon_v2_movelearnmethod = sgqlc.types.Field('pokemon_v2_movelearnmethod', graphql_name='pokemon_v2_movelearnmethod')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup', graphql_name='pokemon_v2_versiongroup')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_versiongroupmovelearnmethod_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupmovelearnmethod))), graphql_name='nodes')


class pokemon_v2_versiongroupmovelearnmethod_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupmovelearnmethod_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod_variance_fields', graphql_name='variance')


class pokemon_v2_versiongroupmovelearnmethod_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_learn_method_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_versiongroupmovelearnmethod_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_learn_method_id', 'version_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_learn_method_id = sgqlc.types.Field(Int, graphql_name='move_learn_method_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_versiongroupmovelearnmethod_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_learn_method_id', 'version_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_learn_method_id = sgqlc.types.Field(Int, graphql_name='move_learn_method_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_versiongroupmovelearnmethod_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_learn_method_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_versiongroupmovelearnmethod_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_learn_method_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_versiongroupmovelearnmethod_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_learn_method_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_versiongroupmovelearnmethod_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_learn_method_id', 'version_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    move_learn_method_id = sgqlc.types.Field(Int, graphql_name='move_learn_method_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_versiongroupmovelearnmethod_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_learn_method_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_versiongroupmovelearnmethod_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_learn_method_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_versiongroupmovelearnmethod_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'move_learn_method_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    move_learn_method_id = sgqlc.types.Field(Float, graphql_name='move_learn_method_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_versiongroupregion(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'pokemon_v2_region', 'pokemon_v2_versiongroup', 'region_id', 'version_group_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    pokemon_v2_region = sgqlc.types.Field('pokemon_v2_region', graphql_name='pokemon_v2_region')
    pokemon_v2_versiongroup = sgqlc.types.Field('pokemon_v2_versiongroup', graphql_name='pokemon_v2_versiongroup')
    region_id = sgqlc.types.Field(Int, graphql_name='region_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_versiongroupregion_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_versiongroupregion_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupregion))), graphql_name='nodes')


class pokemon_v2_versiongroupregion_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_versiongroupregion_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupregion_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_versiongroupregion_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_versiongroupregion_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_versiongroupregion_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_versiongroupregion_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_versiongroupregion_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_versiongroupregion_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_versiongroupregion_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_versiongroupregion_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_versiongroupregion_variance_fields', graphql_name='variance')


class pokemon_v2_versiongroupregion_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_versiongroupregion_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id', 'version_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    region_id = sgqlc.types.Field(Int, graphql_name='region_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_versiongroupregion_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id', 'version_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    region_id = sgqlc.types.Field(Int, graphql_name='region_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_versiongroupregion_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_versiongroupregion_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_versiongroupregion_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_versiongroupregion_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id', 'version_group_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    region_id = sgqlc.types.Field(Int, graphql_name='region_id')
    version_group_id = sgqlc.types.Field(Int, graphql_name='version_group_id')


class pokemon_v2_versiongroupregion_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_versiongroupregion_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_versiongroupregion_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'region_id', 'version_group_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    region_id = sgqlc.types.Field(Float, graphql_name='region_id')
    version_group_id = sgqlc.types.Field(Float, graphql_name='version_group_id')


class pokemon_v2_versionname(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'pokemon_v2_language', 'pokemon_v2_version', 'version_id')
    id = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(sgqlc.types.non_null(String), graphql_name='name')
    pokemon_v2_language = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language')
    pokemon_v2_version = sgqlc.types.Field('pokemon_v2_version', graphql_name='pokemon_v2_version')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_versionname_aggregate(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('aggregate', 'nodes')
    aggregate = sgqlc.types.Field('pokemon_v2_versionname_aggregate_fields', graphql_name='aggregate')
    nodes = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versionname))), graphql_name='nodes')


class pokemon_v2_versionname_aggregate_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('avg', 'count', 'max', 'min', 'stddev', 'stddev_pop', 'stddev_samp', 'sum', 'var_pop', 'var_samp', 'variance')
    avg = sgqlc.types.Field('pokemon_v2_versionname_avg_fields', graphql_name='avg')
    count = sgqlc.types.Field(sgqlc.types.non_null(Int), graphql_name='count', args=sgqlc.types.ArgDict((
        ('columns', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versionname_select_column)), graphql_name='columns', default=None)),
        ('distinct', sgqlc.types.Arg(Boolean, graphql_name='distinct', default=None)),
))
    )
    max = sgqlc.types.Field('pokemon_v2_versionname_max_fields', graphql_name='max')
    min = sgqlc.types.Field('pokemon_v2_versionname_min_fields', graphql_name='min')
    stddev = sgqlc.types.Field('pokemon_v2_versionname_stddev_fields', graphql_name='stddev')
    stddev_pop = sgqlc.types.Field('pokemon_v2_versionname_stddev_pop_fields', graphql_name='stddev_pop')
    stddev_samp = sgqlc.types.Field('pokemon_v2_versionname_stddev_samp_fields', graphql_name='stddev_samp')
    sum = sgqlc.types.Field('pokemon_v2_versionname_sum_fields', graphql_name='sum')
    var_pop = sgqlc.types.Field('pokemon_v2_versionname_var_pop_fields', graphql_name='var_pop')
    var_samp = sgqlc.types.Field('pokemon_v2_versionname_var_samp_fields', graphql_name='var_samp')
    variance = sgqlc.types.Field('pokemon_v2_versionname_variance_fields', graphql_name='variance')


class pokemon_v2_versionname_avg_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'version_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_versionname_max_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'version_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_versionname_min_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'name', 'version_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    name = sgqlc.types.Field(String, graphql_name='name')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_versionname_stddev_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'version_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_versionname_stddev_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'version_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_versionname_stddev_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'version_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_versionname_sum_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'version_id')
    id = sgqlc.types.Field(Int, graphql_name='id')
    language_id = sgqlc.types.Field(Int, graphql_name='language_id')
    version_id = sgqlc.types.Field(Int, graphql_name='version_id')


class pokemon_v2_versionname_var_pop_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'version_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_versionname_var_samp_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'version_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class pokemon_v2_versionname_variance_fields(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('id', 'language_id', 'version_id')
    id = sgqlc.types.Field(Float, graphql_name='id')
    language_id = sgqlc.types.Field(Float, graphql_name='language_id')
    version_id = sgqlc.types.Field(Float, graphql_name='version_id')


class query_root(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('pokemon_v2_ability', 'pokemon_v2_ability_aggregate', 'pokemon_v2_ability_by_pk', 'pokemon_v2_abilitychange', 'pokemon_v2_abilitychange_aggregate', 'pokemon_v2_abilitychange_by_pk', 'pokemon_v2_abilitychangeeffecttext', 'pokemon_v2_abilitychangeeffecttext_aggregate', 'pokemon_v2_abilitychangeeffecttext_by_pk', 'pokemon_v2_abilityeffecttext', 'pokemon_v2_abilityeffecttext_aggregate', 'pokemon_v2_abilityeffecttext_by_pk', 'pokemon_v2_abilityflavortext', 'pokemon_v2_abilityflavortext_aggregate', 'pokemon_v2_abilityflavortext_by_pk', 'pokemon_v2_abilityname', 'pokemon_v2_abilityname_aggregate', 'pokemon_v2_abilityname_by_pk', 'pokemon_v2_berry', 'pokemon_v2_berry_aggregate', 'pokemon_v2_berry_by_pk', 'pokemon_v2_berryfirmness', 'pokemon_v2_berryfirmness_aggregate', 'pokemon_v2_berryfirmness_by_pk', 'pokemon_v2_berryfirmnessname', 'pokemon_v2_berryfirmnessname_aggregate', 'pokemon_v2_berryfirmnessname_by_pk', 'pokemon_v2_berryflavor', 'pokemon_v2_berryflavor_aggregate', 'pokemon_v2_berryflavor_by_pk', 'pokemon_v2_berryflavormap', 'pokemon_v2_berryflavormap_aggregate', 'pokemon_v2_berryflavormap_by_pk', 'pokemon_v2_berryflavorname', 'pokemon_v2_berryflavorname_aggregate', 'pokemon_v2_berryflavorname_by_pk', 'pokemon_v2_characteristic', 'pokemon_v2_characteristic_aggregate', 'pokemon_v2_characteristic_by_pk', 'pokemon_v2_characteristicdescription', 'pokemon_v2_characteristicdescription_aggregate', 'pokemon_v2_characteristicdescription_by_pk', 'pokemon_v2_contestcombo', 'pokemon_v2_contestcombo_aggregate', 'pokemon_v2_contestcombo_by_pk', 'pokemon_v2_contesteffect', 'pokemon_v2_contesteffect_aggregate', 'pokemon_v2_contesteffect_by_pk', 'pokemon_v2_contesteffecteffecttext', 'pokemon_v2_contesteffecteffecttext_aggregate', 'pokemon_v2_contesteffecteffecttext_by_pk', 'pokemon_v2_contesteffectflavortext', 'pokemon_v2_contesteffectflavortext_aggregate', 'pokemon_v2_contesteffectflavortext_by_pk', 'pokemon_v2_contesttype', 'pokemon_v2_contesttype_aggregate', 'pokemon_v2_contesttype_by_pk', 'pokemon_v2_contesttypename', 'pokemon_v2_contesttypename_aggregate', 'pokemon_v2_contesttypename_by_pk', 'pokemon_v2_egggroup', 'pokemon_v2_egggroup_aggregate', 'pokemon_v2_egggroup_by_pk', 'pokemon_v2_egggroupname', 'pokemon_v2_egggroupname_aggregate', 'pokemon_v2_egggroupname_by_pk', 'pokemon_v2_encounter', 'pokemon_v2_encounter_aggregate', 'pokemon_v2_encounter_by_pk', 'pokemon_v2_encountercondition', 'pokemon_v2_encountercondition_aggregate', 'pokemon_v2_encountercondition_by_pk', 'pokemon_v2_encounterconditionname', 'pokemon_v2_encounterconditionname_aggregate', 'pokemon_v2_encounterconditionname_by_pk', 'pokemon_v2_encounterconditionvalue', 'pokemon_v2_encounterconditionvalue_aggregate', 'pokemon_v2_encounterconditionvalue_by_pk', 'pokemon_v2_encounterconditionvaluemap', 'pokemon_v2_encounterconditionvaluemap_aggregate', 'pokemon_v2_encounterconditionvaluemap_by_pk', 'pokemon_v2_encounterconditionvaluename', 'pokemon_v2_encounterconditionvaluename_aggregate', 'pokemon_v2_encounterconditionvaluename_by_pk', 'pokemon_v2_encountermethod', 'pokemon_v2_encountermethod_aggregate', 'pokemon_v2_encountermethod_by_pk', 'pokemon_v2_encountermethodname', 'pokemon_v2_encountermethodname_aggregate', 'pokemon_v2_encountermethodname_by_pk', 'pokemon_v2_encounterslot', 'pokemon_v2_encounterslot_aggregate', 'pokemon_v2_encounterslot_by_pk', 'pokemon_v2_evolutionchain', 'pokemon_v2_evolutionchain_aggregate', 'pokemon_v2_evolutionchain_by_pk', 'pokemon_v2_evolutiontrigger', 'pokemon_v2_evolutiontrigger_aggregate', 'pokemon_v2_evolutiontrigger_by_pk', 'pokemon_v2_evolutiontriggername', 'pokemon_v2_evolutiontriggername_aggregate', 'pokemon_v2_evolutiontriggername_by_pk', 'pokemon_v2_experience', 'pokemon_v2_experience_aggregate', 'pokemon_v2_experience_by_pk', 'pokemon_v2_gender', 'pokemon_v2_gender_aggregate', 'pokemon_v2_gender_by_pk', 'pokemon_v2_generation', 'pokemon_v2_generation_aggregate', 'pokemon_v2_generation_by_pk', 'pokemon_v2_generationname', 'pokemon_v2_generationname_aggregate', 'pokemon_v2_generationname_by_pk', 'pokemon_v2_growthrate', 'pokemon_v2_growthrate_aggregate', 'pokemon_v2_growthrate_by_pk', 'pokemon_v2_growthratedescription', 'pokemon_v2_growthratedescription_aggregate', 'pokemon_v2_growthratedescription_by_pk', 'pokemon_v2_item', 'pokemon_v2_item_aggregate', 'pokemon_v2_item_by_pk', 'pokemon_v2_itemattribute', 'pokemon_v2_itemattribute_aggregate', 'pokemon_v2_itemattribute_by_pk', 'pokemon_v2_itemattributedescription', 'pokemon_v2_itemattributedescription_aggregate', 'pokemon_v2_itemattributedescription_by_pk', 'pokemon_v2_itemattributemap', 'pokemon_v2_itemattributemap_aggregate', 'pokemon_v2_itemattributemap_by_pk', 'pokemon_v2_itemattributename', 'pokemon_v2_itemattributename_aggregate', 'pokemon_v2_itemattributename_by_pk', 'pokemon_v2_itemcategory', 'pokemon_v2_itemcategory_aggregate', 'pokemon_v2_itemcategory_by_pk', 'pokemon_v2_itemcategoryname', 'pokemon_v2_itemcategoryname_aggregate', 'pokemon_v2_itemcategoryname_by_pk', 'pokemon_v2_itemeffecttext', 'pokemon_v2_itemeffecttext_aggregate', 'pokemon_v2_itemeffecttext_by_pk', 'pokemon_v2_itemflavortext', 'pokemon_v2_itemflavortext_aggregate', 'pokemon_v2_itemflavortext_by_pk', 'pokemon_v2_itemflingeffect', 'pokemon_v2_itemflingeffect_aggregate', 'pokemon_v2_itemflingeffect_by_pk', 'pokemon_v2_itemflingeffecteffecttext', 'pokemon_v2_itemflingeffecteffecttext_aggregate', 'pokemon_v2_itemflingeffecteffecttext_by_pk', 'pokemon_v2_itemgameindex', 'pokemon_v2_itemgameindex_aggregate', 'pokemon_v2_itemgameindex_by_pk', 'pokemon_v2_itemname', 'pokemon_v2_itemname_aggregate', 'pokemon_v2_itemname_by_pk', 'pokemon_v2_itempocket', 'pokemon_v2_itempocket_aggregate', 'pokemon_v2_itempocket_by_pk', 'pokemon_v2_itempocketname', 'pokemon_v2_itempocketname_aggregate', 'pokemon_v2_itempocketname_by_pk', 'pokemon_v2_itemsprites', 'pokemon_v2_itemsprites_aggregate', 'pokemon_v2_itemsprites_by_pk', 'pokemon_v2_language', 'pokemon_v2_language_aggregate', 'pokemon_v2_language_by_pk', 'pokemon_v2_languagename', 'pokemon_v2_languagename_aggregate', 'pokemon_v2_languagename_by_pk', 'pokemon_v2_location', 'pokemon_v2_location_aggregate', 'pokemon_v2_location_by_pk', 'pokemon_v2_locationarea', 'pokemon_v2_locationarea_aggregate', 'pokemon_v2_locationarea_by_pk', 'pokemon_v2_locationareaencounterrate', 'pokemon_v2_locationareaencounterrate_aggregate', 'pokemon_v2_locationareaencounterrate_by_pk', 'pokemon_v2_locationareaname', 'pokemon_v2_locationareaname_aggregate', 'pokemon_v2_locationareaname_by_pk', 'pokemon_v2_locationgameindex', 'pokemon_v2_locationgameindex_aggregate', 'pokemon_v2_locationgameindex_by_pk', 'pokemon_v2_locationname', 'pokemon_v2_locationname_aggregate', 'pokemon_v2_locationname_by_pk', 'pokemon_v2_machine', 'pokemon_v2_machine_aggregate', 'pokemon_v2_machine_by_pk', 'pokemon_v2_move', 'pokemon_v2_move_aggregate', 'pokemon_v2_move_by_pk', 'pokemon_v2_moveattribute', 'pokemon_v2_moveattribute_aggregate', 'pokemon_v2_moveattribute_by_pk', 'pokemon_v2_moveattributedescription', 'pokemon_v2_moveattributedescription_aggregate', 'pokemon_v2_moveattributedescription_by_pk', 'pokemon_v2_moveattributemap', 'pokemon_v2_moveattributemap_aggregate', 'pokemon_v2_moveattributemap_by_pk', 'pokemon_v2_moveattributename', 'pokemon_v2_moveattributename_aggregate', 'pokemon_v2_moveattributename_by_pk', 'pokemon_v2_movebattlestyle', 'pokemon_v2_movebattlestyle_aggregate', 'pokemon_v2_movebattlestyle_by_pk', 'pokemon_v2_movebattlestylename', 'pokemon_v2_movebattlestylename_aggregate', 'pokemon_v2_movebattlestylename_by_pk', 'pokemon_v2_movechange', 'pokemon_v2_movechange_aggregate', 'pokemon_v2_movechange_by_pk', 'pokemon_v2_movedamageclass', 'pokemon_v2_movedamageclass_aggregate', 'pokemon_v2_movedamageclass_by_pk', 'pokemon_v2_movedamageclassdescription', 'pokemon_v2_movedamageclassdescription_aggregate', 'pokemon_v2_movedamageclassdescription_by_pk', 'pokemon_v2_movedamageclassname', 'pokemon_v2_movedamageclassname_aggregate', 'pokemon_v2_movedamageclassname_by_pk', 'pokemon_v2_moveeffect', 'pokemon_v2_moveeffect_aggregate', 'pokemon_v2_moveeffect_by_pk', 'pokemon_v2_moveeffectchange', 'pokemon_v2_moveeffectchange_aggregate', 'pokemon_v2_moveeffectchange_by_pk', 'pokemon_v2_moveeffectchangeeffecttext', 'pokemon_v2_moveeffectchangeeffecttext_aggregate', 'pokemon_v2_moveeffectchangeeffecttext_by_pk', 'pokemon_v2_moveeffecteffecttext', 'pokemon_v2_moveeffecteffecttext_aggregate', 'pokemon_v2_moveeffecteffecttext_by_pk', 'pokemon_v2_moveflavortext', 'pokemon_v2_moveflavortext_aggregate', 'pokemon_v2_moveflavortext_by_pk', 'pokemon_v2_movelearnmethod', 'pokemon_v2_movelearnmethod_aggregate', 'pokemon_v2_movelearnmethod_by_pk', 'pokemon_v2_movelearnmethoddescription', 'pokemon_v2_movelearnmethoddescription_aggregate', 'pokemon_v2_movelearnmethoddescription_by_pk', 'pokemon_v2_movelearnmethodname', 'pokemon_v2_movelearnmethodname_aggregate', 'pokemon_v2_movelearnmethodname_by_pk', 'pokemon_v2_movemeta', 'pokemon_v2_movemeta_aggregate', 'pokemon_v2_movemeta_by_pk', 'pokemon_v2_movemetaailment', 'pokemon_v2_movemetaailment_aggregate', 'pokemon_v2_movemetaailment_by_pk', 'pokemon_v2_movemetaailmentname', 'pokemon_v2_movemetaailmentname_aggregate', 'pokemon_v2_movemetaailmentname_by_pk', 'pokemon_v2_movemetacategory', 'pokemon_v2_movemetacategory_aggregate', 'pokemon_v2_movemetacategory_by_pk', 'pokemon_v2_movemetacategorydescription', 'pokemon_v2_movemetacategorydescription_aggregate', 'pokemon_v2_movemetacategorydescription_by_pk', 'pokemon_v2_movemetastatchange', 'pokemon_v2_movemetastatchange_aggregate', 'pokemon_v2_movemetastatchange_by_pk', 'pokemon_v2_movename', 'pokemon_v2_movename_aggregate', 'pokemon_v2_movename_by_pk', 'pokemon_v2_movetarget', 'pokemon_v2_movetarget_aggregate', 'pokemon_v2_movetarget_by_pk', 'pokemon_v2_movetargetdescription', 'pokemon_v2_movetargetdescription_aggregate', 'pokemon_v2_movetargetdescription_by_pk', 'pokemon_v2_movetargetname', 'pokemon_v2_movetargetname_aggregate', 'pokemon_v2_movetargetname_by_pk', 'pokemon_v2_nature', 'pokemon_v2_nature_aggregate', 'pokemon_v2_nature_by_pk', 'pokemon_v2_naturebattlestylepreference', 'pokemon_v2_naturebattlestylepreference_aggregate', 'pokemon_v2_naturebattlestylepreference_by_pk', 'pokemon_v2_naturename', 'pokemon_v2_naturename_aggregate', 'pokemon_v2_naturename_by_pk', 'pokemon_v2_naturepokeathlonstat', 'pokemon_v2_naturepokeathlonstat_aggregate', 'pokemon_v2_naturepokeathlonstat_by_pk', 'pokemon_v2_palpark', 'pokemon_v2_palpark_aggregate', 'pokemon_v2_palpark_by_pk', 'pokemon_v2_palparkarea', 'pokemon_v2_palparkarea_aggregate', 'pokemon_v2_palparkarea_by_pk', 'pokemon_v2_palparkareaname', 'pokemon_v2_palparkareaname_aggregate', 'pokemon_v2_palparkareaname_by_pk', 'pokemon_v2_pokeathlonstat', 'pokemon_v2_pokeathlonstat_aggregate', 'pokemon_v2_pokeathlonstat_by_pk', 'pokemon_v2_pokeathlonstatname', 'pokemon_v2_pokeathlonstatname_aggregate', 'pokemon_v2_pokeathlonstatname_by_pk', 'pokemon_v2_pokedex', 'pokemon_v2_pokedex_aggregate', 'pokemon_v2_pokedex_by_pk', 'pokemon_v2_pokedexdescription', 'pokemon_v2_pokedexdescription_aggregate', 'pokemon_v2_pokedexdescription_by_pk', 'pokemon_v2_pokedexname', 'pokemon_v2_pokedexname_aggregate', 'pokemon_v2_pokedexname_by_pk', 'pokemon_v2_pokedexversiongroup', 'pokemon_v2_pokedexversiongroup_aggregate', 'pokemon_v2_pokedexversiongroup_by_pk', 'pokemon_v2_pokemon', 'pokemon_v2_pokemon_aggregate', 'pokemon_v2_pokemon_by_pk', 'pokemon_v2_pokemonability', 'pokemon_v2_pokemonability_aggregate', 'pokemon_v2_pokemonability_by_pk', 'pokemon_v2_pokemoncolor', 'pokemon_v2_pokemoncolor_aggregate', 'pokemon_v2_pokemoncolor_by_pk', 'pokemon_v2_pokemoncolorname', 'pokemon_v2_pokemoncolorname_aggregate', 'pokemon_v2_pokemoncolorname_by_pk', 'pokemon_v2_pokemondexnumber', 'pokemon_v2_pokemondexnumber_aggregate', 'pokemon_v2_pokemondexnumber_by_pk', 'pokemon_v2_pokemonegggroup', 'pokemon_v2_pokemonegggroup_aggregate', 'pokemon_v2_pokemonegggroup_by_pk', 'pokemon_v2_pokemonevolution', 'pokemon_v2_pokemonevolution_aggregate', 'pokemon_v2_pokemonevolution_by_pk', 'pokemon_v2_pokemonform', 'pokemon_v2_pokemonform_aggregate', 'pokemon_v2_pokemonform_by_pk', 'pokemon_v2_pokemonformgeneration', 'pokemon_v2_pokemonformgeneration_aggregate', 'pokemon_v2_pokemonformgeneration_by_pk', 'pokemon_v2_pokemonformname', 'pokemon_v2_pokemonformname_aggregate', 'pokemon_v2_pokemonformname_by_pk', 'pokemon_v2_pokemonformsprites', 'pokemon_v2_pokemonformsprites_aggregate', 'pokemon_v2_pokemonformsprites_by_pk', 'pokemon_v2_pokemonformtype', 'pokemon_v2_pokemonformtype_aggregate', 'pokemon_v2_pokemonformtype_by_pk', 'pokemon_v2_pokemongameindex', 'pokemon_v2_pokemongameindex_aggregate', 'pokemon_v2_pokemongameindex_by_pk', 'pokemon_v2_pokemonhabitat', 'pokemon_v2_pokemonhabitat_aggregate', 'pokemon_v2_pokemonhabitat_by_pk', 'pokemon_v2_pokemonhabitatname', 'pokemon_v2_pokemonhabitatname_aggregate', 'pokemon_v2_pokemonhabitatname_by_pk', 'pokemon_v2_pokemonitem', 'pokemon_v2_pokemonitem_aggregate', 'pokemon_v2_pokemonitem_by_pk', 'pokemon_v2_pokemonmove', 'pokemon_v2_pokemonmove_aggregate', 'pokemon_v2_pokemonmove_by_pk', 'pokemon_v2_pokemonshape', 'pokemon_v2_pokemonshape_aggregate', 'pokemon_v2_pokemonshape_by_pk', 'pokemon_v2_pokemonshapename', 'pokemon_v2_pokemonshapename_aggregate', 'pokemon_v2_pokemonshapename_by_pk', 'pokemon_v2_pokemonspecies', 'pokemon_v2_pokemonspecies_aggregate', 'pokemon_v2_pokemonspecies_by_pk', 'pokemon_v2_pokemonspeciesdescription', 'pokemon_v2_pokemonspeciesdescription_aggregate', 'pokemon_v2_pokemonspeciesdescription_by_pk', 'pokemon_v2_pokemonspeciesflavortext', 'pokemon_v2_pokemonspeciesflavortext_aggregate', 'pokemon_v2_pokemonspeciesflavortext_by_pk', 'pokemon_v2_pokemonspeciesname', 'pokemon_v2_pokemonspeciesname_aggregate', 'pokemon_v2_pokemonspeciesname_by_pk', 'pokemon_v2_pokemonsprites', 'pokemon_v2_pokemonsprites_aggregate', 'pokemon_v2_pokemonsprites_by_pk', 'pokemon_v2_pokemonstat', 'pokemon_v2_pokemonstat_aggregate', 'pokemon_v2_pokemonstat_by_pk', 'pokemon_v2_pokemontype', 'pokemon_v2_pokemontype_aggregate', 'pokemon_v2_pokemontype_by_pk', 'pokemon_v2_pokemontypepast', 'pokemon_v2_pokemontypepast_aggregate', 'pokemon_v2_pokemontypepast_by_pk', 'pokemon_v2_region', 'pokemon_v2_region_aggregate', 'pokemon_v2_region_by_pk', 'pokemon_v2_regionname', 'pokemon_v2_regionname_aggregate', 'pokemon_v2_regionname_by_pk', 'pokemon_v2_stat', 'pokemon_v2_stat_aggregate', 'pokemon_v2_stat_by_pk', 'pokemon_v2_statname', 'pokemon_v2_statname_aggregate', 'pokemon_v2_statname_by_pk', 'pokemon_v2_supercontestcombo', 'pokemon_v2_supercontestcombo_aggregate', 'pokemon_v2_supercontestcombo_by_pk', 'pokemon_v2_supercontesteffect', 'pokemon_v2_supercontesteffect_aggregate', 'pokemon_v2_supercontesteffect_by_pk', 'pokemon_v2_supercontesteffectflavortext', 'pokemon_v2_supercontesteffectflavortext_aggregate', 'pokemon_v2_supercontesteffectflavortext_by_pk', 'pokemon_v2_type', 'pokemon_v2_type_aggregate', 'pokemon_v2_type_by_pk', 'pokemon_v2_typeefficacy', 'pokemon_v2_typeefficacy_aggregate', 'pokemon_v2_typeefficacy_by_pk', 'pokemon_v2_typegameindex', 'pokemon_v2_typegameindex_aggregate', 'pokemon_v2_typegameindex_by_pk', 'pokemon_v2_typename', 'pokemon_v2_typename_aggregate', 'pokemon_v2_typename_by_pk', 'pokemon_v2_version', 'pokemon_v2_version_aggregate', 'pokemon_v2_version_by_pk', 'pokemon_v2_versiongroup', 'pokemon_v2_versiongroup_aggregate', 'pokemon_v2_versiongroup_by_pk', 'pokemon_v2_versiongroupmovelearnmethod', 'pokemon_v2_versiongroupmovelearnmethod_aggregate', 'pokemon_v2_versiongroupmovelearnmethod_by_pk', 'pokemon_v2_versiongroupregion', 'pokemon_v2_versiongroupregion_aggregate', 'pokemon_v2_versiongroupregion_by_pk', 'pokemon_v2_versionname', 'pokemon_v2_versionname_aggregate', 'pokemon_v2_versionname_by_pk')
    pokemon_v2_ability = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_ability'))), graphql_name='pokemon_v2_ability', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_ability_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_ability_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_ability_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_ability_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_ability_aggregate'), graphql_name='pokemon_v2_ability_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_ability_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_ability_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_ability_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_ability_by_pk = sgqlc.types.Field('pokemon_v2_ability', graphql_name='pokemon_v2_ability_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_abilitychange = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilitychange'))), graphql_name='pokemon_v2_abilitychange', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilitychange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilitychange_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_abilitychange_aggregate'), graphql_name='pokemon_v2_abilitychange_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilitychange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilitychange_by_pk = sgqlc.types.Field('pokemon_v2_abilitychange', graphql_name='pokemon_v2_abilitychange_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_abilitychangeeffecttext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilitychangeeffecttext'))), graphql_name='pokemon_v2_abilitychangeeffecttext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychangeeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychangeeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilitychangeeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilitychangeeffecttext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_abilitychangeeffecttext_aggregate'), graphql_name='pokemon_v2_abilitychangeeffecttext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychangeeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychangeeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilitychangeeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilitychangeeffecttext_by_pk = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext', graphql_name='pokemon_v2_abilitychangeeffecttext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_abilityeffecttext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilityeffecttext'))), graphql_name='pokemon_v2_abilityeffecttext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilityeffecttext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_abilityeffecttext_aggregate'), graphql_name='pokemon_v2_abilityeffecttext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilityeffecttext_by_pk = sgqlc.types.Field('pokemon_v2_abilityeffecttext', graphql_name='pokemon_v2_abilityeffecttext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_abilityflavortext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilityflavortext'))), graphql_name='pokemon_v2_abilityflavortext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilityflavortext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_abilityflavortext_aggregate'), graphql_name='pokemon_v2_abilityflavortext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilityflavortext_by_pk = sgqlc.types.Field('pokemon_v2_abilityflavortext', graphql_name='pokemon_v2_abilityflavortext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_abilityname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilityname'))), graphql_name='pokemon_v2_abilityname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilityname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_abilityname_aggregate'), graphql_name='pokemon_v2_abilityname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilityname_by_pk = sgqlc.types.Field('pokemon_v2_abilityname', graphql_name='pokemon_v2_abilityname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_berry = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berry'))), graphql_name='pokemon_v2_berry', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berry_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berry_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_berry_aggregate'), graphql_name='pokemon_v2_berry_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berry_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berry_by_pk = sgqlc.types.Field('pokemon_v2_berry', graphql_name='pokemon_v2_berry_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_berryfirmness = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryfirmness'))), graphql_name='pokemon_v2_berryfirmness', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmness_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmness_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryfirmness_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryfirmness_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_berryfirmness_aggregate'), graphql_name='pokemon_v2_berryfirmness_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmness_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmness_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryfirmness_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryfirmness_by_pk = sgqlc.types.Field('pokemon_v2_berryfirmness', graphql_name='pokemon_v2_berryfirmness_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_berryfirmnessname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryfirmnessname'))), graphql_name='pokemon_v2_berryfirmnessname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmnessname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmnessname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryfirmnessname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryfirmnessname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_berryfirmnessname_aggregate'), graphql_name='pokemon_v2_berryfirmnessname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmnessname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmnessname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryfirmnessname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryfirmnessname_by_pk = sgqlc.types.Field('pokemon_v2_berryfirmnessname', graphql_name='pokemon_v2_berryfirmnessname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_berryflavor = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryflavor'))), graphql_name='pokemon_v2_berryflavor', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavor_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavor_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryflavor_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryflavor_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_berryflavor_aggregate'), graphql_name='pokemon_v2_berryflavor_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavor_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavor_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryflavor_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryflavor_by_pk = sgqlc.types.Field('pokemon_v2_berryflavor', graphql_name='pokemon_v2_berryflavor_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_berryflavormap = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryflavormap'))), graphql_name='pokemon_v2_berryflavormap', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavormap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavormap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryflavormap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryflavormap_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_berryflavormap_aggregate'), graphql_name='pokemon_v2_berryflavormap_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavormap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavormap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryflavormap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryflavormap_by_pk = sgqlc.types.Field('pokemon_v2_berryflavormap', graphql_name='pokemon_v2_berryflavormap_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_berryflavorname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryflavorname'))), graphql_name='pokemon_v2_berryflavorname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavorname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavorname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryflavorname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryflavorname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_berryflavorname_aggregate'), graphql_name='pokemon_v2_berryflavorname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavorname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavorname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryflavorname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryflavorname_by_pk = sgqlc.types.Field('pokemon_v2_berryflavorname', graphql_name='pokemon_v2_berryflavorname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_characteristic = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_characteristic'))), graphql_name='pokemon_v2_characteristic', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristic_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristic_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_characteristic_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_characteristic_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_characteristic_aggregate'), graphql_name='pokemon_v2_characteristic_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristic_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristic_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_characteristic_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_characteristic_by_pk = sgqlc.types.Field('pokemon_v2_characteristic', graphql_name='pokemon_v2_characteristic_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_characteristicdescription = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_characteristicdescription'))), graphql_name='pokemon_v2_characteristicdescription', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristicdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristicdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_characteristicdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_characteristicdescription_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_characteristicdescription_aggregate'), graphql_name='pokemon_v2_characteristicdescription_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristicdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristicdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_characteristicdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_characteristicdescription_by_pk = sgqlc.types.Field('pokemon_v2_characteristicdescription', graphql_name='pokemon_v2_characteristicdescription_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_contestcombo = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contestcombo'))), graphql_name='pokemon_v2_contestcombo', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contestcombo_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contestcombo_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contestcombo_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contestcombo_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_contestcombo_aggregate'), graphql_name='pokemon_v2_contestcombo_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contestcombo_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contestcombo_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contestcombo_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contestcombo_by_pk = sgqlc.types.Field('pokemon_v2_contestcombo', graphql_name='pokemon_v2_contestcombo_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_contesteffect = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contesteffect'))), graphql_name='pokemon_v2_contesteffect', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffect_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffect_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesteffect_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesteffect_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_contesteffect_aggregate'), graphql_name='pokemon_v2_contesteffect_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffect_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffect_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesteffect_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesteffect_by_pk = sgqlc.types.Field('pokemon_v2_contesteffect', graphql_name='pokemon_v2_contesteffect_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_contesteffecteffecttext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contesteffecteffecttext'))), graphql_name='pokemon_v2_contesteffecteffecttext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesteffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesteffecteffecttext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_contesteffecteffecttext_aggregate'), graphql_name='pokemon_v2_contesteffecteffecttext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesteffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesteffecteffecttext_by_pk = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext', graphql_name='pokemon_v2_contesteffecteffecttext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_contesteffectflavortext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contesteffectflavortext'))), graphql_name='pokemon_v2_contesteffectflavortext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffectflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffectflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesteffectflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesteffectflavortext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_contesteffectflavortext_aggregate'), graphql_name='pokemon_v2_contesteffectflavortext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffectflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffectflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesteffectflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesteffectflavortext_by_pk = sgqlc.types.Field('pokemon_v2_contesteffectflavortext', graphql_name='pokemon_v2_contesteffectflavortext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_contesttype = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contesttype'))), graphql_name='pokemon_v2_contesttype', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttype_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttype_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesttype_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesttype_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_contesttype_aggregate'), graphql_name='pokemon_v2_contesttype_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttype_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttype_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesttype_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesttype_by_pk = sgqlc.types.Field('pokemon_v2_contesttype', graphql_name='pokemon_v2_contesttype_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_contesttypename = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contesttypename'))), graphql_name='pokemon_v2_contesttypename', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttypename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttypename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesttypename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesttypename_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_contesttypename_aggregate'), graphql_name='pokemon_v2_contesttypename_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttypename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttypename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesttypename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesttypename_by_pk = sgqlc.types.Field('pokemon_v2_contesttypename', graphql_name='pokemon_v2_contesttypename_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_egggroup = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_egggroup'))), graphql_name='pokemon_v2_egggroup', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_egggroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_egggroup_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_egggroup_aggregate'), graphql_name='pokemon_v2_egggroup_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_egggroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_egggroup_by_pk = sgqlc.types.Field('pokemon_v2_egggroup', graphql_name='pokemon_v2_egggroup_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_egggroupname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_egggroupname'))), graphql_name='pokemon_v2_egggroupname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroupname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroupname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_egggroupname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_egggroupname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_egggroupname_aggregate'), graphql_name='pokemon_v2_egggroupname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroupname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroupname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_egggroupname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_egggroupname_by_pk = sgqlc.types.Field('pokemon_v2_egggroupname', graphql_name='pokemon_v2_egggroupname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_encounter = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounter'))), graphql_name='pokemon_v2_encounter', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounter_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounter_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encounter_aggregate'), graphql_name='pokemon_v2_encounter_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounter_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounter_by_pk = sgqlc.types.Field('pokemon_v2_encounter', graphql_name='pokemon_v2_encounter_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_encountercondition = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encountercondition'))), graphql_name='pokemon_v2_encountercondition', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountercondition_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountercondition_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encountercondition_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encountercondition_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encountercondition_aggregate'), graphql_name='pokemon_v2_encountercondition_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountercondition_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountercondition_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encountercondition_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encountercondition_by_pk = sgqlc.types.Field('pokemon_v2_encountercondition', graphql_name='pokemon_v2_encountercondition_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_encounterconditionname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterconditionname'))), graphql_name='pokemon_v2_encounterconditionname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encounterconditionname_aggregate'), graphql_name='pokemon_v2_encounterconditionname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionname_by_pk = sgqlc.types.Field('pokemon_v2_encounterconditionname', graphql_name='pokemon_v2_encounterconditionname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_encounterconditionvalue = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterconditionvalue'))), graphql_name='pokemon_v2_encounterconditionvalue', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvalue_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvalue_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionvalue_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionvalue_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encounterconditionvalue_aggregate'), graphql_name='pokemon_v2_encounterconditionvalue_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvalue_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvalue_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionvalue_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionvalue_by_pk = sgqlc.types.Field('pokemon_v2_encounterconditionvalue', graphql_name='pokemon_v2_encounterconditionvalue_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_encounterconditionvaluemap = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterconditionvaluemap'))), graphql_name='pokemon_v2_encounterconditionvaluemap', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionvaluemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionvaluemap_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encounterconditionvaluemap_aggregate'), graphql_name='pokemon_v2_encounterconditionvaluemap_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionvaluemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionvaluemap_by_pk = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap', graphql_name='pokemon_v2_encounterconditionvaluemap_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_encounterconditionvaluename = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterconditionvaluename'))), graphql_name='pokemon_v2_encounterconditionvaluename', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionvaluename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionvaluename_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encounterconditionvaluename_aggregate'), graphql_name='pokemon_v2_encounterconditionvaluename_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionvaluename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionvaluename_by_pk = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename', graphql_name='pokemon_v2_encounterconditionvaluename_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_encountermethod = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encountermethod'))), graphql_name='pokemon_v2_encountermethod', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethod_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethod_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encountermethod_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encountermethod_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encountermethod_aggregate'), graphql_name='pokemon_v2_encountermethod_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethod_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethod_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encountermethod_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encountermethod_by_pk = sgqlc.types.Field('pokemon_v2_encountermethod', graphql_name='pokemon_v2_encountermethod_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_encountermethodname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encountermethodname'))), graphql_name='pokemon_v2_encountermethodname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethodname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethodname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encountermethodname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encountermethodname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encountermethodname_aggregate'), graphql_name='pokemon_v2_encountermethodname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethodname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethodname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encountermethodname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encountermethodname_by_pk = sgqlc.types.Field('pokemon_v2_encountermethodname', graphql_name='pokemon_v2_encountermethodname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_encounterslot = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterslot'))), graphql_name='pokemon_v2_encounterslot', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterslot_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterslot_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterslot_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterslot_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encounterslot_aggregate'), graphql_name='pokemon_v2_encounterslot_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterslot_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterslot_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterslot_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterslot_by_pk = sgqlc.types.Field('pokemon_v2_encounterslot', graphql_name='pokemon_v2_encounterslot_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_evolutionchain = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_evolutionchain'))), graphql_name='pokemon_v2_evolutionchain', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutionchain_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutionchain_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_evolutionchain_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_evolutionchain_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_evolutionchain_aggregate'), graphql_name='pokemon_v2_evolutionchain_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutionchain_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutionchain_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_evolutionchain_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_evolutionchain_by_pk = sgqlc.types.Field('pokemon_v2_evolutionchain', graphql_name='pokemon_v2_evolutionchain_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_evolutiontrigger = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_evolutiontrigger'))), graphql_name='pokemon_v2_evolutiontrigger', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontrigger_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontrigger_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_evolutiontrigger_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_evolutiontrigger_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_evolutiontrigger_aggregate'), graphql_name='pokemon_v2_evolutiontrigger_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontrigger_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontrigger_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_evolutiontrigger_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_evolutiontrigger_by_pk = sgqlc.types.Field('pokemon_v2_evolutiontrigger', graphql_name='pokemon_v2_evolutiontrigger_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_evolutiontriggername = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_evolutiontriggername'))), graphql_name='pokemon_v2_evolutiontriggername', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontriggername_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontriggername_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_evolutiontriggername_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_evolutiontriggername_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_evolutiontriggername_aggregate'), graphql_name='pokemon_v2_evolutiontriggername_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontriggername_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontriggername_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_evolutiontriggername_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_evolutiontriggername_by_pk = sgqlc.types.Field('pokemon_v2_evolutiontriggername', graphql_name='pokemon_v2_evolutiontriggername_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_experience = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_experience'))), graphql_name='pokemon_v2_experience', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_experience_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_experience_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_experience_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_experience_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_experience_aggregate'), graphql_name='pokemon_v2_experience_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_experience_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_experience_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_experience_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_experience_by_pk = sgqlc.types.Field('pokemon_v2_experience', graphql_name='pokemon_v2_experience_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_gender = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_gender'))), graphql_name='pokemon_v2_gender', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_gender_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_gender_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_gender_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_gender_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_gender_aggregate'), graphql_name='pokemon_v2_gender_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_gender_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_gender_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_gender_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_gender_by_pk = sgqlc.types.Field('pokemon_v2_gender', graphql_name='pokemon_v2_gender_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_generation = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_generation'))), graphql_name='pokemon_v2_generation', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generation_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generation_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_generation_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_generation_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_generation_aggregate'), graphql_name='pokemon_v2_generation_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generation_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generation_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_generation_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_generation_by_pk = sgqlc.types.Field('pokemon_v2_generation', graphql_name='pokemon_v2_generation_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_generationname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_generationname'))), graphql_name='pokemon_v2_generationname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generationname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generationname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_generationname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_generationname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_generationname_aggregate'), graphql_name='pokemon_v2_generationname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generationname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generationname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_generationname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_generationname_by_pk = sgqlc.types.Field('pokemon_v2_generationname', graphql_name='pokemon_v2_generationname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_growthrate = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_growthrate'))), graphql_name='pokemon_v2_growthrate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthrate_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthrate_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_growthrate_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_growthrate_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_growthrate_aggregate'), graphql_name='pokemon_v2_growthrate_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthrate_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthrate_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_growthrate_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_growthrate_by_pk = sgqlc.types.Field('pokemon_v2_growthrate', graphql_name='pokemon_v2_growthrate_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_growthratedescription = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_growthratedescription'))), graphql_name='pokemon_v2_growthratedescription', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthratedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthratedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_growthratedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_growthratedescription_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_growthratedescription_aggregate'), graphql_name='pokemon_v2_growthratedescription_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthratedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthratedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_growthratedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_growthratedescription_by_pk = sgqlc.types.Field('pokemon_v2_growthratedescription', graphql_name='pokemon_v2_growthratedescription_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_item = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_item'))), graphql_name='pokemon_v2_item', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_item_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_item_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_item_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_item_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_item_aggregate'), graphql_name='pokemon_v2_item_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_item_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_item_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_item_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_item_by_pk = sgqlc.types.Field('pokemon_v2_item', graphql_name='pokemon_v2_item_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemattribute = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemattribute'))), graphql_name='pokemon_v2_itemattribute', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattribute_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattribute_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattribute_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattribute_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemattribute_aggregate'), graphql_name='pokemon_v2_itemattribute_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattribute_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattribute_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattribute_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattribute_by_pk = sgqlc.types.Field('pokemon_v2_itemattribute', graphql_name='pokemon_v2_itemattribute_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemattributedescription = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemattributedescription'))), graphql_name='pokemon_v2_itemattributedescription', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattributedescription_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemattributedescription_aggregate'), graphql_name='pokemon_v2_itemattributedescription_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattributedescription_by_pk = sgqlc.types.Field('pokemon_v2_itemattributedescription', graphql_name='pokemon_v2_itemattributedescription_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemattributemap = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemattributemap'))), graphql_name='pokemon_v2_itemattributemap', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattributemap_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemattributemap_aggregate'), graphql_name='pokemon_v2_itemattributemap_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattributemap_by_pk = sgqlc.types.Field('pokemon_v2_itemattributemap', graphql_name='pokemon_v2_itemattributemap_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemattributename = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemattributename'))), graphql_name='pokemon_v2_itemattributename', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattributename_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemattributename_aggregate'), graphql_name='pokemon_v2_itemattributename_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattributename_by_pk = sgqlc.types.Field('pokemon_v2_itemattributename', graphql_name='pokemon_v2_itemattributename_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemcategory = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemcategory'))), graphql_name='pokemon_v2_itemcategory', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategory_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategory_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemcategory_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemcategory_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemcategory_aggregate'), graphql_name='pokemon_v2_itemcategory_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategory_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategory_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemcategory_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemcategory_by_pk = sgqlc.types.Field('pokemon_v2_itemcategory', graphql_name='pokemon_v2_itemcategory_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemcategoryname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemcategoryname'))), graphql_name='pokemon_v2_itemcategoryname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategoryname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategoryname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemcategoryname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemcategoryname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemcategoryname_aggregate'), graphql_name='pokemon_v2_itemcategoryname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategoryname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategoryname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemcategoryname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemcategoryname_by_pk = sgqlc.types.Field('pokemon_v2_itemcategoryname', graphql_name='pokemon_v2_itemcategoryname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemeffecttext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemeffecttext'))), graphql_name='pokemon_v2_itemeffecttext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemeffecttext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemeffecttext_aggregate'), graphql_name='pokemon_v2_itemeffecttext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemeffecttext_by_pk = sgqlc.types.Field('pokemon_v2_itemeffecttext', graphql_name='pokemon_v2_itemeffecttext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemflavortext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemflavortext'))), graphql_name='pokemon_v2_itemflavortext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemflavortext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemflavortext_aggregate'), graphql_name='pokemon_v2_itemflavortext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemflavortext_by_pk = sgqlc.types.Field('pokemon_v2_itemflavortext', graphql_name='pokemon_v2_itemflavortext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemflingeffect = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemflingeffect'))), graphql_name='pokemon_v2_itemflingeffect', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffect_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffect_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemflingeffect_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemflingeffect_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemflingeffect_aggregate'), graphql_name='pokemon_v2_itemflingeffect_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffect_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffect_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemflingeffect_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemflingeffect_by_pk = sgqlc.types.Field('pokemon_v2_itemflingeffect', graphql_name='pokemon_v2_itemflingeffect_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemflingeffecteffecttext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemflingeffecteffecttext'))), graphql_name='pokemon_v2_itemflingeffecteffecttext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemflingeffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemflingeffecteffecttext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemflingeffecteffecttext_aggregate'), graphql_name='pokemon_v2_itemflingeffecteffecttext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemflingeffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemflingeffecteffecttext_by_pk = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext', graphql_name='pokemon_v2_itemflingeffecteffecttext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemgameindex = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemgameindex'))), graphql_name='pokemon_v2_itemgameindex', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemgameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemgameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemgameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemgameindex_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemgameindex_aggregate'), graphql_name='pokemon_v2_itemgameindex_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemgameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemgameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemgameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemgameindex_by_pk = sgqlc.types.Field('pokemon_v2_itemgameindex', graphql_name='pokemon_v2_itemgameindex_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemname'))), graphql_name='pokemon_v2_itemname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemname_aggregate'), graphql_name='pokemon_v2_itemname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemname_by_pk = sgqlc.types.Field('pokemon_v2_itemname', graphql_name='pokemon_v2_itemname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itempocket = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itempocket'))), graphql_name='pokemon_v2_itempocket', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocket_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocket_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itempocket_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itempocket_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itempocket_aggregate'), graphql_name='pokemon_v2_itempocket_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocket_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocket_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itempocket_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itempocket_by_pk = sgqlc.types.Field('pokemon_v2_itempocket', graphql_name='pokemon_v2_itempocket_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itempocketname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itempocketname'))), graphql_name='pokemon_v2_itempocketname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocketname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocketname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itempocketname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itempocketname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itempocketname_aggregate'), graphql_name='pokemon_v2_itempocketname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocketname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocketname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itempocketname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itempocketname_by_pk = sgqlc.types.Field('pokemon_v2_itempocketname', graphql_name='pokemon_v2_itempocketname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemsprites = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemsprites'))), graphql_name='pokemon_v2_itemsprites', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemsprites_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemsprites_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemsprites_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemsprites_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemsprites_aggregate'), graphql_name='pokemon_v2_itemsprites_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemsprites_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemsprites_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemsprites_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemsprites_by_pk = sgqlc.types.Field('pokemon_v2_itemsprites', graphql_name='pokemon_v2_itemsprites_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_language = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_language'))), graphql_name='pokemon_v2_language', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_language_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_language_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_language_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_language_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_language_aggregate'), graphql_name='pokemon_v2_language_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_language_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_language_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_language_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_language_by_pk = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_languagename = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_languagename'))), graphql_name='pokemon_v2_languagename', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_languagename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_languagename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_languagename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_languagename_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_languagename_aggregate'), graphql_name='pokemon_v2_languagename_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_languagename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_languagename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_languagename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_languagename_by_pk = sgqlc.types.Field('pokemon_v2_languagename', graphql_name='pokemon_v2_languagename_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_location = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_location'))), graphql_name='pokemon_v2_location', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_location_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_location_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_location_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_location_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_location_aggregate'), graphql_name='pokemon_v2_location_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_location_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_location_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_location_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_location_by_pk = sgqlc.types.Field('pokemon_v2_location', graphql_name='pokemon_v2_location_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_locationarea = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationarea'))), graphql_name='pokemon_v2_locationarea', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationarea_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationarea_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationarea_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationarea_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_locationarea_aggregate'), graphql_name='pokemon_v2_locationarea_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationarea_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationarea_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationarea_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationarea_by_pk = sgqlc.types.Field('pokemon_v2_locationarea', graphql_name='pokemon_v2_locationarea_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_locationareaencounterrate = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationareaencounterrate'))), graphql_name='pokemon_v2_locationareaencounterrate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationareaencounterrate_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationareaencounterrate_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_locationareaencounterrate_aggregate'), graphql_name='pokemon_v2_locationareaencounterrate_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationareaencounterrate_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationareaencounterrate_by_pk = sgqlc.types.Field('pokemon_v2_locationareaencounterrate', graphql_name='pokemon_v2_locationareaencounterrate_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_locationareaname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationareaname'))), graphql_name='pokemon_v2_locationareaname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationareaname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationareaname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_locationareaname_aggregate'), graphql_name='pokemon_v2_locationareaname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationareaname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationareaname_by_pk = sgqlc.types.Field('pokemon_v2_locationareaname', graphql_name='pokemon_v2_locationareaname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_locationgameindex = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationgameindex'))), graphql_name='pokemon_v2_locationgameindex', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationgameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationgameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationgameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationgameindex_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_locationgameindex_aggregate'), graphql_name='pokemon_v2_locationgameindex_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationgameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationgameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationgameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationgameindex_by_pk = sgqlc.types.Field('pokemon_v2_locationgameindex', graphql_name='pokemon_v2_locationgameindex_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_locationname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationname'))), graphql_name='pokemon_v2_locationname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_locationname_aggregate'), graphql_name='pokemon_v2_locationname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationname_by_pk = sgqlc.types.Field('pokemon_v2_locationname', graphql_name='pokemon_v2_locationname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_machine = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_machine'))), graphql_name='pokemon_v2_machine', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_machine_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_machine_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_machine_aggregate'), graphql_name='pokemon_v2_machine_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_machine_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_machine_by_pk = sgqlc.types.Field('pokemon_v2_machine', graphql_name='pokemon_v2_machine_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_move = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_move'))), graphql_name='pokemon_v2_move', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_move_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_move_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_move_aggregate'), graphql_name='pokemon_v2_move_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_move_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_move_by_pk = sgqlc.types.Field('pokemon_v2_move', graphql_name='pokemon_v2_move_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_moveattribute = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveattribute'))), graphql_name='pokemon_v2_moveattribute', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattribute_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattribute_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattribute_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattribute_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveattribute_aggregate'), graphql_name='pokemon_v2_moveattribute_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattribute_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattribute_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattribute_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattribute_by_pk = sgqlc.types.Field('pokemon_v2_moveattribute', graphql_name='pokemon_v2_moveattribute_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_moveattributedescription = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveattributedescription'))), graphql_name='pokemon_v2_moveattributedescription', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattributedescription_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveattributedescription_aggregate'), graphql_name='pokemon_v2_moveattributedescription_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattributedescription_by_pk = sgqlc.types.Field('pokemon_v2_moveattributedescription', graphql_name='pokemon_v2_moveattributedescription_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_moveattributemap = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveattributemap'))), graphql_name='pokemon_v2_moveattributemap', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattributemap_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveattributemap_aggregate'), graphql_name='pokemon_v2_moveattributemap_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattributemap_by_pk = sgqlc.types.Field('pokemon_v2_moveattributemap', graphql_name='pokemon_v2_moveattributemap_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_moveattributename = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveattributename'))), graphql_name='pokemon_v2_moveattributename', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattributename_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveattributename_aggregate'), graphql_name='pokemon_v2_moveattributename_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattributename_by_pk = sgqlc.types.Field('pokemon_v2_moveattributename', graphql_name='pokemon_v2_moveattributename_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movebattlestyle = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movebattlestyle'))), graphql_name='pokemon_v2_movebattlestyle', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestyle_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestyle_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movebattlestyle_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movebattlestyle_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movebattlestyle_aggregate'), graphql_name='pokemon_v2_movebattlestyle_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestyle_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestyle_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movebattlestyle_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movebattlestyle_by_pk = sgqlc.types.Field('pokemon_v2_movebattlestyle', graphql_name='pokemon_v2_movebattlestyle_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movebattlestylename = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movebattlestylename'))), graphql_name='pokemon_v2_movebattlestylename', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestylename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestylename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movebattlestylename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movebattlestylename_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movebattlestylename_aggregate'), graphql_name='pokemon_v2_movebattlestylename_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestylename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestylename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movebattlestylename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movebattlestylename_by_pk = sgqlc.types.Field('pokemon_v2_movebattlestylename', graphql_name='pokemon_v2_movebattlestylename_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movechange = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movechange'))), graphql_name='pokemon_v2_movechange', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movechange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movechange_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movechange_aggregate'), graphql_name='pokemon_v2_movechange_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movechange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movechange_by_pk = sgqlc.types.Field('pokemon_v2_movechange', graphql_name='pokemon_v2_movechange_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movedamageclass = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movedamageclass'))), graphql_name='pokemon_v2_movedamageclass', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclass_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclass_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movedamageclass_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movedamageclass_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movedamageclass_aggregate'), graphql_name='pokemon_v2_movedamageclass_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclass_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclass_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movedamageclass_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movedamageclass_by_pk = sgqlc.types.Field('pokemon_v2_movedamageclass', graphql_name='pokemon_v2_movedamageclass_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movedamageclassdescription = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movedamageclassdescription'))), graphql_name='pokemon_v2_movedamageclassdescription', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movedamageclassdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movedamageclassdescription_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movedamageclassdescription_aggregate'), graphql_name='pokemon_v2_movedamageclassdescription_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movedamageclassdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movedamageclassdescription_by_pk = sgqlc.types.Field('pokemon_v2_movedamageclassdescription', graphql_name='pokemon_v2_movedamageclassdescription_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movedamageclassname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movedamageclassname'))), graphql_name='pokemon_v2_movedamageclassname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movedamageclassname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movedamageclassname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movedamageclassname_aggregate'), graphql_name='pokemon_v2_movedamageclassname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movedamageclassname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movedamageclassname_by_pk = sgqlc.types.Field('pokemon_v2_movedamageclassname', graphql_name='pokemon_v2_movedamageclassname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_moveeffect = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveeffect'))), graphql_name='pokemon_v2_moveeffect', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffect_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffect_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffect_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffect_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveeffect_aggregate'), graphql_name='pokemon_v2_moveeffect_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffect_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffect_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffect_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffect_by_pk = sgqlc.types.Field('pokemon_v2_moveeffect', graphql_name='pokemon_v2_moveeffect_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_moveeffectchange = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveeffectchange'))), graphql_name='pokemon_v2_moveeffectchange', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffectchange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffectchange_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveeffectchange_aggregate'), graphql_name='pokemon_v2_moveeffectchange_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffectchange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffectchange_by_pk = sgqlc.types.Field('pokemon_v2_moveeffectchange', graphql_name='pokemon_v2_moveeffectchange_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_moveeffectchangeeffecttext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveeffectchangeeffecttext'))), graphql_name='pokemon_v2_moveeffectchangeeffecttext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchangeeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchangeeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffectchangeeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffectchangeeffecttext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveeffectchangeeffecttext_aggregate'), graphql_name='pokemon_v2_moveeffectchangeeffecttext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchangeeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchangeeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffectchangeeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffectchangeeffecttext_by_pk = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext', graphql_name='pokemon_v2_moveeffectchangeeffecttext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_moveeffecteffecttext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveeffecteffecttext'))), graphql_name='pokemon_v2_moveeffecteffecttext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffecteffecttext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveeffecteffecttext_aggregate'), graphql_name='pokemon_v2_moveeffecteffecttext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffecteffecttext_by_pk = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext', graphql_name='pokemon_v2_moveeffecteffecttext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_moveflavortext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveflavortext'))), graphql_name='pokemon_v2_moveflavortext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveflavortext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveflavortext_aggregate'), graphql_name='pokemon_v2_moveflavortext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveflavortext_by_pk = sgqlc.types.Field('pokemon_v2_moveflavortext', graphql_name='pokemon_v2_moveflavortext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movelearnmethod = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movelearnmethod'))), graphql_name='pokemon_v2_movelearnmethod', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethod_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethod_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movelearnmethod_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movelearnmethod_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movelearnmethod_aggregate'), graphql_name='pokemon_v2_movelearnmethod_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethod_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethod_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movelearnmethod_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movelearnmethod_by_pk = sgqlc.types.Field('pokemon_v2_movelearnmethod', graphql_name='pokemon_v2_movelearnmethod_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movelearnmethoddescription = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movelearnmethoddescription'))), graphql_name='pokemon_v2_movelearnmethoddescription', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethoddescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethoddescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movelearnmethoddescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movelearnmethoddescription_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movelearnmethoddescription_aggregate'), graphql_name='pokemon_v2_movelearnmethoddescription_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethoddescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethoddescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movelearnmethoddescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movelearnmethoddescription_by_pk = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription', graphql_name='pokemon_v2_movelearnmethoddescription_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movelearnmethodname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movelearnmethodname'))), graphql_name='pokemon_v2_movelearnmethodname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethodname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethodname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movelearnmethodname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movelearnmethodname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movelearnmethodname_aggregate'), graphql_name='pokemon_v2_movelearnmethodname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethodname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethodname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movelearnmethodname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movelearnmethodname_by_pk = sgqlc.types.Field('pokemon_v2_movelearnmethodname', graphql_name='pokemon_v2_movelearnmethodname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movemeta = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemeta'))), graphql_name='pokemon_v2_movemeta', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemeta_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemeta_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemeta_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemeta_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movemeta_aggregate'), graphql_name='pokemon_v2_movemeta_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemeta_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemeta_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemeta_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemeta_by_pk = sgqlc.types.Field('pokemon_v2_movemeta', graphql_name='pokemon_v2_movemeta_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movemetaailment = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetaailment'))), graphql_name='pokemon_v2_movemetaailment', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailment_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailment_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetaailment_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetaailment_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movemetaailment_aggregate'), graphql_name='pokemon_v2_movemetaailment_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailment_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailment_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetaailment_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetaailment_by_pk = sgqlc.types.Field('pokemon_v2_movemetaailment', graphql_name='pokemon_v2_movemetaailment_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movemetaailmentname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetaailmentname'))), graphql_name='pokemon_v2_movemetaailmentname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailmentname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailmentname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetaailmentname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetaailmentname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movemetaailmentname_aggregate'), graphql_name='pokemon_v2_movemetaailmentname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailmentname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailmentname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetaailmentname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetaailmentname_by_pk = sgqlc.types.Field('pokemon_v2_movemetaailmentname', graphql_name='pokemon_v2_movemetaailmentname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movemetacategory = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetacategory'))), graphql_name='pokemon_v2_movemetacategory', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategory_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategory_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetacategory_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetacategory_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movemetacategory_aggregate'), graphql_name='pokemon_v2_movemetacategory_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategory_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategory_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetacategory_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetacategory_by_pk = sgqlc.types.Field('pokemon_v2_movemetacategory', graphql_name='pokemon_v2_movemetacategory_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movemetacategorydescription = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetacategorydescription'))), graphql_name='pokemon_v2_movemetacategorydescription', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategorydescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategorydescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetacategorydescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetacategorydescription_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movemetacategorydescription_aggregate'), graphql_name='pokemon_v2_movemetacategorydescription_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategorydescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategorydescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetacategorydescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetacategorydescription_by_pk = sgqlc.types.Field('pokemon_v2_movemetacategorydescription', graphql_name='pokemon_v2_movemetacategorydescription_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movemetastatchange = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetastatchange'))), graphql_name='pokemon_v2_movemetastatchange', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetastatchange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetastatchange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetastatchange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetastatchange_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movemetastatchange_aggregate'), graphql_name='pokemon_v2_movemetastatchange_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetastatchange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetastatchange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetastatchange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetastatchange_by_pk = sgqlc.types.Field('pokemon_v2_movemetastatchange', graphql_name='pokemon_v2_movemetastatchange_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movename = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movename'))), graphql_name='pokemon_v2_movename', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movename_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movename_aggregate'), graphql_name='pokemon_v2_movename_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movename_by_pk = sgqlc.types.Field('pokemon_v2_movename', graphql_name='pokemon_v2_movename_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movetarget = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movetarget'))), graphql_name='pokemon_v2_movetarget', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetarget_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetarget_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movetarget_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movetarget_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movetarget_aggregate'), graphql_name='pokemon_v2_movetarget_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetarget_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetarget_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movetarget_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movetarget_by_pk = sgqlc.types.Field('pokemon_v2_movetarget', graphql_name='pokemon_v2_movetarget_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movetargetdescription = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movetargetdescription'))), graphql_name='pokemon_v2_movetargetdescription', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movetargetdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movetargetdescription_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movetargetdescription_aggregate'), graphql_name='pokemon_v2_movetargetdescription_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movetargetdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movetargetdescription_by_pk = sgqlc.types.Field('pokemon_v2_movetargetdescription', graphql_name='pokemon_v2_movetargetdescription_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movetargetname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movetargetname'))), graphql_name='pokemon_v2_movetargetname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movetargetname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movetargetname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movetargetname_aggregate'), graphql_name='pokemon_v2_movetargetname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movetargetname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movetargetname_by_pk = sgqlc.types.Field('pokemon_v2_movetargetname', graphql_name='pokemon_v2_movetargetname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_nature = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_nature'))), graphql_name='pokemon_v2_nature', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_nature_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_nature_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_nature_aggregate'), graphql_name='pokemon_v2_nature_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_nature_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_nature_by_pk = sgqlc.types.Field('pokemon_v2_nature', graphql_name='pokemon_v2_nature_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_naturebattlestylepreference = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_naturebattlestylepreference'))), graphql_name='pokemon_v2_naturebattlestylepreference', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturebattlestylepreference_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturebattlestylepreference_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturebattlestylepreference_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_naturebattlestylepreference_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_naturebattlestylepreference_aggregate'), graphql_name='pokemon_v2_naturebattlestylepreference_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturebattlestylepreference_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturebattlestylepreference_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturebattlestylepreference_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_naturebattlestylepreference_by_pk = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference', graphql_name='pokemon_v2_naturebattlestylepreference_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_naturename = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_naturename'))), graphql_name='pokemon_v2_naturename', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_naturename_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_naturename_aggregate'), graphql_name='pokemon_v2_naturename_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_naturename_by_pk = sgqlc.types.Field('pokemon_v2_naturename', graphql_name='pokemon_v2_naturename_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_naturepokeathlonstat = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_naturepokeathlonstat'))), graphql_name='pokemon_v2_naturepokeathlonstat', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturepokeathlonstat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturepokeathlonstat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturepokeathlonstat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_naturepokeathlonstat_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_naturepokeathlonstat_aggregate'), graphql_name='pokemon_v2_naturepokeathlonstat_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturepokeathlonstat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturepokeathlonstat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturepokeathlonstat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_naturepokeathlonstat_by_pk = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat', graphql_name='pokemon_v2_naturepokeathlonstat_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_palpark = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_palpark'))), graphql_name='pokemon_v2_palpark', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palpark_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palpark_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_palpark_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_palpark_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_palpark_aggregate'), graphql_name='pokemon_v2_palpark_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palpark_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palpark_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_palpark_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_palpark_by_pk = sgqlc.types.Field('pokemon_v2_palpark', graphql_name='pokemon_v2_palpark_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_palparkarea = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_palparkarea'))), graphql_name='pokemon_v2_palparkarea', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkarea_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkarea_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_palparkarea_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_palparkarea_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_palparkarea_aggregate'), graphql_name='pokemon_v2_palparkarea_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkarea_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkarea_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_palparkarea_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_palparkarea_by_pk = sgqlc.types.Field('pokemon_v2_palparkarea', graphql_name='pokemon_v2_palparkarea_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_palparkareaname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_palparkareaname'))), graphql_name='pokemon_v2_palparkareaname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkareaname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkareaname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_palparkareaname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_palparkareaname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_palparkareaname_aggregate'), graphql_name='pokemon_v2_palparkareaname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkareaname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkareaname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_palparkareaname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_palparkareaname_by_pk = sgqlc.types.Field('pokemon_v2_palparkareaname', graphql_name='pokemon_v2_palparkareaname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokeathlonstat = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokeathlonstat'))), graphql_name='pokemon_v2_pokeathlonstat', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokeathlonstat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokeathlonstat_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokeathlonstat_aggregate'), graphql_name='pokemon_v2_pokeathlonstat_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokeathlonstat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokeathlonstat_by_pk = sgqlc.types.Field('pokemon_v2_pokeathlonstat', graphql_name='pokemon_v2_pokeathlonstat_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokeathlonstatname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokeathlonstatname'))), graphql_name='pokemon_v2_pokeathlonstatname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstatname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstatname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokeathlonstatname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokeathlonstatname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokeathlonstatname_aggregate'), graphql_name='pokemon_v2_pokeathlonstatname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstatname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstatname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokeathlonstatname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokeathlonstatname_by_pk = sgqlc.types.Field('pokemon_v2_pokeathlonstatname', graphql_name='pokemon_v2_pokeathlonstatname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokedex = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokedex'))), graphql_name='pokemon_v2_pokedex', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedex_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokedex_aggregate'), graphql_name='pokemon_v2_pokedex_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedex_by_pk = sgqlc.types.Field('pokemon_v2_pokedex', graphql_name='pokemon_v2_pokedex_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokedexdescription = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokedexdescription'))), graphql_name='pokemon_v2_pokedexdescription', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexdescription_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokedexdescription_aggregate'), graphql_name='pokemon_v2_pokedexdescription_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexdescription_by_pk = sgqlc.types.Field('pokemon_v2_pokedexdescription', graphql_name='pokemon_v2_pokedexdescription_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokedexname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokedexname'))), graphql_name='pokemon_v2_pokedexname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokedexname_aggregate'), graphql_name='pokemon_v2_pokedexname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexname_by_pk = sgqlc.types.Field('pokemon_v2_pokedexname', graphql_name='pokemon_v2_pokedexname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokedexversiongroup = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokedexversiongroup'))), graphql_name='pokemon_v2_pokedexversiongroup', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexversiongroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexversiongroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexversiongroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexversiongroup_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokedexversiongroup_aggregate'), graphql_name='pokemon_v2_pokedexversiongroup_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexversiongroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexversiongroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexversiongroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexversiongroup_by_pk = sgqlc.types.Field('pokemon_v2_pokedexversiongroup', graphql_name='pokemon_v2_pokedexversiongroup_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemon = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemon'))), graphql_name='pokemon_v2_pokemon', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemon_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemon_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemon_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemon_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemon_aggregate'), graphql_name='pokemon_v2_pokemon_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemon_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemon_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemon_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemon_by_pk = sgqlc.types.Field('pokemon_v2_pokemon', graphql_name='pokemon_v2_pokemon_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonability = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonability'))), graphql_name='pokemon_v2_pokemonability', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonability_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonability_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonability_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonability_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonability_aggregate'), graphql_name='pokemon_v2_pokemonability_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonability_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonability_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonability_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonability_by_pk = sgqlc.types.Field('pokemon_v2_pokemonability', graphql_name='pokemon_v2_pokemonability_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemoncolor = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemoncolor'))), graphql_name='pokemon_v2_pokemoncolor', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolor_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolor_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemoncolor_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemoncolor_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemoncolor_aggregate'), graphql_name='pokemon_v2_pokemoncolor_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolor_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolor_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemoncolor_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemoncolor_by_pk = sgqlc.types.Field('pokemon_v2_pokemoncolor', graphql_name='pokemon_v2_pokemoncolor_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemoncolorname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemoncolorname'))), graphql_name='pokemon_v2_pokemoncolorname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolorname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolorname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemoncolorname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemoncolorname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemoncolorname_aggregate'), graphql_name='pokemon_v2_pokemoncolorname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolorname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolorname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemoncolorname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemoncolorname_by_pk = sgqlc.types.Field('pokemon_v2_pokemoncolorname', graphql_name='pokemon_v2_pokemoncolorname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemondexnumber = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemondexnumber'))), graphql_name='pokemon_v2_pokemondexnumber', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemondexnumber_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemondexnumber_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemondexnumber_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemondexnumber_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemondexnumber_aggregate'), graphql_name='pokemon_v2_pokemondexnumber_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemondexnumber_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemondexnumber_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemondexnumber_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemondexnumber_by_pk = sgqlc.types.Field('pokemon_v2_pokemondexnumber', graphql_name='pokemon_v2_pokemondexnumber_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonegggroup = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonegggroup'))), graphql_name='pokemon_v2_pokemonegggroup', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonegggroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonegggroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonegggroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonegggroup_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonegggroup_aggregate'), graphql_name='pokemon_v2_pokemonegggroup_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonegggroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonegggroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonegggroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonegggroup_by_pk = sgqlc.types.Field('pokemon_v2_pokemonegggroup', graphql_name='pokemon_v2_pokemonegggroup_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonevolution = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonevolution'))), graphql_name='pokemon_v2_pokemonevolution', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonevolution_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonevolution_aggregate'), graphql_name='pokemon_v2_pokemonevolution_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonevolution_by_pk = sgqlc.types.Field('pokemon_v2_pokemonevolution', graphql_name='pokemon_v2_pokemonevolution_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonform = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonform'))), graphql_name='pokemon_v2_pokemonform', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonform_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonform_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonform_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonform_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonform_aggregate'), graphql_name='pokemon_v2_pokemonform_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonform_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonform_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonform_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonform_by_pk = sgqlc.types.Field('pokemon_v2_pokemonform', graphql_name='pokemon_v2_pokemonform_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonformgeneration = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonformgeneration'))), graphql_name='pokemon_v2_pokemonformgeneration', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformgeneration_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformgeneration_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformgeneration_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformgeneration_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonformgeneration_aggregate'), graphql_name='pokemon_v2_pokemonformgeneration_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformgeneration_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformgeneration_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformgeneration_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformgeneration_by_pk = sgqlc.types.Field('pokemon_v2_pokemonformgeneration', graphql_name='pokemon_v2_pokemonformgeneration_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonformname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonformname'))), graphql_name='pokemon_v2_pokemonformname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonformname_aggregate'), graphql_name='pokemon_v2_pokemonformname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformname_by_pk = sgqlc.types.Field('pokemon_v2_pokemonformname', graphql_name='pokemon_v2_pokemonformname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonformsprites = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonformsprites'))), graphql_name='pokemon_v2_pokemonformsprites', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformsprites_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformsprites_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformsprites_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformsprites_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonformsprites_aggregate'), graphql_name='pokemon_v2_pokemonformsprites_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformsprites_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformsprites_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformsprites_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformsprites_by_pk = sgqlc.types.Field('pokemon_v2_pokemonformsprites', graphql_name='pokemon_v2_pokemonformsprites_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonformtype = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonformtype'))), graphql_name='pokemon_v2_pokemonformtype', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformtype_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformtype_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformtype_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformtype_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonformtype_aggregate'), graphql_name='pokemon_v2_pokemonformtype_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformtype_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformtype_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformtype_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformtype_by_pk = sgqlc.types.Field('pokemon_v2_pokemonformtype', graphql_name='pokemon_v2_pokemonformtype_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemongameindex = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemongameindex'))), graphql_name='pokemon_v2_pokemongameindex', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemongameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemongameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemongameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemongameindex_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemongameindex_aggregate'), graphql_name='pokemon_v2_pokemongameindex_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemongameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemongameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemongameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemongameindex_by_pk = sgqlc.types.Field('pokemon_v2_pokemongameindex', graphql_name='pokemon_v2_pokemongameindex_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonhabitat = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonhabitat'))), graphql_name='pokemon_v2_pokemonhabitat', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonhabitat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonhabitat_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonhabitat_aggregate'), graphql_name='pokemon_v2_pokemonhabitat_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonhabitat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonhabitat_by_pk = sgqlc.types.Field('pokemon_v2_pokemonhabitat', graphql_name='pokemon_v2_pokemonhabitat_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonhabitatname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonhabitatname'))), graphql_name='pokemon_v2_pokemonhabitatname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitatname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitatname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonhabitatname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonhabitatname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonhabitatname_aggregate'), graphql_name='pokemon_v2_pokemonhabitatname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitatname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitatname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonhabitatname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonhabitatname_by_pk = sgqlc.types.Field('pokemon_v2_pokemonhabitatname', graphql_name='pokemon_v2_pokemonhabitatname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonitem = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonitem'))), graphql_name='pokemon_v2_pokemonitem', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonitem_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonitem_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonitem_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonitem_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonitem_aggregate'), graphql_name='pokemon_v2_pokemonitem_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonitem_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonitem_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonitem_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonitem_by_pk = sgqlc.types.Field('pokemon_v2_pokemonitem', graphql_name='pokemon_v2_pokemonitem_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonmove = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonmove'))), graphql_name='pokemon_v2_pokemonmove', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonmove_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonmove_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonmove_aggregate'), graphql_name='pokemon_v2_pokemonmove_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonmove_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonmove_by_pk = sgqlc.types.Field('pokemon_v2_pokemonmove', graphql_name='pokemon_v2_pokemonmove_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonshape = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonshape'))), graphql_name='pokemon_v2_pokemonshape', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshape_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshape_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonshape_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonshape_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonshape_aggregate'), graphql_name='pokemon_v2_pokemonshape_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshape_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshape_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonshape_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonshape_by_pk = sgqlc.types.Field('pokemon_v2_pokemonshape', graphql_name='pokemon_v2_pokemonshape_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonshapename = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonshapename'))), graphql_name='pokemon_v2_pokemonshapename', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshapename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshapename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonshapename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonshapename_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonshapename_aggregate'), graphql_name='pokemon_v2_pokemonshapename_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshapename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshapename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonshapename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonshapename_by_pk = sgqlc.types.Field('pokemon_v2_pokemonshapename', graphql_name='pokemon_v2_pokemonshapename_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonspecies = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspecies'))), graphql_name='pokemon_v2_pokemonspecies', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspecies_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspecies_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonspecies_aggregate'), graphql_name='pokemon_v2_pokemonspecies_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspecies_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspecies_by_pk = sgqlc.types.Field('pokemon_v2_pokemonspecies', graphql_name='pokemon_v2_pokemonspecies_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonspeciesdescription = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspeciesdescription'))), graphql_name='pokemon_v2_pokemonspeciesdescription', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesdescription_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonspeciesdescription_aggregate'), graphql_name='pokemon_v2_pokemonspeciesdescription_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesdescription_by_pk = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription', graphql_name='pokemon_v2_pokemonspeciesdescription_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonspeciesflavortext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspeciesflavortext'))), graphql_name='pokemon_v2_pokemonspeciesflavortext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesflavortext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonspeciesflavortext_aggregate'), graphql_name='pokemon_v2_pokemonspeciesflavortext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesflavortext_by_pk = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext', graphql_name='pokemon_v2_pokemonspeciesflavortext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonspeciesname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspeciesname'))), graphql_name='pokemon_v2_pokemonspeciesname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonspeciesname_aggregate'), graphql_name='pokemon_v2_pokemonspeciesname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesname_by_pk = sgqlc.types.Field('pokemon_v2_pokemonspeciesname', graphql_name='pokemon_v2_pokemonspeciesname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonsprites = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonsprites'))), graphql_name='pokemon_v2_pokemonsprites', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonsprites_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonsprites_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonsprites_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonsprites_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonsprites_aggregate'), graphql_name='pokemon_v2_pokemonsprites_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonsprites_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonsprites_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonsprites_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonsprites_by_pk = sgqlc.types.Field('pokemon_v2_pokemonsprites', graphql_name='pokemon_v2_pokemonsprites_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonstat = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonstat'))), graphql_name='pokemon_v2_pokemonstat', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonstat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonstat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonstat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonstat_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonstat_aggregate'), graphql_name='pokemon_v2_pokemonstat_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonstat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonstat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonstat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonstat_by_pk = sgqlc.types.Field('pokemon_v2_pokemonstat', graphql_name='pokemon_v2_pokemonstat_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemontype = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemontype'))), graphql_name='pokemon_v2_pokemontype', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontype_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontype_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemontype_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemontype_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemontype_aggregate'), graphql_name='pokemon_v2_pokemontype_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontype_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontype_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemontype_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemontype_by_pk = sgqlc.types.Field('pokemon_v2_pokemontype', graphql_name='pokemon_v2_pokemontype_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemontypepast = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemontypepast'))), graphql_name='pokemon_v2_pokemontypepast', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontypepast_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontypepast_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemontypepast_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemontypepast_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemontypepast_aggregate'), graphql_name='pokemon_v2_pokemontypepast_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontypepast_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontypepast_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemontypepast_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemontypepast_by_pk = sgqlc.types.Field('pokemon_v2_pokemontypepast', graphql_name='pokemon_v2_pokemontypepast_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_region = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_region'))), graphql_name='pokemon_v2_region', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_region_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_region_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_region_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_region_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_region_aggregate'), graphql_name='pokemon_v2_region_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_region_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_region_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_region_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_region_by_pk = sgqlc.types.Field('pokemon_v2_region', graphql_name='pokemon_v2_region_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_regionname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_regionname'))), graphql_name='pokemon_v2_regionname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_regionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_regionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_regionname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_regionname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_regionname_aggregate'), graphql_name='pokemon_v2_regionname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_regionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_regionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_regionname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_regionname_by_pk = sgqlc.types.Field('pokemon_v2_regionname', graphql_name='pokemon_v2_regionname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_stat = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_stat'))), graphql_name='pokemon_v2_stat', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_stat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_stat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_stat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_stat_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_stat_aggregate'), graphql_name='pokemon_v2_stat_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_stat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_stat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_stat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_stat_by_pk = sgqlc.types.Field('pokemon_v2_stat', graphql_name='pokemon_v2_stat_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_statname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_statname'))), graphql_name='pokemon_v2_statname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_statname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_statname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_statname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_statname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_statname_aggregate'), graphql_name='pokemon_v2_statname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_statname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_statname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_statname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_statname_by_pk = sgqlc.types.Field('pokemon_v2_statname', graphql_name='pokemon_v2_statname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_supercontestcombo = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_supercontestcombo'))), graphql_name='pokemon_v2_supercontestcombo', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontestcombo_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontestcombo_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_supercontestcombo_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_supercontestcombo_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_supercontestcombo_aggregate'), graphql_name='pokemon_v2_supercontestcombo_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontestcombo_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontestcombo_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_supercontestcombo_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_supercontestcombo_by_pk = sgqlc.types.Field('pokemon_v2_supercontestcombo', graphql_name='pokemon_v2_supercontestcombo_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_supercontesteffect = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_supercontesteffect'))), graphql_name='pokemon_v2_supercontesteffect', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffect_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffect_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_supercontesteffect_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_supercontesteffect_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_supercontesteffect_aggregate'), graphql_name='pokemon_v2_supercontesteffect_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffect_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffect_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_supercontesteffect_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_supercontesteffect_by_pk = sgqlc.types.Field('pokemon_v2_supercontesteffect', graphql_name='pokemon_v2_supercontesteffect_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_supercontesteffectflavortext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_supercontesteffectflavortext'))), graphql_name='pokemon_v2_supercontesteffectflavortext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffectflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffectflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_supercontesteffectflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_supercontesteffectflavortext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_supercontesteffectflavortext_aggregate'), graphql_name='pokemon_v2_supercontesteffectflavortext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffectflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffectflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_supercontesteffectflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_supercontesteffectflavortext_by_pk = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext', graphql_name='pokemon_v2_supercontesteffectflavortext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_type = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_type'))), graphql_name='pokemon_v2_type', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_type_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_type_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_type_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_type_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_type_aggregate'), graphql_name='pokemon_v2_type_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_type_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_type_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_type_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_type_by_pk = sgqlc.types.Field('pokemon_v2_type', graphql_name='pokemon_v2_type_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_typeefficacy = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_typeefficacy'))), graphql_name='pokemon_v2_typeefficacy', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typeefficacy_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typeefficacy_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typeefficacy_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_typeefficacy_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_typeefficacy_aggregate'), graphql_name='pokemon_v2_typeefficacy_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typeefficacy_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typeefficacy_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typeefficacy_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_typeefficacy_by_pk = sgqlc.types.Field('pokemon_v2_typeefficacy', graphql_name='pokemon_v2_typeefficacy_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_typegameindex = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_typegameindex'))), graphql_name='pokemon_v2_typegameindex', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typegameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typegameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typegameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_typegameindex_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_typegameindex_aggregate'), graphql_name='pokemon_v2_typegameindex_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typegameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typegameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typegameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_typegameindex_by_pk = sgqlc.types.Field('pokemon_v2_typegameindex', graphql_name='pokemon_v2_typegameindex_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_typename = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_typename'))), graphql_name='pokemon_v2_typename', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_typename_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_typename_aggregate'), graphql_name='pokemon_v2_typename_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_typename_by_pk = sgqlc.types.Field('pokemon_v2_typename', graphql_name='pokemon_v2_typename_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_version = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_version'))), graphql_name='pokemon_v2_version', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_version_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_version_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_version_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_version_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_version_aggregate'), graphql_name='pokemon_v2_version_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_version_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_version_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_version_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_version_by_pk = sgqlc.types.Field('pokemon_v2_version', graphql_name='pokemon_v2_version_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_versiongroup = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_versiongroup'))), graphql_name='pokemon_v2_versiongroup', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versiongroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroup_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_versiongroup_aggregate'), graphql_name='pokemon_v2_versiongroup_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versiongroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroup_by_pk = sgqlc.types.Field('pokemon_v2_versiongroup', graphql_name='pokemon_v2_versiongroup_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_versiongroupmovelearnmethod = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_versiongroupmovelearnmethod'))), graphql_name='pokemon_v2_versiongroupmovelearnmethod', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupmovelearnmethod_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupmovelearnmethod_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versiongroupmovelearnmethod_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroupmovelearnmethod_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_versiongroupmovelearnmethod_aggregate'), graphql_name='pokemon_v2_versiongroupmovelearnmethod_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupmovelearnmethod_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupmovelearnmethod_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versiongroupmovelearnmethod_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroupmovelearnmethod_by_pk = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod', graphql_name='pokemon_v2_versiongroupmovelearnmethod_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_versiongroupregion = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_versiongroupregion'))), graphql_name='pokemon_v2_versiongroupregion', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupregion_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupregion_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versiongroupregion_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroupregion_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_versiongroupregion_aggregate'), graphql_name='pokemon_v2_versiongroupregion_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupregion_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupregion_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versiongroupregion_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroupregion_by_pk = sgqlc.types.Field('pokemon_v2_versiongroupregion', graphql_name='pokemon_v2_versiongroupregion_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_versionname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_versionname'))), graphql_name='pokemon_v2_versionname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versionname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versionname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_versionname_aggregate'), graphql_name='pokemon_v2_versionname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versionname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versionname_by_pk = sgqlc.types.Field('pokemon_v2_versionname', graphql_name='pokemon_v2_versionname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )


class subscription_root(sgqlc.types.Type):
    __schema__ = pokeapiv1beta_schema
    __field_names__ = ('pokemon_v2_ability', 'pokemon_v2_ability_aggregate', 'pokemon_v2_ability_by_pk', 'pokemon_v2_abilitychange', 'pokemon_v2_abilitychange_aggregate', 'pokemon_v2_abilitychange_by_pk', 'pokemon_v2_abilitychangeeffecttext', 'pokemon_v2_abilitychangeeffecttext_aggregate', 'pokemon_v2_abilitychangeeffecttext_by_pk', 'pokemon_v2_abilityeffecttext', 'pokemon_v2_abilityeffecttext_aggregate', 'pokemon_v2_abilityeffecttext_by_pk', 'pokemon_v2_abilityflavortext', 'pokemon_v2_abilityflavortext_aggregate', 'pokemon_v2_abilityflavortext_by_pk', 'pokemon_v2_abilityname', 'pokemon_v2_abilityname_aggregate', 'pokemon_v2_abilityname_by_pk', 'pokemon_v2_berry', 'pokemon_v2_berry_aggregate', 'pokemon_v2_berry_by_pk', 'pokemon_v2_berryfirmness', 'pokemon_v2_berryfirmness_aggregate', 'pokemon_v2_berryfirmness_by_pk', 'pokemon_v2_berryfirmnessname', 'pokemon_v2_berryfirmnessname_aggregate', 'pokemon_v2_berryfirmnessname_by_pk', 'pokemon_v2_berryflavor', 'pokemon_v2_berryflavor_aggregate', 'pokemon_v2_berryflavor_by_pk', 'pokemon_v2_berryflavormap', 'pokemon_v2_berryflavormap_aggregate', 'pokemon_v2_berryflavormap_by_pk', 'pokemon_v2_berryflavorname', 'pokemon_v2_berryflavorname_aggregate', 'pokemon_v2_berryflavorname_by_pk', 'pokemon_v2_characteristic', 'pokemon_v2_characteristic_aggregate', 'pokemon_v2_characteristic_by_pk', 'pokemon_v2_characteristicdescription', 'pokemon_v2_characteristicdescription_aggregate', 'pokemon_v2_characteristicdescription_by_pk', 'pokemon_v2_contestcombo', 'pokemon_v2_contestcombo_aggregate', 'pokemon_v2_contestcombo_by_pk', 'pokemon_v2_contesteffect', 'pokemon_v2_contesteffect_aggregate', 'pokemon_v2_contesteffect_by_pk', 'pokemon_v2_contesteffecteffecttext', 'pokemon_v2_contesteffecteffecttext_aggregate', 'pokemon_v2_contesteffecteffecttext_by_pk', 'pokemon_v2_contesteffectflavortext', 'pokemon_v2_contesteffectflavortext_aggregate', 'pokemon_v2_contesteffectflavortext_by_pk', 'pokemon_v2_contesttype', 'pokemon_v2_contesttype_aggregate', 'pokemon_v2_contesttype_by_pk', 'pokemon_v2_contesttypename', 'pokemon_v2_contesttypename_aggregate', 'pokemon_v2_contesttypename_by_pk', 'pokemon_v2_egggroup', 'pokemon_v2_egggroup_aggregate', 'pokemon_v2_egggroup_by_pk', 'pokemon_v2_egggroupname', 'pokemon_v2_egggroupname_aggregate', 'pokemon_v2_egggroupname_by_pk', 'pokemon_v2_encounter', 'pokemon_v2_encounter_aggregate', 'pokemon_v2_encounter_by_pk', 'pokemon_v2_encountercondition', 'pokemon_v2_encountercondition_aggregate', 'pokemon_v2_encountercondition_by_pk', 'pokemon_v2_encounterconditionname', 'pokemon_v2_encounterconditionname_aggregate', 'pokemon_v2_encounterconditionname_by_pk', 'pokemon_v2_encounterconditionvalue', 'pokemon_v2_encounterconditionvalue_aggregate', 'pokemon_v2_encounterconditionvalue_by_pk', 'pokemon_v2_encounterconditionvaluemap', 'pokemon_v2_encounterconditionvaluemap_aggregate', 'pokemon_v2_encounterconditionvaluemap_by_pk', 'pokemon_v2_encounterconditionvaluename', 'pokemon_v2_encounterconditionvaluename_aggregate', 'pokemon_v2_encounterconditionvaluename_by_pk', 'pokemon_v2_encountermethod', 'pokemon_v2_encountermethod_aggregate', 'pokemon_v2_encountermethod_by_pk', 'pokemon_v2_encountermethodname', 'pokemon_v2_encountermethodname_aggregate', 'pokemon_v2_encountermethodname_by_pk', 'pokemon_v2_encounterslot', 'pokemon_v2_encounterslot_aggregate', 'pokemon_v2_encounterslot_by_pk', 'pokemon_v2_evolutionchain', 'pokemon_v2_evolutionchain_aggregate', 'pokemon_v2_evolutionchain_by_pk', 'pokemon_v2_evolutiontrigger', 'pokemon_v2_evolutiontrigger_aggregate', 'pokemon_v2_evolutiontrigger_by_pk', 'pokemon_v2_evolutiontriggername', 'pokemon_v2_evolutiontriggername_aggregate', 'pokemon_v2_evolutiontriggername_by_pk', 'pokemon_v2_experience', 'pokemon_v2_experience_aggregate', 'pokemon_v2_experience_by_pk', 'pokemon_v2_gender', 'pokemon_v2_gender_aggregate', 'pokemon_v2_gender_by_pk', 'pokemon_v2_generation', 'pokemon_v2_generation_aggregate', 'pokemon_v2_generation_by_pk', 'pokemon_v2_generationname', 'pokemon_v2_generationname_aggregate', 'pokemon_v2_generationname_by_pk', 'pokemon_v2_growthrate', 'pokemon_v2_growthrate_aggregate', 'pokemon_v2_growthrate_by_pk', 'pokemon_v2_growthratedescription', 'pokemon_v2_growthratedescription_aggregate', 'pokemon_v2_growthratedescription_by_pk', 'pokemon_v2_item', 'pokemon_v2_item_aggregate', 'pokemon_v2_item_by_pk', 'pokemon_v2_itemattribute', 'pokemon_v2_itemattribute_aggregate', 'pokemon_v2_itemattribute_by_pk', 'pokemon_v2_itemattributedescription', 'pokemon_v2_itemattributedescription_aggregate', 'pokemon_v2_itemattributedescription_by_pk', 'pokemon_v2_itemattributemap', 'pokemon_v2_itemattributemap_aggregate', 'pokemon_v2_itemattributemap_by_pk', 'pokemon_v2_itemattributename', 'pokemon_v2_itemattributename_aggregate', 'pokemon_v2_itemattributename_by_pk', 'pokemon_v2_itemcategory', 'pokemon_v2_itemcategory_aggregate', 'pokemon_v2_itemcategory_by_pk', 'pokemon_v2_itemcategoryname', 'pokemon_v2_itemcategoryname_aggregate', 'pokemon_v2_itemcategoryname_by_pk', 'pokemon_v2_itemeffecttext', 'pokemon_v2_itemeffecttext_aggregate', 'pokemon_v2_itemeffecttext_by_pk', 'pokemon_v2_itemflavortext', 'pokemon_v2_itemflavortext_aggregate', 'pokemon_v2_itemflavortext_by_pk', 'pokemon_v2_itemflingeffect', 'pokemon_v2_itemflingeffect_aggregate', 'pokemon_v2_itemflingeffect_by_pk', 'pokemon_v2_itemflingeffecteffecttext', 'pokemon_v2_itemflingeffecteffecttext_aggregate', 'pokemon_v2_itemflingeffecteffecttext_by_pk', 'pokemon_v2_itemgameindex', 'pokemon_v2_itemgameindex_aggregate', 'pokemon_v2_itemgameindex_by_pk', 'pokemon_v2_itemname', 'pokemon_v2_itemname_aggregate', 'pokemon_v2_itemname_by_pk', 'pokemon_v2_itempocket', 'pokemon_v2_itempocket_aggregate', 'pokemon_v2_itempocket_by_pk', 'pokemon_v2_itempocketname', 'pokemon_v2_itempocketname_aggregate', 'pokemon_v2_itempocketname_by_pk', 'pokemon_v2_itemsprites', 'pokemon_v2_itemsprites_aggregate', 'pokemon_v2_itemsprites_by_pk', 'pokemon_v2_language', 'pokemon_v2_language_aggregate', 'pokemon_v2_language_by_pk', 'pokemon_v2_languagename', 'pokemon_v2_languagename_aggregate', 'pokemon_v2_languagename_by_pk', 'pokemon_v2_location', 'pokemon_v2_location_aggregate', 'pokemon_v2_location_by_pk', 'pokemon_v2_locationarea', 'pokemon_v2_locationarea_aggregate', 'pokemon_v2_locationarea_by_pk', 'pokemon_v2_locationareaencounterrate', 'pokemon_v2_locationareaencounterrate_aggregate', 'pokemon_v2_locationareaencounterrate_by_pk', 'pokemon_v2_locationareaname', 'pokemon_v2_locationareaname_aggregate', 'pokemon_v2_locationareaname_by_pk', 'pokemon_v2_locationgameindex', 'pokemon_v2_locationgameindex_aggregate', 'pokemon_v2_locationgameindex_by_pk', 'pokemon_v2_locationname', 'pokemon_v2_locationname_aggregate', 'pokemon_v2_locationname_by_pk', 'pokemon_v2_machine', 'pokemon_v2_machine_aggregate', 'pokemon_v2_machine_by_pk', 'pokemon_v2_move', 'pokemon_v2_move_aggregate', 'pokemon_v2_move_by_pk', 'pokemon_v2_moveattribute', 'pokemon_v2_moveattribute_aggregate', 'pokemon_v2_moveattribute_by_pk', 'pokemon_v2_moveattributedescription', 'pokemon_v2_moveattributedescription_aggregate', 'pokemon_v2_moveattributedescription_by_pk', 'pokemon_v2_moveattributemap', 'pokemon_v2_moveattributemap_aggregate', 'pokemon_v2_moveattributemap_by_pk', 'pokemon_v2_moveattributename', 'pokemon_v2_moveattributename_aggregate', 'pokemon_v2_moveattributename_by_pk', 'pokemon_v2_movebattlestyle', 'pokemon_v2_movebattlestyle_aggregate', 'pokemon_v2_movebattlestyle_by_pk', 'pokemon_v2_movebattlestylename', 'pokemon_v2_movebattlestylename_aggregate', 'pokemon_v2_movebattlestylename_by_pk', 'pokemon_v2_movechange', 'pokemon_v2_movechange_aggregate', 'pokemon_v2_movechange_by_pk', 'pokemon_v2_movedamageclass', 'pokemon_v2_movedamageclass_aggregate', 'pokemon_v2_movedamageclass_by_pk', 'pokemon_v2_movedamageclassdescription', 'pokemon_v2_movedamageclassdescription_aggregate', 'pokemon_v2_movedamageclassdescription_by_pk', 'pokemon_v2_movedamageclassname', 'pokemon_v2_movedamageclassname_aggregate', 'pokemon_v2_movedamageclassname_by_pk', 'pokemon_v2_moveeffect', 'pokemon_v2_moveeffect_aggregate', 'pokemon_v2_moveeffect_by_pk', 'pokemon_v2_moveeffectchange', 'pokemon_v2_moveeffectchange_aggregate', 'pokemon_v2_moveeffectchange_by_pk', 'pokemon_v2_moveeffectchangeeffecttext', 'pokemon_v2_moveeffectchangeeffecttext_aggregate', 'pokemon_v2_moveeffectchangeeffecttext_by_pk', 'pokemon_v2_moveeffecteffecttext', 'pokemon_v2_moveeffecteffecttext_aggregate', 'pokemon_v2_moveeffecteffecttext_by_pk', 'pokemon_v2_moveflavortext', 'pokemon_v2_moveflavortext_aggregate', 'pokemon_v2_moveflavortext_by_pk', 'pokemon_v2_movelearnmethod', 'pokemon_v2_movelearnmethod_aggregate', 'pokemon_v2_movelearnmethod_by_pk', 'pokemon_v2_movelearnmethoddescription', 'pokemon_v2_movelearnmethoddescription_aggregate', 'pokemon_v2_movelearnmethoddescription_by_pk', 'pokemon_v2_movelearnmethodname', 'pokemon_v2_movelearnmethodname_aggregate', 'pokemon_v2_movelearnmethodname_by_pk', 'pokemon_v2_movemeta', 'pokemon_v2_movemeta_aggregate', 'pokemon_v2_movemeta_by_pk', 'pokemon_v2_movemetaailment', 'pokemon_v2_movemetaailment_aggregate', 'pokemon_v2_movemetaailment_by_pk', 'pokemon_v2_movemetaailmentname', 'pokemon_v2_movemetaailmentname_aggregate', 'pokemon_v2_movemetaailmentname_by_pk', 'pokemon_v2_movemetacategory', 'pokemon_v2_movemetacategory_aggregate', 'pokemon_v2_movemetacategory_by_pk', 'pokemon_v2_movemetacategorydescription', 'pokemon_v2_movemetacategorydescription_aggregate', 'pokemon_v2_movemetacategorydescription_by_pk', 'pokemon_v2_movemetastatchange', 'pokemon_v2_movemetastatchange_aggregate', 'pokemon_v2_movemetastatchange_by_pk', 'pokemon_v2_movename', 'pokemon_v2_movename_aggregate', 'pokemon_v2_movename_by_pk', 'pokemon_v2_movetarget', 'pokemon_v2_movetarget_aggregate', 'pokemon_v2_movetarget_by_pk', 'pokemon_v2_movetargetdescription', 'pokemon_v2_movetargetdescription_aggregate', 'pokemon_v2_movetargetdescription_by_pk', 'pokemon_v2_movetargetname', 'pokemon_v2_movetargetname_aggregate', 'pokemon_v2_movetargetname_by_pk', 'pokemon_v2_nature', 'pokemon_v2_nature_aggregate', 'pokemon_v2_nature_by_pk', 'pokemon_v2_naturebattlestylepreference', 'pokemon_v2_naturebattlestylepreference_aggregate', 'pokemon_v2_naturebattlestylepreference_by_pk', 'pokemon_v2_naturename', 'pokemon_v2_naturename_aggregate', 'pokemon_v2_naturename_by_pk', 'pokemon_v2_naturepokeathlonstat', 'pokemon_v2_naturepokeathlonstat_aggregate', 'pokemon_v2_naturepokeathlonstat_by_pk', 'pokemon_v2_palpark', 'pokemon_v2_palpark_aggregate', 'pokemon_v2_palpark_by_pk', 'pokemon_v2_palparkarea', 'pokemon_v2_palparkarea_aggregate', 'pokemon_v2_palparkarea_by_pk', 'pokemon_v2_palparkareaname', 'pokemon_v2_palparkareaname_aggregate', 'pokemon_v2_palparkareaname_by_pk', 'pokemon_v2_pokeathlonstat', 'pokemon_v2_pokeathlonstat_aggregate', 'pokemon_v2_pokeathlonstat_by_pk', 'pokemon_v2_pokeathlonstatname', 'pokemon_v2_pokeathlonstatname_aggregate', 'pokemon_v2_pokeathlonstatname_by_pk', 'pokemon_v2_pokedex', 'pokemon_v2_pokedex_aggregate', 'pokemon_v2_pokedex_by_pk', 'pokemon_v2_pokedexdescription', 'pokemon_v2_pokedexdescription_aggregate', 'pokemon_v2_pokedexdescription_by_pk', 'pokemon_v2_pokedexname', 'pokemon_v2_pokedexname_aggregate', 'pokemon_v2_pokedexname_by_pk', 'pokemon_v2_pokedexversiongroup', 'pokemon_v2_pokedexversiongroup_aggregate', 'pokemon_v2_pokedexversiongroup_by_pk', 'pokemon_v2_pokemon', 'pokemon_v2_pokemon_aggregate', 'pokemon_v2_pokemon_by_pk', 'pokemon_v2_pokemonability', 'pokemon_v2_pokemonability_aggregate', 'pokemon_v2_pokemonability_by_pk', 'pokemon_v2_pokemoncolor', 'pokemon_v2_pokemoncolor_aggregate', 'pokemon_v2_pokemoncolor_by_pk', 'pokemon_v2_pokemoncolorname', 'pokemon_v2_pokemoncolorname_aggregate', 'pokemon_v2_pokemoncolorname_by_pk', 'pokemon_v2_pokemondexnumber', 'pokemon_v2_pokemondexnumber_aggregate', 'pokemon_v2_pokemondexnumber_by_pk', 'pokemon_v2_pokemonegggroup', 'pokemon_v2_pokemonegggroup_aggregate', 'pokemon_v2_pokemonegggroup_by_pk', 'pokemon_v2_pokemonevolution', 'pokemon_v2_pokemonevolution_aggregate', 'pokemon_v2_pokemonevolution_by_pk', 'pokemon_v2_pokemonform', 'pokemon_v2_pokemonform_aggregate', 'pokemon_v2_pokemonform_by_pk', 'pokemon_v2_pokemonformgeneration', 'pokemon_v2_pokemonformgeneration_aggregate', 'pokemon_v2_pokemonformgeneration_by_pk', 'pokemon_v2_pokemonformname', 'pokemon_v2_pokemonformname_aggregate', 'pokemon_v2_pokemonformname_by_pk', 'pokemon_v2_pokemonformsprites', 'pokemon_v2_pokemonformsprites_aggregate', 'pokemon_v2_pokemonformsprites_by_pk', 'pokemon_v2_pokemonformtype', 'pokemon_v2_pokemonformtype_aggregate', 'pokemon_v2_pokemonformtype_by_pk', 'pokemon_v2_pokemongameindex', 'pokemon_v2_pokemongameindex_aggregate', 'pokemon_v2_pokemongameindex_by_pk', 'pokemon_v2_pokemonhabitat', 'pokemon_v2_pokemonhabitat_aggregate', 'pokemon_v2_pokemonhabitat_by_pk', 'pokemon_v2_pokemonhabitatname', 'pokemon_v2_pokemonhabitatname_aggregate', 'pokemon_v2_pokemonhabitatname_by_pk', 'pokemon_v2_pokemonitem', 'pokemon_v2_pokemonitem_aggregate', 'pokemon_v2_pokemonitem_by_pk', 'pokemon_v2_pokemonmove', 'pokemon_v2_pokemonmove_aggregate', 'pokemon_v2_pokemonmove_by_pk', 'pokemon_v2_pokemonshape', 'pokemon_v2_pokemonshape_aggregate', 'pokemon_v2_pokemonshape_by_pk', 'pokemon_v2_pokemonshapename', 'pokemon_v2_pokemonshapename_aggregate', 'pokemon_v2_pokemonshapename_by_pk', 'pokemon_v2_pokemonspecies', 'pokemon_v2_pokemonspecies_aggregate', 'pokemon_v2_pokemonspecies_by_pk', 'pokemon_v2_pokemonspeciesdescription', 'pokemon_v2_pokemonspeciesdescription_aggregate', 'pokemon_v2_pokemonspeciesdescription_by_pk', 'pokemon_v2_pokemonspeciesflavortext', 'pokemon_v2_pokemonspeciesflavortext_aggregate', 'pokemon_v2_pokemonspeciesflavortext_by_pk', 'pokemon_v2_pokemonspeciesname', 'pokemon_v2_pokemonspeciesname_aggregate', 'pokemon_v2_pokemonspeciesname_by_pk', 'pokemon_v2_pokemonsprites', 'pokemon_v2_pokemonsprites_aggregate', 'pokemon_v2_pokemonsprites_by_pk', 'pokemon_v2_pokemonstat', 'pokemon_v2_pokemonstat_aggregate', 'pokemon_v2_pokemonstat_by_pk', 'pokemon_v2_pokemontype', 'pokemon_v2_pokemontype_aggregate', 'pokemon_v2_pokemontype_by_pk', 'pokemon_v2_pokemontypepast', 'pokemon_v2_pokemontypepast_aggregate', 'pokemon_v2_pokemontypepast_by_pk', 'pokemon_v2_region', 'pokemon_v2_region_aggregate', 'pokemon_v2_region_by_pk', 'pokemon_v2_regionname', 'pokemon_v2_regionname_aggregate', 'pokemon_v2_regionname_by_pk', 'pokemon_v2_stat', 'pokemon_v2_stat_aggregate', 'pokemon_v2_stat_by_pk', 'pokemon_v2_statname', 'pokemon_v2_statname_aggregate', 'pokemon_v2_statname_by_pk', 'pokemon_v2_supercontestcombo', 'pokemon_v2_supercontestcombo_aggregate', 'pokemon_v2_supercontestcombo_by_pk', 'pokemon_v2_supercontesteffect', 'pokemon_v2_supercontesteffect_aggregate', 'pokemon_v2_supercontesteffect_by_pk', 'pokemon_v2_supercontesteffectflavortext', 'pokemon_v2_supercontesteffectflavortext_aggregate', 'pokemon_v2_supercontesteffectflavortext_by_pk', 'pokemon_v2_type', 'pokemon_v2_type_aggregate', 'pokemon_v2_type_by_pk', 'pokemon_v2_typeefficacy', 'pokemon_v2_typeefficacy_aggregate', 'pokemon_v2_typeefficacy_by_pk', 'pokemon_v2_typegameindex', 'pokemon_v2_typegameindex_aggregate', 'pokemon_v2_typegameindex_by_pk', 'pokemon_v2_typename', 'pokemon_v2_typename_aggregate', 'pokemon_v2_typename_by_pk', 'pokemon_v2_version', 'pokemon_v2_version_aggregate', 'pokemon_v2_version_by_pk', 'pokemon_v2_versiongroup', 'pokemon_v2_versiongroup_aggregate', 'pokemon_v2_versiongroup_by_pk', 'pokemon_v2_versiongroupmovelearnmethod', 'pokemon_v2_versiongroupmovelearnmethod_aggregate', 'pokemon_v2_versiongroupmovelearnmethod_by_pk', 'pokemon_v2_versiongroupregion', 'pokemon_v2_versiongroupregion_aggregate', 'pokemon_v2_versiongroupregion_by_pk', 'pokemon_v2_versionname', 'pokemon_v2_versionname_aggregate', 'pokemon_v2_versionname_by_pk')
    pokemon_v2_ability = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_ability'))), graphql_name='pokemon_v2_ability', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_ability_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_ability_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_ability_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_ability_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_ability_aggregate'), graphql_name='pokemon_v2_ability_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_ability_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_ability_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_ability_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_ability_by_pk = sgqlc.types.Field('pokemon_v2_ability', graphql_name='pokemon_v2_ability_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_abilitychange = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilitychange'))), graphql_name='pokemon_v2_abilitychange', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilitychange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilitychange_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_abilitychange_aggregate'), graphql_name='pokemon_v2_abilitychange_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilitychange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilitychange_by_pk = sgqlc.types.Field('pokemon_v2_abilitychange', graphql_name='pokemon_v2_abilitychange_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_abilitychangeeffecttext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilitychangeeffecttext'))), graphql_name='pokemon_v2_abilitychangeeffecttext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychangeeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychangeeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilitychangeeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilitychangeeffecttext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_abilitychangeeffecttext_aggregate'), graphql_name='pokemon_v2_abilitychangeeffecttext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychangeeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilitychangeeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilitychangeeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilitychangeeffecttext_by_pk = sgqlc.types.Field('pokemon_v2_abilitychangeeffecttext', graphql_name='pokemon_v2_abilitychangeeffecttext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_abilityeffecttext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilityeffecttext'))), graphql_name='pokemon_v2_abilityeffecttext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilityeffecttext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_abilityeffecttext_aggregate'), graphql_name='pokemon_v2_abilityeffecttext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilityeffecttext_by_pk = sgqlc.types.Field('pokemon_v2_abilityeffecttext', graphql_name='pokemon_v2_abilityeffecttext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_abilityflavortext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilityflavortext'))), graphql_name='pokemon_v2_abilityflavortext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilityflavortext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_abilityflavortext_aggregate'), graphql_name='pokemon_v2_abilityflavortext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilityflavortext_by_pk = sgqlc.types.Field('pokemon_v2_abilityflavortext', graphql_name='pokemon_v2_abilityflavortext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_abilityname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_abilityname'))), graphql_name='pokemon_v2_abilityname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilityname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_abilityname_aggregate'), graphql_name='pokemon_v2_abilityname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_abilityname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_abilityname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_abilityname_by_pk = sgqlc.types.Field('pokemon_v2_abilityname', graphql_name='pokemon_v2_abilityname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_berry = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berry'))), graphql_name='pokemon_v2_berry', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berry_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berry_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_berry_aggregate'), graphql_name='pokemon_v2_berry_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berry_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berry_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berry_by_pk = sgqlc.types.Field('pokemon_v2_berry', graphql_name='pokemon_v2_berry_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_berryfirmness = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryfirmness'))), graphql_name='pokemon_v2_berryfirmness', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmness_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmness_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryfirmness_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryfirmness_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_berryfirmness_aggregate'), graphql_name='pokemon_v2_berryfirmness_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmness_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmness_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryfirmness_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryfirmness_by_pk = sgqlc.types.Field('pokemon_v2_berryfirmness', graphql_name='pokemon_v2_berryfirmness_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_berryfirmnessname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryfirmnessname'))), graphql_name='pokemon_v2_berryfirmnessname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmnessname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmnessname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryfirmnessname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryfirmnessname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_berryfirmnessname_aggregate'), graphql_name='pokemon_v2_berryfirmnessname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmnessname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryfirmnessname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryfirmnessname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryfirmnessname_by_pk = sgqlc.types.Field('pokemon_v2_berryfirmnessname', graphql_name='pokemon_v2_berryfirmnessname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_berryflavor = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryflavor'))), graphql_name='pokemon_v2_berryflavor', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavor_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavor_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryflavor_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryflavor_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_berryflavor_aggregate'), graphql_name='pokemon_v2_berryflavor_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavor_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavor_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryflavor_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryflavor_by_pk = sgqlc.types.Field('pokemon_v2_berryflavor', graphql_name='pokemon_v2_berryflavor_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_berryflavormap = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryflavormap'))), graphql_name='pokemon_v2_berryflavormap', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavormap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavormap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryflavormap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryflavormap_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_berryflavormap_aggregate'), graphql_name='pokemon_v2_berryflavormap_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavormap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavormap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryflavormap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryflavormap_by_pk = sgqlc.types.Field('pokemon_v2_berryflavormap', graphql_name='pokemon_v2_berryflavormap_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_berryflavorname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_berryflavorname'))), graphql_name='pokemon_v2_berryflavorname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavorname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavorname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryflavorname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryflavorname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_berryflavorname_aggregate'), graphql_name='pokemon_v2_berryflavorname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavorname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_berryflavorname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_berryflavorname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_berryflavorname_by_pk = sgqlc.types.Field('pokemon_v2_berryflavorname', graphql_name='pokemon_v2_berryflavorname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_characteristic = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_characteristic'))), graphql_name='pokemon_v2_characteristic', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristic_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristic_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_characteristic_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_characteristic_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_characteristic_aggregate'), graphql_name='pokemon_v2_characteristic_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristic_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristic_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_characteristic_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_characteristic_by_pk = sgqlc.types.Field('pokemon_v2_characteristic', graphql_name='pokemon_v2_characteristic_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_characteristicdescription = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_characteristicdescription'))), graphql_name='pokemon_v2_characteristicdescription', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristicdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristicdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_characteristicdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_characteristicdescription_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_characteristicdescription_aggregate'), graphql_name='pokemon_v2_characteristicdescription_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristicdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_characteristicdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_characteristicdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_characteristicdescription_by_pk = sgqlc.types.Field('pokemon_v2_characteristicdescription', graphql_name='pokemon_v2_characteristicdescription_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_contestcombo = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contestcombo'))), graphql_name='pokemon_v2_contestcombo', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contestcombo_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contestcombo_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contestcombo_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contestcombo_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_contestcombo_aggregate'), graphql_name='pokemon_v2_contestcombo_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contestcombo_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contestcombo_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contestcombo_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contestcombo_by_pk = sgqlc.types.Field('pokemon_v2_contestcombo', graphql_name='pokemon_v2_contestcombo_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_contesteffect = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contesteffect'))), graphql_name='pokemon_v2_contesteffect', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffect_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffect_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesteffect_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesteffect_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_contesteffect_aggregate'), graphql_name='pokemon_v2_contesteffect_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffect_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffect_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesteffect_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesteffect_by_pk = sgqlc.types.Field('pokemon_v2_contesteffect', graphql_name='pokemon_v2_contesteffect_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_contesteffecteffecttext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contesteffecteffecttext'))), graphql_name='pokemon_v2_contesteffecteffecttext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesteffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesteffecteffecttext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_contesteffecteffecttext_aggregate'), graphql_name='pokemon_v2_contesteffecteffecttext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesteffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesteffecteffecttext_by_pk = sgqlc.types.Field('pokemon_v2_contesteffecteffecttext', graphql_name='pokemon_v2_contesteffecteffecttext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_contesteffectflavortext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contesteffectflavortext'))), graphql_name='pokemon_v2_contesteffectflavortext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffectflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffectflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesteffectflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesteffectflavortext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_contesteffectflavortext_aggregate'), graphql_name='pokemon_v2_contesteffectflavortext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffectflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesteffectflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesteffectflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesteffectflavortext_by_pk = sgqlc.types.Field('pokemon_v2_contesteffectflavortext', graphql_name='pokemon_v2_contesteffectflavortext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_contesttype = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contesttype'))), graphql_name='pokemon_v2_contesttype', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttype_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttype_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesttype_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesttype_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_contesttype_aggregate'), graphql_name='pokemon_v2_contesttype_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttype_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttype_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesttype_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesttype_by_pk = sgqlc.types.Field('pokemon_v2_contesttype', graphql_name='pokemon_v2_contesttype_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_contesttypename = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_contesttypename'))), graphql_name='pokemon_v2_contesttypename', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttypename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttypename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesttypename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesttypename_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_contesttypename_aggregate'), graphql_name='pokemon_v2_contesttypename_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttypename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_contesttypename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_contesttypename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_contesttypename_by_pk = sgqlc.types.Field('pokemon_v2_contesttypename', graphql_name='pokemon_v2_contesttypename_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_egggroup = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_egggroup'))), graphql_name='pokemon_v2_egggroup', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_egggroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_egggroup_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_egggroup_aggregate'), graphql_name='pokemon_v2_egggroup_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_egggroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_egggroup_by_pk = sgqlc.types.Field('pokemon_v2_egggroup', graphql_name='pokemon_v2_egggroup_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_egggroupname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_egggroupname'))), graphql_name='pokemon_v2_egggroupname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroupname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroupname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_egggroupname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_egggroupname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_egggroupname_aggregate'), graphql_name='pokemon_v2_egggroupname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroupname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_egggroupname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_egggroupname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_egggroupname_by_pk = sgqlc.types.Field('pokemon_v2_egggroupname', graphql_name='pokemon_v2_egggroupname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_encounter = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounter'))), graphql_name='pokemon_v2_encounter', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounter_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounter_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encounter_aggregate'), graphql_name='pokemon_v2_encounter_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounter_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounter_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounter_by_pk = sgqlc.types.Field('pokemon_v2_encounter', graphql_name='pokemon_v2_encounter_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_encountercondition = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encountercondition'))), graphql_name='pokemon_v2_encountercondition', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountercondition_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountercondition_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encountercondition_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encountercondition_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encountercondition_aggregate'), graphql_name='pokemon_v2_encountercondition_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountercondition_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountercondition_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encountercondition_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encountercondition_by_pk = sgqlc.types.Field('pokemon_v2_encountercondition', graphql_name='pokemon_v2_encountercondition_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_encounterconditionname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterconditionname'))), graphql_name='pokemon_v2_encounterconditionname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encounterconditionname_aggregate'), graphql_name='pokemon_v2_encounterconditionname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionname_by_pk = sgqlc.types.Field('pokemon_v2_encounterconditionname', graphql_name='pokemon_v2_encounterconditionname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_encounterconditionvalue = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterconditionvalue'))), graphql_name='pokemon_v2_encounterconditionvalue', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvalue_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvalue_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionvalue_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionvalue_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encounterconditionvalue_aggregate'), graphql_name='pokemon_v2_encounterconditionvalue_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvalue_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvalue_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionvalue_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionvalue_by_pk = sgqlc.types.Field('pokemon_v2_encounterconditionvalue', graphql_name='pokemon_v2_encounterconditionvalue_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_encounterconditionvaluemap = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterconditionvaluemap'))), graphql_name='pokemon_v2_encounterconditionvaluemap', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionvaluemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionvaluemap_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encounterconditionvaluemap_aggregate'), graphql_name='pokemon_v2_encounterconditionvaluemap_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionvaluemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionvaluemap_by_pk = sgqlc.types.Field('pokemon_v2_encounterconditionvaluemap', graphql_name='pokemon_v2_encounterconditionvaluemap_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_encounterconditionvaluename = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterconditionvaluename'))), graphql_name='pokemon_v2_encounterconditionvaluename', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionvaluename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionvaluename_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encounterconditionvaluename_aggregate'), graphql_name='pokemon_v2_encounterconditionvaluename_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterconditionvaluename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterconditionvaluename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterconditionvaluename_by_pk = sgqlc.types.Field('pokemon_v2_encounterconditionvaluename', graphql_name='pokemon_v2_encounterconditionvaluename_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_encountermethod = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encountermethod'))), graphql_name='pokemon_v2_encountermethod', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethod_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethod_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encountermethod_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encountermethod_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encountermethod_aggregate'), graphql_name='pokemon_v2_encountermethod_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethod_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethod_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encountermethod_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encountermethod_by_pk = sgqlc.types.Field('pokemon_v2_encountermethod', graphql_name='pokemon_v2_encountermethod_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_encountermethodname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encountermethodname'))), graphql_name='pokemon_v2_encountermethodname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethodname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethodname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encountermethodname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encountermethodname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encountermethodname_aggregate'), graphql_name='pokemon_v2_encountermethodname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethodname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encountermethodname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encountermethodname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encountermethodname_by_pk = sgqlc.types.Field('pokemon_v2_encountermethodname', graphql_name='pokemon_v2_encountermethodname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_encounterslot = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_encounterslot'))), graphql_name='pokemon_v2_encounterslot', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterslot_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterslot_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterslot_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterslot_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_encounterslot_aggregate'), graphql_name='pokemon_v2_encounterslot_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterslot_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_encounterslot_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_encounterslot_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_encounterslot_by_pk = sgqlc.types.Field('pokemon_v2_encounterslot', graphql_name='pokemon_v2_encounterslot_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_evolutionchain = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_evolutionchain'))), graphql_name='pokemon_v2_evolutionchain', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutionchain_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutionchain_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_evolutionchain_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_evolutionchain_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_evolutionchain_aggregate'), graphql_name='pokemon_v2_evolutionchain_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutionchain_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutionchain_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_evolutionchain_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_evolutionchain_by_pk = sgqlc.types.Field('pokemon_v2_evolutionchain', graphql_name='pokemon_v2_evolutionchain_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_evolutiontrigger = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_evolutiontrigger'))), graphql_name='pokemon_v2_evolutiontrigger', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontrigger_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontrigger_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_evolutiontrigger_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_evolutiontrigger_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_evolutiontrigger_aggregate'), graphql_name='pokemon_v2_evolutiontrigger_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontrigger_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontrigger_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_evolutiontrigger_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_evolutiontrigger_by_pk = sgqlc.types.Field('pokemon_v2_evolutiontrigger', graphql_name='pokemon_v2_evolutiontrigger_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_evolutiontriggername = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_evolutiontriggername'))), graphql_name='pokemon_v2_evolutiontriggername', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontriggername_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontriggername_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_evolutiontriggername_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_evolutiontriggername_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_evolutiontriggername_aggregate'), graphql_name='pokemon_v2_evolutiontriggername_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontriggername_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_evolutiontriggername_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_evolutiontriggername_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_evolutiontriggername_by_pk = sgqlc.types.Field('pokemon_v2_evolutiontriggername', graphql_name='pokemon_v2_evolutiontriggername_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_experience = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_experience'))), graphql_name='pokemon_v2_experience', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_experience_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_experience_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_experience_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_experience_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_experience_aggregate'), graphql_name='pokemon_v2_experience_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_experience_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_experience_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_experience_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_experience_by_pk = sgqlc.types.Field('pokemon_v2_experience', graphql_name='pokemon_v2_experience_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_gender = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_gender'))), graphql_name='pokemon_v2_gender', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_gender_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_gender_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_gender_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_gender_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_gender_aggregate'), graphql_name='pokemon_v2_gender_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_gender_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_gender_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_gender_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_gender_by_pk = sgqlc.types.Field('pokemon_v2_gender', graphql_name='pokemon_v2_gender_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_generation = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_generation'))), graphql_name='pokemon_v2_generation', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generation_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generation_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_generation_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_generation_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_generation_aggregate'), graphql_name='pokemon_v2_generation_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generation_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generation_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_generation_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_generation_by_pk = sgqlc.types.Field('pokemon_v2_generation', graphql_name='pokemon_v2_generation_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_generationname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_generationname'))), graphql_name='pokemon_v2_generationname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generationname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generationname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_generationname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_generationname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_generationname_aggregate'), graphql_name='pokemon_v2_generationname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generationname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_generationname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_generationname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_generationname_by_pk = sgqlc.types.Field('pokemon_v2_generationname', graphql_name='pokemon_v2_generationname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_growthrate = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_growthrate'))), graphql_name='pokemon_v2_growthrate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthrate_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthrate_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_growthrate_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_growthrate_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_growthrate_aggregate'), graphql_name='pokemon_v2_growthrate_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthrate_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthrate_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_growthrate_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_growthrate_by_pk = sgqlc.types.Field('pokemon_v2_growthrate', graphql_name='pokemon_v2_growthrate_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_growthratedescription = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_growthratedescription'))), graphql_name='pokemon_v2_growthratedescription', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthratedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthratedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_growthratedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_growthratedescription_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_growthratedescription_aggregate'), graphql_name='pokemon_v2_growthratedescription_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthratedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_growthratedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_growthratedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_growthratedescription_by_pk = sgqlc.types.Field('pokemon_v2_growthratedescription', graphql_name='pokemon_v2_growthratedescription_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_item = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_item'))), graphql_name='pokemon_v2_item', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_item_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_item_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_item_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_item_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_item_aggregate'), graphql_name='pokemon_v2_item_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_item_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_item_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_item_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_item_by_pk = sgqlc.types.Field('pokemon_v2_item', graphql_name='pokemon_v2_item_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemattribute = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemattribute'))), graphql_name='pokemon_v2_itemattribute', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattribute_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattribute_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattribute_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattribute_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemattribute_aggregate'), graphql_name='pokemon_v2_itemattribute_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattribute_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattribute_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattribute_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattribute_by_pk = sgqlc.types.Field('pokemon_v2_itemattribute', graphql_name='pokemon_v2_itemattribute_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemattributedescription = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemattributedescription'))), graphql_name='pokemon_v2_itemattributedescription', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattributedescription_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemattributedescription_aggregate'), graphql_name='pokemon_v2_itemattributedescription_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattributedescription_by_pk = sgqlc.types.Field('pokemon_v2_itemattributedescription', graphql_name='pokemon_v2_itemattributedescription_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemattributemap = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemattributemap'))), graphql_name='pokemon_v2_itemattributemap', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattributemap_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemattributemap_aggregate'), graphql_name='pokemon_v2_itemattributemap_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattributemap_by_pk = sgqlc.types.Field('pokemon_v2_itemattributemap', graphql_name='pokemon_v2_itemattributemap_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemattributename = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemattributename'))), graphql_name='pokemon_v2_itemattributename', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattributename_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemattributename_aggregate'), graphql_name='pokemon_v2_itemattributename_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemattributename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemattributename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemattributename_by_pk = sgqlc.types.Field('pokemon_v2_itemattributename', graphql_name='pokemon_v2_itemattributename_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemcategory = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemcategory'))), graphql_name='pokemon_v2_itemcategory', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategory_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategory_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemcategory_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemcategory_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemcategory_aggregate'), graphql_name='pokemon_v2_itemcategory_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategory_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategory_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemcategory_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemcategory_by_pk = sgqlc.types.Field('pokemon_v2_itemcategory', graphql_name='pokemon_v2_itemcategory_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemcategoryname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemcategoryname'))), graphql_name='pokemon_v2_itemcategoryname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategoryname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategoryname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemcategoryname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemcategoryname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemcategoryname_aggregate'), graphql_name='pokemon_v2_itemcategoryname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategoryname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemcategoryname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemcategoryname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemcategoryname_by_pk = sgqlc.types.Field('pokemon_v2_itemcategoryname', graphql_name='pokemon_v2_itemcategoryname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemeffecttext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemeffecttext'))), graphql_name='pokemon_v2_itemeffecttext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemeffecttext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemeffecttext_aggregate'), graphql_name='pokemon_v2_itemeffecttext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemeffecttext_by_pk = sgqlc.types.Field('pokemon_v2_itemeffecttext', graphql_name='pokemon_v2_itemeffecttext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemflavortext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemflavortext'))), graphql_name='pokemon_v2_itemflavortext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemflavortext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemflavortext_aggregate'), graphql_name='pokemon_v2_itemflavortext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemflavortext_by_pk = sgqlc.types.Field('pokemon_v2_itemflavortext', graphql_name='pokemon_v2_itemflavortext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemflingeffect = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemflingeffect'))), graphql_name='pokemon_v2_itemflingeffect', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffect_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffect_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemflingeffect_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemflingeffect_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemflingeffect_aggregate'), graphql_name='pokemon_v2_itemflingeffect_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffect_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffect_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemflingeffect_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemflingeffect_by_pk = sgqlc.types.Field('pokemon_v2_itemflingeffect', graphql_name='pokemon_v2_itemflingeffect_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemflingeffecteffecttext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemflingeffecteffecttext'))), graphql_name='pokemon_v2_itemflingeffecteffecttext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemflingeffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemflingeffecteffecttext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemflingeffecteffecttext_aggregate'), graphql_name='pokemon_v2_itemflingeffecteffecttext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemflingeffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemflingeffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemflingeffecteffecttext_by_pk = sgqlc.types.Field('pokemon_v2_itemflingeffecteffecttext', graphql_name='pokemon_v2_itemflingeffecteffecttext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemgameindex = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemgameindex'))), graphql_name='pokemon_v2_itemgameindex', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemgameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemgameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemgameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemgameindex_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemgameindex_aggregate'), graphql_name='pokemon_v2_itemgameindex_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemgameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemgameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemgameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemgameindex_by_pk = sgqlc.types.Field('pokemon_v2_itemgameindex', graphql_name='pokemon_v2_itemgameindex_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemname'))), graphql_name='pokemon_v2_itemname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemname_aggregate'), graphql_name='pokemon_v2_itemname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemname_by_pk = sgqlc.types.Field('pokemon_v2_itemname', graphql_name='pokemon_v2_itemname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itempocket = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itempocket'))), graphql_name='pokemon_v2_itempocket', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocket_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocket_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itempocket_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itempocket_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itempocket_aggregate'), graphql_name='pokemon_v2_itempocket_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocket_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocket_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itempocket_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itempocket_by_pk = sgqlc.types.Field('pokemon_v2_itempocket', graphql_name='pokemon_v2_itempocket_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itempocketname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itempocketname'))), graphql_name='pokemon_v2_itempocketname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocketname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocketname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itempocketname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itempocketname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itempocketname_aggregate'), graphql_name='pokemon_v2_itempocketname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocketname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itempocketname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itempocketname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itempocketname_by_pk = sgqlc.types.Field('pokemon_v2_itempocketname', graphql_name='pokemon_v2_itempocketname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_itemsprites = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_itemsprites'))), graphql_name='pokemon_v2_itemsprites', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemsprites_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemsprites_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemsprites_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemsprites_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_itemsprites_aggregate'), graphql_name='pokemon_v2_itemsprites_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemsprites_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_itemsprites_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_itemsprites_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_itemsprites_by_pk = sgqlc.types.Field('pokemon_v2_itemsprites', graphql_name='pokemon_v2_itemsprites_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_language = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_language'))), graphql_name='pokemon_v2_language', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_language_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_language_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_language_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_language_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_language_aggregate'), graphql_name='pokemon_v2_language_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_language_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_language_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_language_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_language_by_pk = sgqlc.types.Field('pokemon_v2_language', graphql_name='pokemon_v2_language_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_languagename = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_languagename'))), graphql_name='pokemon_v2_languagename', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_languagename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_languagename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_languagename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_languagename_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_languagename_aggregate'), graphql_name='pokemon_v2_languagename_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_languagename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_languagename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_languagename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_languagename_by_pk = sgqlc.types.Field('pokemon_v2_languagename', graphql_name='pokemon_v2_languagename_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_location = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_location'))), graphql_name='pokemon_v2_location', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_location_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_location_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_location_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_location_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_location_aggregate'), graphql_name='pokemon_v2_location_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_location_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_location_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_location_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_location_by_pk = sgqlc.types.Field('pokemon_v2_location', graphql_name='pokemon_v2_location_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_locationarea = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationarea'))), graphql_name='pokemon_v2_locationarea', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationarea_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationarea_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationarea_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationarea_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_locationarea_aggregate'), graphql_name='pokemon_v2_locationarea_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationarea_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationarea_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationarea_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationarea_by_pk = sgqlc.types.Field('pokemon_v2_locationarea', graphql_name='pokemon_v2_locationarea_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_locationareaencounterrate = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationareaencounterrate'))), graphql_name='pokemon_v2_locationareaencounterrate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationareaencounterrate_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationareaencounterrate_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_locationareaencounterrate_aggregate'), graphql_name='pokemon_v2_locationareaencounterrate_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaencounterrate_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationareaencounterrate_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationareaencounterrate_by_pk = sgqlc.types.Field('pokemon_v2_locationareaencounterrate', graphql_name='pokemon_v2_locationareaencounterrate_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_locationareaname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationareaname'))), graphql_name='pokemon_v2_locationareaname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationareaname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationareaname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_locationareaname_aggregate'), graphql_name='pokemon_v2_locationareaname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationareaname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationareaname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationareaname_by_pk = sgqlc.types.Field('pokemon_v2_locationareaname', graphql_name='pokemon_v2_locationareaname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_locationgameindex = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationgameindex'))), graphql_name='pokemon_v2_locationgameindex', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationgameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationgameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationgameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationgameindex_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_locationgameindex_aggregate'), graphql_name='pokemon_v2_locationgameindex_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationgameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationgameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationgameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationgameindex_by_pk = sgqlc.types.Field('pokemon_v2_locationgameindex', graphql_name='pokemon_v2_locationgameindex_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_locationname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_locationname'))), graphql_name='pokemon_v2_locationname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_locationname_aggregate'), graphql_name='pokemon_v2_locationname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_locationname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_locationname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_locationname_by_pk = sgqlc.types.Field('pokemon_v2_locationname', graphql_name='pokemon_v2_locationname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_machine = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_machine'))), graphql_name='pokemon_v2_machine', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_machine_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_machine_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_machine_aggregate'), graphql_name='pokemon_v2_machine_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_machine_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_machine_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_machine_by_pk = sgqlc.types.Field('pokemon_v2_machine', graphql_name='pokemon_v2_machine_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_move = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_move'))), graphql_name='pokemon_v2_move', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_move_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_move_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_move_aggregate'), graphql_name='pokemon_v2_move_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_move_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_move_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_move_by_pk = sgqlc.types.Field('pokemon_v2_move', graphql_name='pokemon_v2_move_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_moveattribute = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveattribute'))), graphql_name='pokemon_v2_moveattribute', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattribute_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattribute_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattribute_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattribute_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveattribute_aggregate'), graphql_name='pokemon_v2_moveattribute_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattribute_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattribute_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattribute_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattribute_by_pk = sgqlc.types.Field('pokemon_v2_moveattribute', graphql_name='pokemon_v2_moveattribute_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_moveattributedescription = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveattributedescription'))), graphql_name='pokemon_v2_moveattributedescription', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattributedescription_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveattributedescription_aggregate'), graphql_name='pokemon_v2_moveattributedescription_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributedescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributedescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributedescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattributedescription_by_pk = sgqlc.types.Field('pokemon_v2_moveattributedescription', graphql_name='pokemon_v2_moveattributedescription_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_moveattributemap = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveattributemap'))), graphql_name='pokemon_v2_moveattributemap', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattributemap_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveattributemap_aggregate'), graphql_name='pokemon_v2_moveattributemap_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributemap_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributemap_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributemap_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattributemap_by_pk = sgqlc.types.Field('pokemon_v2_moveattributemap', graphql_name='pokemon_v2_moveattributemap_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_moveattributename = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveattributename'))), graphql_name='pokemon_v2_moveattributename', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattributename_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveattributename_aggregate'), graphql_name='pokemon_v2_moveattributename_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveattributename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveattributename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveattributename_by_pk = sgqlc.types.Field('pokemon_v2_moveattributename', graphql_name='pokemon_v2_moveattributename_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movebattlestyle = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movebattlestyle'))), graphql_name='pokemon_v2_movebattlestyle', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestyle_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestyle_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movebattlestyle_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movebattlestyle_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movebattlestyle_aggregate'), graphql_name='pokemon_v2_movebattlestyle_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestyle_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestyle_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movebattlestyle_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movebattlestyle_by_pk = sgqlc.types.Field('pokemon_v2_movebattlestyle', graphql_name='pokemon_v2_movebattlestyle_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movebattlestylename = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movebattlestylename'))), graphql_name='pokemon_v2_movebattlestylename', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestylename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestylename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movebattlestylename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movebattlestylename_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movebattlestylename_aggregate'), graphql_name='pokemon_v2_movebattlestylename_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestylename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movebattlestylename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movebattlestylename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movebattlestylename_by_pk = sgqlc.types.Field('pokemon_v2_movebattlestylename', graphql_name='pokemon_v2_movebattlestylename_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movechange = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movechange'))), graphql_name='pokemon_v2_movechange', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movechange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movechange_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movechange_aggregate'), graphql_name='pokemon_v2_movechange_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movechange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movechange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movechange_by_pk = sgqlc.types.Field('pokemon_v2_movechange', graphql_name='pokemon_v2_movechange_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movedamageclass = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movedamageclass'))), graphql_name='pokemon_v2_movedamageclass', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclass_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclass_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movedamageclass_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movedamageclass_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movedamageclass_aggregate'), graphql_name='pokemon_v2_movedamageclass_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclass_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclass_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movedamageclass_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movedamageclass_by_pk = sgqlc.types.Field('pokemon_v2_movedamageclass', graphql_name='pokemon_v2_movedamageclass_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movedamageclassdescription = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movedamageclassdescription'))), graphql_name='pokemon_v2_movedamageclassdescription', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movedamageclassdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movedamageclassdescription_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movedamageclassdescription_aggregate'), graphql_name='pokemon_v2_movedamageclassdescription_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movedamageclassdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movedamageclassdescription_by_pk = sgqlc.types.Field('pokemon_v2_movedamageclassdescription', graphql_name='pokemon_v2_movedamageclassdescription_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movedamageclassname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movedamageclassname'))), graphql_name='pokemon_v2_movedamageclassname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movedamageclassname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movedamageclassname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movedamageclassname_aggregate'), graphql_name='pokemon_v2_movedamageclassname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movedamageclassname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movedamageclassname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movedamageclassname_by_pk = sgqlc.types.Field('pokemon_v2_movedamageclassname', graphql_name='pokemon_v2_movedamageclassname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_moveeffect = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveeffect'))), graphql_name='pokemon_v2_moveeffect', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffect_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffect_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffect_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffect_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveeffect_aggregate'), graphql_name='pokemon_v2_moveeffect_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffect_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffect_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffect_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffect_by_pk = sgqlc.types.Field('pokemon_v2_moveeffect', graphql_name='pokemon_v2_moveeffect_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_moveeffectchange = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveeffectchange'))), graphql_name='pokemon_v2_moveeffectchange', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffectchange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffectchange_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveeffectchange_aggregate'), graphql_name='pokemon_v2_moveeffectchange_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffectchange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffectchange_by_pk = sgqlc.types.Field('pokemon_v2_moveeffectchange', graphql_name='pokemon_v2_moveeffectchange_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_moveeffectchangeeffecttext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveeffectchangeeffecttext'))), graphql_name='pokemon_v2_moveeffectchangeeffecttext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchangeeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchangeeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffectchangeeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffectchangeeffecttext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveeffectchangeeffecttext_aggregate'), graphql_name='pokemon_v2_moveeffectchangeeffecttext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchangeeffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffectchangeeffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffectchangeeffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffectchangeeffecttext_by_pk = sgqlc.types.Field('pokemon_v2_moveeffectchangeeffecttext', graphql_name='pokemon_v2_moveeffectchangeeffecttext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_moveeffecteffecttext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveeffecteffecttext'))), graphql_name='pokemon_v2_moveeffecteffecttext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffecteffecttext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveeffecteffecttext_aggregate'), graphql_name='pokemon_v2_moveeffecteffecttext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffecteffecttext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveeffecteffecttext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveeffecteffecttext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveeffecteffecttext_by_pk = sgqlc.types.Field('pokemon_v2_moveeffecteffecttext', graphql_name='pokemon_v2_moveeffecteffecttext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_moveflavortext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_moveflavortext'))), graphql_name='pokemon_v2_moveflavortext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveflavortext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_moveflavortext_aggregate'), graphql_name='pokemon_v2_moveflavortext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_moveflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_moveflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_moveflavortext_by_pk = sgqlc.types.Field('pokemon_v2_moveflavortext', graphql_name='pokemon_v2_moveflavortext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movelearnmethod = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movelearnmethod'))), graphql_name='pokemon_v2_movelearnmethod', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethod_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethod_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movelearnmethod_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movelearnmethod_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movelearnmethod_aggregate'), graphql_name='pokemon_v2_movelearnmethod_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethod_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethod_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movelearnmethod_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movelearnmethod_by_pk = sgqlc.types.Field('pokemon_v2_movelearnmethod', graphql_name='pokemon_v2_movelearnmethod_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movelearnmethoddescription = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movelearnmethoddescription'))), graphql_name='pokemon_v2_movelearnmethoddescription', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethoddescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethoddescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movelearnmethoddescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movelearnmethoddescription_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movelearnmethoddescription_aggregate'), graphql_name='pokemon_v2_movelearnmethoddescription_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethoddescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethoddescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movelearnmethoddescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movelearnmethoddescription_by_pk = sgqlc.types.Field('pokemon_v2_movelearnmethoddescription', graphql_name='pokemon_v2_movelearnmethoddescription_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movelearnmethodname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movelearnmethodname'))), graphql_name='pokemon_v2_movelearnmethodname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethodname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethodname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movelearnmethodname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movelearnmethodname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movelearnmethodname_aggregate'), graphql_name='pokemon_v2_movelearnmethodname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethodname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movelearnmethodname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movelearnmethodname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movelearnmethodname_by_pk = sgqlc.types.Field('pokemon_v2_movelearnmethodname', graphql_name='pokemon_v2_movelearnmethodname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movemeta = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemeta'))), graphql_name='pokemon_v2_movemeta', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemeta_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemeta_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemeta_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemeta_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movemeta_aggregate'), graphql_name='pokemon_v2_movemeta_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemeta_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemeta_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemeta_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemeta_by_pk = sgqlc.types.Field('pokemon_v2_movemeta', graphql_name='pokemon_v2_movemeta_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movemetaailment = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetaailment'))), graphql_name='pokemon_v2_movemetaailment', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailment_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailment_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetaailment_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetaailment_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movemetaailment_aggregate'), graphql_name='pokemon_v2_movemetaailment_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailment_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailment_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetaailment_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetaailment_by_pk = sgqlc.types.Field('pokemon_v2_movemetaailment', graphql_name='pokemon_v2_movemetaailment_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movemetaailmentname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetaailmentname'))), graphql_name='pokemon_v2_movemetaailmentname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailmentname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailmentname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetaailmentname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetaailmentname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movemetaailmentname_aggregate'), graphql_name='pokemon_v2_movemetaailmentname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailmentname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetaailmentname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetaailmentname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetaailmentname_by_pk = sgqlc.types.Field('pokemon_v2_movemetaailmentname', graphql_name='pokemon_v2_movemetaailmentname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movemetacategory = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetacategory'))), graphql_name='pokemon_v2_movemetacategory', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategory_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategory_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetacategory_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetacategory_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movemetacategory_aggregate'), graphql_name='pokemon_v2_movemetacategory_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategory_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategory_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetacategory_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetacategory_by_pk = sgqlc.types.Field('pokemon_v2_movemetacategory', graphql_name='pokemon_v2_movemetacategory_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movemetacategorydescription = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetacategorydescription'))), graphql_name='pokemon_v2_movemetacategorydescription', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategorydescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategorydescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetacategorydescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetacategorydescription_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movemetacategorydescription_aggregate'), graphql_name='pokemon_v2_movemetacategorydescription_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategorydescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetacategorydescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetacategorydescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetacategorydescription_by_pk = sgqlc.types.Field('pokemon_v2_movemetacategorydescription', graphql_name='pokemon_v2_movemetacategorydescription_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movemetastatchange = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movemetastatchange'))), graphql_name='pokemon_v2_movemetastatchange', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetastatchange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetastatchange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetastatchange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetastatchange_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movemetastatchange_aggregate'), graphql_name='pokemon_v2_movemetastatchange_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetastatchange_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movemetastatchange_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movemetastatchange_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movemetastatchange_by_pk = sgqlc.types.Field('pokemon_v2_movemetastatchange', graphql_name='pokemon_v2_movemetastatchange_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movename = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movename'))), graphql_name='pokemon_v2_movename', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movename_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movename_aggregate'), graphql_name='pokemon_v2_movename_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movename_by_pk = sgqlc.types.Field('pokemon_v2_movename', graphql_name='pokemon_v2_movename_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movetarget = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movetarget'))), graphql_name='pokemon_v2_movetarget', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetarget_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetarget_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movetarget_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movetarget_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movetarget_aggregate'), graphql_name='pokemon_v2_movetarget_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetarget_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetarget_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movetarget_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movetarget_by_pk = sgqlc.types.Field('pokemon_v2_movetarget', graphql_name='pokemon_v2_movetarget_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movetargetdescription = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movetargetdescription'))), graphql_name='pokemon_v2_movetargetdescription', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movetargetdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movetargetdescription_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movetargetdescription_aggregate'), graphql_name='pokemon_v2_movetargetdescription_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movetargetdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movetargetdescription_by_pk = sgqlc.types.Field('pokemon_v2_movetargetdescription', graphql_name='pokemon_v2_movetargetdescription_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_movetargetname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_movetargetname'))), graphql_name='pokemon_v2_movetargetname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movetargetname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movetargetname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_movetargetname_aggregate'), graphql_name='pokemon_v2_movetargetname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_movetargetname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_movetargetname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_movetargetname_by_pk = sgqlc.types.Field('pokemon_v2_movetargetname', graphql_name='pokemon_v2_movetargetname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_nature = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_nature'))), graphql_name='pokemon_v2_nature', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_nature_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_nature_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_nature_aggregate'), graphql_name='pokemon_v2_nature_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_nature_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_nature_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_nature_by_pk = sgqlc.types.Field('pokemon_v2_nature', graphql_name='pokemon_v2_nature_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_naturebattlestylepreference = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_naturebattlestylepreference'))), graphql_name='pokemon_v2_naturebattlestylepreference', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturebattlestylepreference_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturebattlestylepreference_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturebattlestylepreference_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_naturebattlestylepreference_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_naturebattlestylepreference_aggregate'), graphql_name='pokemon_v2_naturebattlestylepreference_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturebattlestylepreference_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturebattlestylepreference_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturebattlestylepreference_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_naturebattlestylepreference_by_pk = sgqlc.types.Field('pokemon_v2_naturebattlestylepreference', graphql_name='pokemon_v2_naturebattlestylepreference_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_naturename = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_naturename'))), graphql_name='pokemon_v2_naturename', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_naturename_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_naturename_aggregate'), graphql_name='pokemon_v2_naturename_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_naturename_by_pk = sgqlc.types.Field('pokemon_v2_naturename', graphql_name='pokemon_v2_naturename_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_naturepokeathlonstat = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_naturepokeathlonstat'))), graphql_name='pokemon_v2_naturepokeathlonstat', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturepokeathlonstat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturepokeathlonstat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturepokeathlonstat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_naturepokeathlonstat_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_naturepokeathlonstat_aggregate'), graphql_name='pokemon_v2_naturepokeathlonstat_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturepokeathlonstat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_naturepokeathlonstat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_naturepokeathlonstat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_naturepokeathlonstat_by_pk = sgqlc.types.Field('pokemon_v2_naturepokeathlonstat', graphql_name='pokemon_v2_naturepokeathlonstat_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_palpark = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_palpark'))), graphql_name='pokemon_v2_palpark', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palpark_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palpark_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_palpark_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_palpark_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_palpark_aggregate'), graphql_name='pokemon_v2_palpark_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palpark_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palpark_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_palpark_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_palpark_by_pk = sgqlc.types.Field('pokemon_v2_palpark', graphql_name='pokemon_v2_palpark_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_palparkarea = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_palparkarea'))), graphql_name='pokemon_v2_palparkarea', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkarea_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkarea_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_palparkarea_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_palparkarea_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_palparkarea_aggregate'), graphql_name='pokemon_v2_palparkarea_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkarea_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkarea_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_palparkarea_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_palparkarea_by_pk = sgqlc.types.Field('pokemon_v2_palparkarea', graphql_name='pokemon_v2_palparkarea_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_palparkareaname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_palparkareaname'))), graphql_name='pokemon_v2_palparkareaname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkareaname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkareaname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_palparkareaname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_palparkareaname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_palparkareaname_aggregate'), graphql_name='pokemon_v2_palparkareaname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkareaname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_palparkareaname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_palparkareaname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_palparkareaname_by_pk = sgqlc.types.Field('pokemon_v2_palparkareaname', graphql_name='pokemon_v2_palparkareaname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokeathlonstat = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokeathlonstat'))), graphql_name='pokemon_v2_pokeathlonstat', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokeathlonstat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokeathlonstat_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokeathlonstat_aggregate'), graphql_name='pokemon_v2_pokeathlonstat_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokeathlonstat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokeathlonstat_by_pk = sgqlc.types.Field('pokemon_v2_pokeathlonstat', graphql_name='pokemon_v2_pokeathlonstat_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokeathlonstatname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokeathlonstatname'))), graphql_name='pokemon_v2_pokeathlonstatname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstatname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstatname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokeathlonstatname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokeathlonstatname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokeathlonstatname_aggregate'), graphql_name='pokemon_v2_pokeathlonstatname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstatname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokeathlonstatname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokeathlonstatname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokeathlonstatname_by_pk = sgqlc.types.Field('pokemon_v2_pokeathlonstatname', graphql_name='pokemon_v2_pokeathlonstatname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokedex = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokedex'))), graphql_name='pokemon_v2_pokedex', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedex_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokedex_aggregate'), graphql_name='pokemon_v2_pokedex_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedex_by_pk = sgqlc.types.Field('pokemon_v2_pokedex', graphql_name='pokemon_v2_pokedex_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokedexdescription = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokedexdescription'))), graphql_name='pokemon_v2_pokedexdescription', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexdescription_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokedexdescription_aggregate'), graphql_name='pokemon_v2_pokedexdescription_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexdescription_by_pk = sgqlc.types.Field('pokemon_v2_pokedexdescription', graphql_name='pokemon_v2_pokedexdescription_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokedexname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokedexname'))), graphql_name='pokemon_v2_pokedexname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokedexname_aggregate'), graphql_name='pokemon_v2_pokedexname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexname_by_pk = sgqlc.types.Field('pokemon_v2_pokedexname', graphql_name='pokemon_v2_pokedexname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokedexversiongroup = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokedexversiongroup'))), graphql_name='pokemon_v2_pokedexversiongroup', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexversiongroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexversiongroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexversiongroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexversiongroup_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokedexversiongroup_aggregate'), graphql_name='pokemon_v2_pokedexversiongroup_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexversiongroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokedexversiongroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokedexversiongroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokedexversiongroup_by_pk = sgqlc.types.Field('pokemon_v2_pokedexversiongroup', graphql_name='pokemon_v2_pokedexversiongroup_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemon = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemon'))), graphql_name='pokemon_v2_pokemon', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemon_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemon_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemon_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemon_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemon_aggregate'), graphql_name='pokemon_v2_pokemon_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemon_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemon_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemon_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemon_by_pk = sgqlc.types.Field('pokemon_v2_pokemon', graphql_name='pokemon_v2_pokemon_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonability = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonability'))), graphql_name='pokemon_v2_pokemonability', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonability_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonability_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonability_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonability_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonability_aggregate'), graphql_name='pokemon_v2_pokemonability_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonability_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonability_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonability_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonability_by_pk = sgqlc.types.Field('pokemon_v2_pokemonability', graphql_name='pokemon_v2_pokemonability_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemoncolor = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemoncolor'))), graphql_name='pokemon_v2_pokemoncolor', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolor_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolor_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemoncolor_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemoncolor_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemoncolor_aggregate'), graphql_name='pokemon_v2_pokemoncolor_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolor_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolor_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemoncolor_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemoncolor_by_pk = sgqlc.types.Field('pokemon_v2_pokemoncolor', graphql_name='pokemon_v2_pokemoncolor_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemoncolorname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemoncolorname'))), graphql_name='pokemon_v2_pokemoncolorname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolorname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolorname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemoncolorname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemoncolorname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemoncolorname_aggregate'), graphql_name='pokemon_v2_pokemoncolorname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolorname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemoncolorname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemoncolorname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemoncolorname_by_pk = sgqlc.types.Field('pokemon_v2_pokemoncolorname', graphql_name='pokemon_v2_pokemoncolorname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemondexnumber = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemondexnumber'))), graphql_name='pokemon_v2_pokemondexnumber', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemondexnumber_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemondexnumber_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemondexnumber_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemondexnumber_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemondexnumber_aggregate'), graphql_name='pokemon_v2_pokemondexnumber_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemondexnumber_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemondexnumber_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemondexnumber_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemondexnumber_by_pk = sgqlc.types.Field('pokemon_v2_pokemondexnumber', graphql_name='pokemon_v2_pokemondexnumber_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonegggroup = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonegggroup'))), graphql_name='pokemon_v2_pokemonegggroup', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonegggroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonegggroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonegggroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonegggroup_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonegggroup_aggregate'), graphql_name='pokemon_v2_pokemonegggroup_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonegggroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonegggroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonegggroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonegggroup_by_pk = sgqlc.types.Field('pokemon_v2_pokemonegggroup', graphql_name='pokemon_v2_pokemonegggroup_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonevolution = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonevolution'))), graphql_name='pokemon_v2_pokemonevolution', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonevolution_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonevolution_aggregate'), graphql_name='pokemon_v2_pokemonevolution_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonevolution_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonevolution_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonevolution_by_pk = sgqlc.types.Field('pokemon_v2_pokemonevolution', graphql_name='pokemon_v2_pokemonevolution_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonform = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonform'))), graphql_name='pokemon_v2_pokemonform', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonform_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonform_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonform_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonform_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonform_aggregate'), graphql_name='pokemon_v2_pokemonform_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonform_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonform_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonform_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonform_by_pk = sgqlc.types.Field('pokemon_v2_pokemonform', graphql_name='pokemon_v2_pokemonform_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonformgeneration = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonformgeneration'))), graphql_name='pokemon_v2_pokemonformgeneration', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformgeneration_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformgeneration_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformgeneration_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformgeneration_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonformgeneration_aggregate'), graphql_name='pokemon_v2_pokemonformgeneration_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformgeneration_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformgeneration_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformgeneration_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformgeneration_by_pk = sgqlc.types.Field('pokemon_v2_pokemonformgeneration', graphql_name='pokemon_v2_pokemonformgeneration_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonformname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonformname'))), graphql_name='pokemon_v2_pokemonformname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonformname_aggregate'), graphql_name='pokemon_v2_pokemonformname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformname_by_pk = sgqlc.types.Field('pokemon_v2_pokemonformname', graphql_name='pokemon_v2_pokemonformname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonformsprites = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonformsprites'))), graphql_name='pokemon_v2_pokemonformsprites', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformsprites_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformsprites_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformsprites_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformsprites_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonformsprites_aggregate'), graphql_name='pokemon_v2_pokemonformsprites_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformsprites_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformsprites_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformsprites_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformsprites_by_pk = sgqlc.types.Field('pokemon_v2_pokemonformsprites', graphql_name='pokemon_v2_pokemonformsprites_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonformtype = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonformtype'))), graphql_name='pokemon_v2_pokemonformtype', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformtype_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformtype_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformtype_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformtype_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonformtype_aggregate'), graphql_name='pokemon_v2_pokemonformtype_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformtype_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonformtype_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonformtype_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonformtype_by_pk = sgqlc.types.Field('pokemon_v2_pokemonformtype', graphql_name='pokemon_v2_pokemonformtype_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemongameindex = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemongameindex'))), graphql_name='pokemon_v2_pokemongameindex', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemongameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemongameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemongameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemongameindex_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemongameindex_aggregate'), graphql_name='pokemon_v2_pokemongameindex_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemongameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemongameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemongameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemongameindex_by_pk = sgqlc.types.Field('pokemon_v2_pokemongameindex', graphql_name='pokemon_v2_pokemongameindex_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonhabitat = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonhabitat'))), graphql_name='pokemon_v2_pokemonhabitat', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonhabitat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonhabitat_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonhabitat_aggregate'), graphql_name='pokemon_v2_pokemonhabitat_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonhabitat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonhabitat_by_pk = sgqlc.types.Field('pokemon_v2_pokemonhabitat', graphql_name='pokemon_v2_pokemonhabitat_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonhabitatname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonhabitatname'))), graphql_name='pokemon_v2_pokemonhabitatname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitatname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitatname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonhabitatname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonhabitatname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonhabitatname_aggregate'), graphql_name='pokemon_v2_pokemonhabitatname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitatname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonhabitatname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonhabitatname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonhabitatname_by_pk = sgqlc.types.Field('pokemon_v2_pokemonhabitatname', graphql_name='pokemon_v2_pokemonhabitatname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonitem = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonitem'))), graphql_name='pokemon_v2_pokemonitem', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonitem_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonitem_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonitem_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonitem_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonitem_aggregate'), graphql_name='pokemon_v2_pokemonitem_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonitem_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonitem_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonitem_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonitem_by_pk = sgqlc.types.Field('pokemon_v2_pokemonitem', graphql_name='pokemon_v2_pokemonitem_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonmove = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonmove'))), graphql_name='pokemon_v2_pokemonmove', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonmove_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonmove_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonmove_aggregate'), graphql_name='pokemon_v2_pokemonmove_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonmove_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonmove_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonmove_by_pk = sgqlc.types.Field('pokemon_v2_pokemonmove', graphql_name='pokemon_v2_pokemonmove_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonshape = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonshape'))), graphql_name='pokemon_v2_pokemonshape', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshape_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshape_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonshape_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonshape_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonshape_aggregate'), graphql_name='pokemon_v2_pokemonshape_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshape_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshape_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonshape_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonshape_by_pk = sgqlc.types.Field('pokemon_v2_pokemonshape', graphql_name='pokemon_v2_pokemonshape_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonshapename = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonshapename'))), graphql_name='pokemon_v2_pokemonshapename', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshapename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshapename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonshapename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonshapename_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonshapename_aggregate'), graphql_name='pokemon_v2_pokemonshapename_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshapename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonshapename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonshapename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonshapename_by_pk = sgqlc.types.Field('pokemon_v2_pokemonshapename', graphql_name='pokemon_v2_pokemonshapename_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonspecies = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspecies'))), graphql_name='pokemon_v2_pokemonspecies', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspecies_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspecies_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonspecies_aggregate'), graphql_name='pokemon_v2_pokemonspecies_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspecies_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspecies_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspecies_by_pk = sgqlc.types.Field('pokemon_v2_pokemonspecies', graphql_name='pokemon_v2_pokemonspecies_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonspeciesdescription = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspeciesdescription'))), graphql_name='pokemon_v2_pokemonspeciesdescription', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesdescription_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonspeciesdescription_aggregate'), graphql_name='pokemon_v2_pokemonspeciesdescription_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesdescription_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesdescription_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesdescription_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesdescription_by_pk = sgqlc.types.Field('pokemon_v2_pokemonspeciesdescription', graphql_name='pokemon_v2_pokemonspeciesdescription_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonspeciesflavortext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspeciesflavortext'))), graphql_name='pokemon_v2_pokemonspeciesflavortext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesflavortext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonspeciesflavortext_aggregate'), graphql_name='pokemon_v2_pokemonspeciesflavortext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesflavortext_by_pk = sgqlc.types.Field('pokemon_v2_pokemonspeciesflavortext', graphql_name='pokemon_v2_pokemonspeciesflavortext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonspeciesname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonspeciesname'))), graphql_name='pokemon_v2_pokemonspeciesname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonspeciesname_aggregate'), graphql_name='pokemon_v2_pokemonspeciesname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonspeciesname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonspeciesname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonspeciesname_by_pk = sgqlc.types.Field('pokemon_v2_pokemonspeciesname', graphql_name='pokemon_v2_pokemonspeciesname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonsprites = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonsprites'))), graphql_name='pokemon_v2_pokemonsprites', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonsprites_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonsprites_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonsprites_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonsprites_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonsprites_aggregate'), graphql_name='pokemon_v2_pokemonsprites_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonsprites_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonsprites_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonsprites_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonsprites_by_pk = sgqlc.types.Field('pokemon_v2_pokemonsprites', graphql_name='pokemon_v2_pokemonsprites_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemonstat = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemonstat'))), graphql_name='pokemon_v2_pokemonstat', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonstat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonstat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonstat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonstat_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemonstat_aggregate'), graphql_name='pokemon_v2_pokemonstat_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonstat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemonstat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemonstat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemonstat_by_pk = sgqlc.types.Field('pokemon_v2_pokemonstat', graphql_name='pokemon_v2_pokemonstat_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemontype = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemontype'))), graphql_name='pokemon_v2_pokemontype', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontype_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontype_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemontype_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemontype_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemontype_aggregate'), graphql_name='pokemon_v2_pokemontype_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontype_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontype_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemontype_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemontype_by_pk = sgqlc.types.Field('pokemon_v2_pokemontype', graphql_name='pokemon_v2_pokemontype_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_pokemontypepast = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_pokemontypepast'))), graphql_name='pokemon_v2_pokemontypepast', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontypepast_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontypepast_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemontypepast_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemontypepast_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_pokemontypepast_aggregate'), graphql_name='pokemon_v2_pokemontypepast_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontypepast_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_pokemontypepast_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_pokemontypepast_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_pokemontypepast_by_pk = sgqlc.types.Field('pokemon_v2_pokemontypepast', graphql_name='pokemon_v2_pokemontypepast_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_region = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_region'))), graphql_name='pokemon_v2_region', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_region_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_region_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_region_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_region_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_region_aggregate'), graphql_name='pokemon_v2_region_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_region_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_region_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_region_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_region_by_pk = sgqlc.types.Field('pokemon_v2_region', graphql_name='pokemon_v2_region_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_regionname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_regionname'))), graphql_name='pokemon_v2_regionname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_regionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_regionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_regionname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_regionname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_regionname_aggregate'), graphql_name='pokemon_v2_regionname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_regionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_regionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_regionname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_regionname_by_pk = sgqlc.types.Field('pokemon_v2_regionname', graphql_name='pokemon_v2_regionname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_stat = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_stat'))), graphql_name='pokemon_v2_stat', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_stat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_stat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_stat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_stat_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_stat_aggregate'), graphql_name='pokemon_v2_stat_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_stat_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_stat_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_stat_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_stat_by_pk = sgqlc.types.Field('pokemon_v2_stat', graphql_name='pokemon_v2_stat_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_statname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_statname'))), graphql_name='pokemon_v2_statname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_statname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_statname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_statname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_statname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_statname_aggregate'), graphql_name='pokemon_v2_statname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_statname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_statname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_statname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_statname_by_pk = sgqlc.types.Field('pokemon_v2_statname', graphql_name='pokemon_v2_statname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_supercontestcombo = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_supercontestcombo'))), graphql_name='pokemon_v2_supercontestcombo', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontestcombo_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontestcombo_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_supercontestcombo_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_supercontestcombo_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_supercontestcombo_aggregate'), graphql_name='pokemon_v2_supercontestcombo_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontestcombo_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontestcombo_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_supercontestcombo_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_supercontestcombo_by_pk = sgqlc.types.Field('pokemon_v2_supercontestcombo', graphql_name='pokemon_v2_supercontestcombo_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_supercontesteffect = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_supercontesteffect'))), graphql_name='pokemon_v2_supercontesteffect', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffect_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffect_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_supercontesteffect_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_supercontesteffect_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_supercontesteffect_aggregate'), graphql_name='pokemon_v2_supercontesteffect_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffect_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffect_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_supercontesteffect_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_supercontesteffect_by_pk = sgqlc.types.Field('pokemon_v2_supercontesteffect', graphql_name='pokemon_v2_supercontesteffect_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_supercontesteffectflavortext = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_supercontesteffectflavortext'))), graphql_name='pokemon_v2_supercontesteffectflavortext', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffectflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffectflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_supercontesteffectflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_supercontesteffectflavortext_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_supercontesteffectflavortext_aggregate'), graphql_name='pokemon_v2_supercontesteffectflavortext_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffectflavortext_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_supercontesteffectflavortext_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_supercontesteffectflavortext_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_supercontesteffectflavortext_by_pk = sgqlc.types.Field('pokemon_v2_supercontesteffectflavortext', graphql_name='pokemon_v2_supercontesteffectflavortext_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_type = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_type'))), graphql_name='pokemon_v2_type', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_type_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_type_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_type_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_type_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_type_aggregate'), graphql_name='pokemon_v2_type_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_type_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_type_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_type_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_type_by_pk = sgqlc.types.Field('pokemon_v2_type', graphql_name='pokemon_v2_type_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_typeefficacy = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_typeefficacy'))), graphql_name='pokemon_v2_typeefficacy', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typeefficacy_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typeefficacy_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typeefficacy_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_typeefficacy_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_typeefficacy_aggregate'), graphql_name='pokemon_v2_typeefficacy_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typeefficacy_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typeefficacy_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typeefficacy_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_typeefficacy_by_pk = sgqlc.types.Field('pokemon_v2_typeefficacy', graphql_name='pokemon_v2_typeefficacy_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_typegameindex = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_typegameindex'))), graphql_name='pokemon_v2_typegameindex', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typegameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typegameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typegameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_typegameindex_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_typegameindex_aggregate'), graphql_name='pokemon_v2_typegameindex_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typegameindex_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typegameindex_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typegameindex_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_typegameindex_by_pk = sgqlc.types.Field('pokemon_v2_typegameindex', graphql_name='pokemon_v2_typegameindex_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_typename = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_typename'))), graphql_name='pokemon_v2_typename', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_typename_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_typename_aggregate'), graphql_name='pokemon_v2_typename_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typename_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_typename_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_typename_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_typename_by_pk = sgqlc.types.Field('pokemon_v2_typename', graphql_name='pokemon_v2_typename_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_version = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_version'))), graphql_name='pokemon_v2_version', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_version_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_version_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_version_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_version_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_version_aggregate'), graphql_name='pokemon_v2_version_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_version_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_version_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_version_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_version_by_pk = sgqlc.types.Field('pokemon_v2_version', graphql_name='pokemon_v2_version_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_versiongroup = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_versiongroup'))), graphql_name='pokemon_v2_versiongroup', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versiongroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroup_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_versiongroup_aggregate'), graphql_name='pokemon_v2_versiongroup_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroup_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroup_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versiongroup_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroup_by_pk = sgqlc.types.Field('pokemon_v2_versiongroup', graphql_name='pokemon_v2_versiongroup_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_versiongroupmovelearnmethod = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_versiongroupmovelearnmethod'))), graphql_name='pokemon_v2_versiongroupmovelearnmethod', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupmovelearnmethod_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupmovelearnmethod_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versiongroupmovelearnmethod_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroupmovelearnmethod_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_versiongroupmovelearnmethod_aggregate'), graphql_name='pokemon_v2_versiongroupmovelearnmethod_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupmovelearnmethod_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupmovelearnmethod_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versiongroupmovelearnmethod_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroupmovelearnmethod_by_pk = sgqlc.types.Field('pokemon_v2_versiongroupmovelearnmethod', graphql_name='pokemon_v2_versiongroupmovelearnmethod_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_versiongroupregion = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_versiongroupregion'))), graphql_name='pokemon_v2_versiongroupregion', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupregion_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupregion_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versiongroupregion_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroupregion_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_versiongroupregion_aggregate'), graphql_name='pokemon_v2_versiongroupregion_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupregion_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versiongroupregion_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versiongroupregion_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versiongroupregion_by_pk = sgqlc.types.Field('pokemon_v2_versiongroupregion', graphql_name='pokemon_v2_versiongroupregion_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )
    pokemon_v2_versionname = sgqlc.types.Field(sgqlc.types.non_null(sgqlc.types.list_of(sgqlc.types.non_null('pokemon_v2_versionname'))), graphql_name='pokemon_v2_versionname', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versionname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versionname_aggregate = sgqlc.types.Field(sgqlc.types.non_null('pokemon_v2_versionname_aggregate'), graphql_name='pokemon_v2_versionname_aggregate', args=sgqlc.types.ArgDict((
        ('distinct_on', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versionname_select_column)), graphql_name='distinct_on', default=None)),
        ('limit', sgqlc.types.Arg(Int, graphql_name='limit', default=None)),
        ('offset', sgqlc.types.Arg(Int, graphql_name='offset', default=None)),
        ('order_by', sgqlc.types.Arg(sgqlc.types.list_of(sgqlc.types.non_null(pokemon_v2_versionname_order_by)), graphql_name='order_by', default=None)),
        ('where', sgqlc.types.Arg(pokemon_v2_versionname_bool_exp, graphql_name='where', default=None)),
))
    )
    pokemon_v2_versionname_by_pk = sgqlc.types.Field('pokemon_v2_versionname', graphql_name='pokemon_v2_versionname_by_pk', args=sgqlc.types.ArgDict((
        ('id', sgqlc.types.Arg(sgqlc.types.non_null(Int), graphql_name='id', default=None)),
))
    )



########################################################################
# Unions
########################################################################

########################################################################
# Schema Entry Points
########################################################################
pokeapiv1beta_schema.query_type = query_root
pokeapiv1beta_schema.mutation_type = None
pokeapiv1beta_schema.subscription_type = None

